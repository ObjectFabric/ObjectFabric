/**
 * Copyright (c) ObjectFabric Inc. All rights reserved.
 *
 * This file is part of ObjectFabric (objectfabric.com).
 *
 * ObjectFabric is licensed under the Apache License, Version 2.0, the terms
 * of which may be found at http://www.apache.org/licenses/LICENSE-2.0.html.
 *
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

package com.objectfabric.generated;

//==============================================================================
//                                                                              
//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                
//                                                                              
//==============================================================================

@SuppressWarnings({ "hiding", "unchecked", "static-access" })
public class LimitN_min extends com.objectfabric.TGeneratedFieldsN {

    public LimitN_min() {
        this(com.objectfabric.Transaction.getDefaultTrunk());
    }

    public LimitN_min(com.objectfabric.Transaction trunk) {
        this(new Version(null, FIELD_COUNT), trunk);
    }

    protected LimitN_min(com.objectfabric.TObject.Version shared, com.objectfabric.Transaction trunk) {
        super(shared, trunk);
    }

    public static final com.objectfabric.TType TYPE = new com.objectfabric.TType(com.objectfabric.generated.LimitsObjectModel.getInstance(), com.objectfabric.generated.LimitsObjectModel.COM_OBJECTFABRIC_GENERATED_LIMITN_MIN_CLASS_ID);

    public final int getInt0() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT0_INDEX);
        int value = v != null ? v._int0 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt0(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int0 = value;
        v.setBit(INT0_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt1() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT1_INDEX);
        int value = v != null ? v._int1 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt1(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int1 = value;
        v.setBit(INT1_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt2() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT2_INDEX);
        int value = v != null ? v._int2 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt2(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int2 = value;
        v.setBit(INT2_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt3() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT3_INDEX);
        int value = v != null ? v._int3 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt3(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int3 = value;
        v.setBit(INT3_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt4() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT4_INDEX);
        int value = v != null ? v._int4 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt4(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int4 = value;
        v.setBit(INT4_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt5() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT5_INDEX);
        int value = v != null ? v._int5 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt5(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int5 = value;
        v.setBit(INT5_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt6() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT6_INDEX);
        int value = v != null ? v._int6 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt6(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int6 = value;
        v.setBit(INT6_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt7() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT7_INDEX);
        int value = v != null ? v._int7 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt7(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int7 = value;
        v.setBit(INT7_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt8() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT8_INDEX);
        int value = v != null ? v._int8 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt8(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int8 = value;
        v.setBit(INT8_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt9() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT9_INDEX);
        int value = v != null ? v._int9 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt9(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int9 = value;
        v.setBit(INT9_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt10() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT10_INDEX);
        int value = v != null ? v._int10 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt10(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int10 = value;
        v.setBit(INT10_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt11() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT11_INDEX);
        int value = v != null ? v._int11 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt11(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int11 = value;
        v.setBit(INT11_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt12() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT12_INDEX);
        int value = v != null ? v._int12 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt12(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int12 = value;
        v.setBit(INT12_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt13() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT13_INDEX);
        int value = v != null ? v._int13 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt13(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int13 = value;
        v.setBit(INT13_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt14() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT14_INDEX);
        int value = v != null ? v._int14 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt14(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int14 = value;
        v.setBit(INT14_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt15() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT15_INDEX);
        int value = v != null ? v._int15 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt15(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int15 = value;
        v.setBit(INT15_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt16() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT16_INDEX);
        int value = v != null ? v._int16 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt16(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int16 = value;
        v.setBit(INT16_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt17() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT17_INDEX);
        int value = v != null ? v._int17 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt17(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int17 = value;
        v.setBit(INT17_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt18() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT18_INDEX);
        int value = v != null ? v._int18 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt18(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int18 = value;
        v.setBit(INT18_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt19() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT19_INDEX);
        int value = v != null ? v._int19 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt19(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int19 = value;
        v.setBit(INT19_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt20() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT20_INDEX);
        int value = v != null ? v._int20 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt20(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int20 = value;
        v.setBit(INT20_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt21() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT21_INDEX);
        int value = v != null ? v._int21 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt21(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int21 = value;
        v.setBit(INT21_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt22() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT22_INDEX);
        int value = v != null ? v._int22 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt22(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int22 = value;
        v.setBit(INT22_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt23() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT23_INDEX);
        int value = v != null ? v._int23 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt23(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int23 = value;
        v.setBit(INT23_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt24() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT24_INDEX);
        int value = v != null ? v._int24 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt24(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int24 = value;
        v.setBit(INT24_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt25() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT25_INDEX);
        int value = v != null ? v._int25 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt25(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int25 = value;
        v.setBit(INT25_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt26() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT26_INDEX);
        int value = v != null ? v._int26 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt26(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int26 = value;
        v.setBit(INT26_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt27() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT27_INDEX);
        int value = v != null ? v._int27 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt27(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int27 = value;
        v.setBit(INT27_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt28() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT28_INDEX);
        int value = v != null ? v._int28 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt28(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int28 = value;
        v.setBit(INT28_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt29() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT29_INDEX);
        int value = v != null ? v._int29 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt29(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int29 = value;
        v.setBit(INT29_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt30() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT30_INDEX);
        int value = v != null ? v._int30 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt30(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int30 = value;
        v.setBit(INT30_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt31() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT31_INDEX);
        int value = v != null ? v._int31 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt31(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int31 = value;
        v.setBit(INT31_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt32() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT32_INDEX);
        int value = v != null ? v._int32 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt32(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int32 = value;
        v.setBit(INT32_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt33() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT33_INDEX);
        int value = v != null ? v._int33 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt33(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int33 = value;
        v.setBit(INT33_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt34() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT34_INDEX);
        int value = v != null ? v._int34 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt34(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int34 = value;
        v.setBit(INT34_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt35() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT35_INDEX);
        int value = v != null ? v._int35 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt35(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int35 = value;
        v.setBit(INT35_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt36() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT36_INDEX);
        int value = v != null ? v._int36 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt36(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int36 = value;
        v.setBit(INT36_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt37() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT37_INDEX);
        int value = v != null ? v._int37 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt37(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int37 = value;
        v.setBit(INT37_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt38() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT38_INDEX);
        int value = v != null ? v._int38 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt38(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int38 = value;
        v.setBit(INT38_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt39() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT39_INDEX);
        int value = v != null ? v._int39 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt39(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int39 = value;
        v.setBit(INT39_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt40() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT40_INDEX);
        int value = v != null ? v._int40 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt40(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int40 = value;
        v.setBit(INT40_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt41() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT41_INDEX);
        int value = v != null ? v._int41 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt41(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int41 = value;
        v.setBit(INT41_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt42() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT42_INDEX);
        int value = v != null ? v._int42 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt42(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int42 = value;
        v.setBit(INT42_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt43() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT43_INDEX);
        int value = v != null ? v._int43 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt43(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int43 = value;
        v.setBit(INT43_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt44() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT44_INDEX);
        int value = v != null ? v._int44 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt44(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int44 = value;
        v.setBit(INT44_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt45() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT45_INDEX);
        int value = v != null ? v._int45 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt45(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int45 = value;
        v.setBit(INT45_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt46() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT46_INDEX);
        int value = v != null ? v._int46 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt46(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int46 = value;
        v.setBit(INT46_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt47() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT47_INDEX);
        int value = v != null ? v._int47 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt47(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int47 = value;
        v.setBit(INT47_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt48() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT48_INDEX);
        int value = v != null ? v._int48 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt48(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int48 = value;
        v.setBit(INT48_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt49() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT49_INDEX);
        int value = v != null ? v._int49 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt49(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int49 = value;
        v.setBit(INT49_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt50() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT50_INDEX);
        int value = v != null ? v._int50 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt50(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int50 = value;
        v.setBit(INT50_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt51() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT51_INDEX);
        int value = v != null ? v._int51 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt51(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int51 = value;
        v.setBit(INT51_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt52() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT52_INDEX);
        int value = v != null ? v._int52 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt52(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int52 = value;
        v.setBit(INT52_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt53() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT53_INDEX);
        int value = v != null ? v._int53 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt53(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int53 = value;
        v.setBit(INT53_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt54() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT54_INDEX);
        int value = v != null ? v._int54 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt54(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int54 = value;
        v.setBit(INT54_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt55() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT55_INDEX);
        int value = v != null ? v._int55 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt55(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int55 = value;
        v.setBit(INT55_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt56() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT56_INDEX);
        int value = v != null ? v._int56 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt56(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int56 = value;
        v.setBit(INT56_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt57() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT57_INDEX);
        int value = v != null ? v._int57 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt57(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int57 = value;
        v.setBit(INT57_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt58() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT58_INDEX);
        int value = v != null ? v._int58 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt58(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int58 = value;
        v.setBit(INT58_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt59() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT59_INDEX);
        int value = v != null ? v._int59 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt59(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int59 = value;
        v.setBit(INT59_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt60() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT60_INDEX);
        int value = v != null ? v._int60 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt60(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int60 = value;
        v.setBit(INT60_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt61() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT61_INDEX);
        int value = v != null ? v._int61 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt61(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int61 = value;
        v.setBit(INT61_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt62() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT62_INDEX);
        int value = v != null ? v._int62 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt62(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int62 = value;
        v.setBit(INT62_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt63() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT63_INDEX);
        int value = v != null ? v._int63 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt63(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int63 = value;
        v.setBit(INT63_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt64() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT64_INDEX);
        int value = v != null ? v._int64 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt64(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int64 = value;
        v.setBit(INT64_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt65() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT65_INDEX);
        int value = v != null ? v._int65 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt65(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int65 = value;
        v.setBit(INT65_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt66() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT66_INDEX);
        int value = v != null ? v._int66 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt66(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int66 = value;
        v.setBit(INT66_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt67() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT67_INDEX);
        int value = v != null ? v._int67 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt67(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int67 = value;
        v.setBit(INT67_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt68() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT68_INDEX);
        int value = v != null ? v._int68 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt68(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int68 = value;
        v.setBit(INT68_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt69() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT69_INDEX);
        int value = v != null ? v._int69 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt69(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int69 = value;
        v.setBit(INT69_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt70() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT70_INDEX);
        int value = v != null ? v._int70 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt70(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int70 = value;
        v.setBit(INT70_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt71() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT71_INDEX);
        int value = v != null ? v._int71 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt71(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int71 = value;
        v.setBit(INT71_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt72() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT72_INDEX);
        int value = v != null ? v._int72 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt72(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int72 = value;
        v.setBit(INT72_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt73() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT73_INDEX);
        int value = v != null ? v._int73 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt73(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int73 = value;
        v.setBit(INT73_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt74() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT74_INDEX);
        int value = v != null ? v._int74 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt74(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int74 = value;
        v.setBit(INT74_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt75() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT75_INDEX);
        int value = v != null ? v._int75 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt75(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int75 = value;
        v.setBit(INT75_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt76() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT76_INDEX);
        int value = v != null ? v._int76 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt76(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int76 = value;
        v.setBit(INT76_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt77() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT77_INDEX);
        int value = v != null ? v._int77 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt77(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int77 = value;
        v.setBit(INT77_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt78() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT78_INDEX);
        int value = v != null ? v._int78 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt78(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int78 = value;
        v.setBit(INT78_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt79() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT79_INDEX);
        int value = v != null ? v._int79 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt79(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int79 = value;
        v.setBit(INT79_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt80() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT80_INDEX);
        int value = v != null ? v._int80 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt80(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int80 = value;
        v.setBit(INT80_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt81() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT81_INDEX);
        int value = v != null ? v._int81 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt81(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int81 = value;
        v.setBit(INT81_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt82() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT82_INDEX);
        int value = v != null ? v._int82 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt82(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int82 = value;
        v.setBit(INT82_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt83() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT83_INDEX);
        int value = v != null ? v._int83 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt83(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int83 = value;
        v.setBit(INT83_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt84() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT84_INDEX);
        int value = v != null ? v._int84 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt84(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int84 = value;
        v.setBit(INT84_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt85() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT85_INDEX);
        int value = v != null ? v._int85 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt85(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int85 = value;
        v.setBit(INT85_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt86() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT86_INDEX);
        int value = v != null ? v._int86 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt86(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int86 = value;
        v.setBit(INT86_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt87() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT87_INDEX);
        int value = v != null ? v._int87 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt87(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int87 = value;
        v.setBit(INT87_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt88() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT88_INDEX);
        int value = v != null ? v._int88 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt88(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int88 = value;
        v.setBit(INT88_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt89() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT89_INDEX);
        int value = v != null ? v._int89 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt89(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int89 = value;
        v.setBit(INT89_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt90() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT90_INDEX);
        int value = v != null ? v._int90 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt90(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int90 = value;
        v.setBit(INT90_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt91() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT91_INDEX);
        int value = v != null ? v._int91 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt91(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int91 = value;
        v.setBit(INT91_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt92() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT92_INDEX);
        int value = v != null ? v._int92 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt92(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int92 = value;
        v.setBit(INT92_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt93() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT93_INDEX);
        int value = v != null ? v._int93 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt93(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int93 = value;
        v.setBit(INT93_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt94() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT94_INDEX);
        int value = v != null ? v._int94 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt94(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int94 = value;
        v.setBit(INT94_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt95() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT95_INDEX);
        int value = v != null ? v._int95 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt95(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int95 = value;
        v.setBit(INT95_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt96() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT96_INDEX);
        int value = v != null ? v._int96 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt96(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int96 = value;
        v.setBit(INT96_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt97() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT97_INDEX);
        int value = v != null ? v._int97 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt97(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int97 = value;
        v.setBit(INT97_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt98() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT98_INDEX);
        int value = v != null ? v._int98 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt98(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int98 = value;
        v.setBit(INT98_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt99() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT99_INDEX);
        int value = v != null ? v._int99 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt99(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int99 = value;
        v.setBit(INT99_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt100() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT100_INDEX);
        int value = v != null ? v._int100 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt100(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int100 = value;
        v.setBit(INT100_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt101() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT101_INDEX);
        int value = v != null ? v._int101 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt101(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int101 = value;
        v.setBit(INT101_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt102() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT102_INDEX);
        int value = v != null ? v._int102 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt102(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int102 = value;
        v.setBit(INT102_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt103() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT103_INDEX);
        int value = v != null ? v._int103 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt103(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int103 = value;
        v.setBit(INT103_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt104() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT104_INDEX);
        int value = v != null ? v._int104 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt104(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int104 = value;
        v.setBit(INT104_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt105() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT105_INDEX);
        int value = v != null ? v._int105 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt105(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int105 = value;
        v.setBit(INT105_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt106() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT106_INDEX);
        int value = v != null ? v._int106 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt106(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int106 = value;
        v.setBit(INT106_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt107() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT107_INDEX);
        int value = v != null ? v._int107 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt107(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int107 = value;
        v.setBit(INT107_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt108() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT108_INDEX);
        int value = v != null ? v._int108 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt108(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int108 = value;
        v.setBit(INT108_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt109() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT109_INDEX);
        int value = v != null ? v._int109 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt109(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int109 = value;
        v.setBit(INT109_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt110() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT110_INDEX);
        int value = v != null ? v._int110 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt110(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int110 = value;
        v.setBit(INT110_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt111() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT111_INDEX);
        int value = v != null ? v._int111 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt111(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int111 = value;
        v.setBit(INT111_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt112() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT112_INDEX);
        int value = v != null ? v._int112 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt112(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int112 = value;
        v.setBit(INT112_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt113() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT113_INDEX);
        int value = v != null ? v._int113 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt113(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int113 = value;
        v.setBit(INT113_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt114() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT114_INDEX);
        int value = v != null ? v._int114 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt114(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int114 = value;
        v.setBit(INT114_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt115() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT115_INDEX);
        int value = v != null ? v._int115 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt115(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int115 = value;
        v.setBit(INT115_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt116() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT116_INDEX);
        int value = v != null ? v._int116 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt116(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int116 = value;
        v.setBit(INT116_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt117() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT117_INDEX);
        int value = v != null ? v._int117 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt117(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int117 = value;
        v.setBit(INT117_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt118() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT118_INDEX);
        int value = v != null ? v._int118 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt118(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int118 = value;
        v.setBit(INT118_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt119() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT119_INDEX);
        int value = v != null ? v._int119 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt119(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int119 = value;
        v.setBit(INT119_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt120() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT120_INDEX);
        int value = v != null ? v._int120 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt120(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int120 = value;
        v.setBit(INT120_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt121() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT121_INDEX);
        int value = v != null ? v._int121 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt121(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int121 = value;
        v.setBit(INT121_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt122() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT122_INDEX);
        int value = v != null ? v._int122 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt122(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int122 = value;
        v.setBit(INT122_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt123() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT123_INDEX);
        int value = v != null ? v._int123 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt123(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int123 = value;
        v.setBit(INT123_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt124() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT124_INDEX);
        int value = v != null ? v._int124 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt124(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int124 = value;
        v.setBit(INT124_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt125() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT125_INDEX);
        int value = v != null ? v._int125 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt125(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int125 = value;
        v.setBit(INT125_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt126() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT126_INDEX);
        int value = v != null ? v._int126 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt126(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int126 = value;
        v.setBit(INT126_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt127() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT127_INDEX);
        int value = v != null ? v._int127 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt127(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int127 = value;
        v.setBit(INT127_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt128() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT128_INDEX);
        int value = v != null ? v._int128 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt128(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int128 = value;
        v.setBit(INT128_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt129() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT129_INDEX);
        int value = v != null ? v._int129 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt129(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int129 = value;
        v.setBit(INT129_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt130() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT130_INDEX);
        int value = v != null ? v._int130 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt130(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int130 = value;
        v.setBit(INT130_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt131() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT131_INDEX);
        int value = v != null ? v._int131 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt131(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int131 = value;
        v.setBit(INT131_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt132() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT132_INDEX);
        int value = v != null ? v._int132 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt132(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int132 = value;
        v.setBit(INT132_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt133() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT133_INDEX);
        int value = v != null ? v._int133 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt133(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int133 = value;
        v.setBit(INT133_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt134() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT134_INDEX);
        int value = v != null ? v._int134 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt134(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int134 = value;
        v.setBit(INT134_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt135() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT135_INDEX);
        int value = v != null ? v._int135 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt135(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int135 = value;
        v.setBit(INT135_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt136() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT136_INDEX);
        int value = v != null ? v._int136 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt136(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int136 = value;
        v.setBit(INT136_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt137() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT137_INDEX);
        int value = v != null ? v._int137 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt137(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int137 = value;
        v.setBit(INT137_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt138() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT138_INDEX);
        int value = v != null ? v._int138 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt138(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int138 = value;
        v.setBit(INT138_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt139() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT139_INDEX);
        int value = v != null ? v._int139 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt139(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int139 = value;
        v.setBit(INT139_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt140() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT140_INDEX);
        int value = v != null ? v._int140 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt140(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int140 = value;
        v.setBit(INT140_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt141() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT141_INDEX);
        int value = v != null ? v._int141 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt141(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int141 = value;
        v.setBit(INT141_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt142() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT142_INDEX);
        int value = v != null ? v._int142 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt142(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int142 = value;
        v.setBit(INT142_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt143() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT143_INDEX);
        int value = v != null ? v._int143 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt143(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int143 = value;
        v.setBit(INT143_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt144() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT144_INDEX);
        int value = v != null ? v._int144 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt144(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int144 = value;
        v.setBit(INT144_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt145() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT145_INDEX);
        int value = v != null ? v._int145 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt145(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int145 = value;
        v.setBit(INT145_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt146() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT146_INDEX);
        int value = v != null ? v._int146 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt146(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int146 = value;
        v.setBit(INT146_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt147() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT147_INDEX);
        int value = v != null ? v._int147 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt147(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int147 = value;
        v.setBit(INT147_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt148() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT148_INDEX);
        int value = v != null ? v._int148 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt148(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int148 = value;
        v.setBit(INT148_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt149() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT149_INDEX);
        int value = v != null ? v._int149 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt149(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int149 = value;
        v.setBit(INT149_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt150() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT150_INDEX);
        int value = v != null ? v._int150 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt150(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int150 = value;
        v.setBit(INT150_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt151() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT151_INDEX);
        int value = v != null ? v._int151 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt151(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int151 = value;
        v.setBit(INT151_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt152() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT152_INDEX);
        int value = v != null ? v._int152 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt152(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int152 = value;
        v.setBit(INT152_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt153() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT153_INDEX);
        int value = v != null ? v._int153 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt153(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int153 = value;
        v.setBit(INT153_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt154() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT154_INDEX);
        int value = v != null ? v._int154 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt154(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int154 = value;
        v.setBit(INT154_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt155() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT155_INDEX);
        int value = v != null ? v._int155 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt155(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int155 = value;
        v.setBit(INT155_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt156() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT156_INDEX);
        int value = v != null ? v._int156 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt156(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int156 = value;
        v.setBit(INT156_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt157() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT157_INDEX);
        int value = v != null ? v._int157 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt157(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int157 = value;
        v.setBit(INT157_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt158() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT158_INDEX);
        int value = v != null ? v._int158 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt158(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int158 = value;
        v.setBit(INT158_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt159() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT159_INDEX);
        int value = v != null ? v._int159 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt159(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int159 = value;
        v.setBit(INT159_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt160() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT160_INDEX);
        int value = v != null ? v._int160 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt160(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int160 = value;
        v.setBit(INT160_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt161() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT161_INDEX);
        int value = v != null ? v._int161 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt161(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int161 = value;
        v.setBit(INT161_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt162() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT162_INDEX);
        int value = v != null ? v._int162 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt162(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int162 = value;
        v.setBit(INT162_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt163() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT163_INDEX);
        int value = v != null ? v._int163 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt163(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int163 = value;
        v.setBit(INT163_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt164() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT164_INDEX);
        int value = v != null ? v._int164 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt164(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int164 = value;
        v.setBit(INT164_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt165() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT165_INDEX);
        int value = v != null ? v._int165 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt165(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int165 = value;
        v.setBit(INT165_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt166() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT166_INDEX);
        int value = v != null ? v._int166 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt166(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int166 = value;
        v.setBit(INT166_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt167() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT167_INDEX);
        int value = v != null ? v._int167 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt167(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int167 = value;
        v.setBit(INT167_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt168() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT168_INDEX);
        int value = v != null ? v._int168 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt168(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int168 = value;
        v.setBit(INT168_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt169() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT169_INDEX);
        int value = v != null ? v._int169 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt169(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int169 = value;
        v.setBit(INT169_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt170() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT170_INDEX);
        int value = v != null ? v._int170 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt170(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int170 = value;
        v.setBit(INT170_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt171() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT171_INDEX);
        int value = v != null ? v._int171 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt171(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int171 = value;
        v.setBit(INT171_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt172() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT172_INDEX);
        int value = v != null ? v._int172 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt172(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int172 = value;
        v.setBit(INT172_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt173() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT173_INDEX);
        int value = v != null ? v._int173 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt173(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int173 = value;
        v.setBit(INT173_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt174() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT174_INDEX);
        int value = v != null ? v._int174 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt174(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int174 = value;
        v.setBit(INT174_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt175() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT175_INDEX);
        int value = v != null ? v._int175 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt175(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int175 = value;
        v.setBit(INT175_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt176() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT176_INDEX);
        int value = v != null ? v._int176 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt176(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int176 = value;
        v.setBit(INT176_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt177() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT177_INDEX);
        int value = v != null ? v._int177 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt177(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int177 = value;
        v.setBit(INT177_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt178() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT178_INDEX);
        int value = v != null ? v._int178 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt178(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int178 = value;
        v.setBit(INT178_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt179() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT179_INDEX);
        int value = v != null ? v._int179 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt179(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int179 = value;
        v.setBit(INT179_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt180() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT180_INDEX);
        int value = v != null ? v._int180 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt180(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int180 = value;
        v.setBit(INT180_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt181() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT181_INDEX);
        int value = v != null ? v._int181 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt181(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int181 = value;
        v.setBit(INT181_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt182() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT182_INDEX);
        int value = v != null ? v._int182 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt182(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int182 = value;
        v.setBit(INT182_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt183() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT183_INDEX);
        int value = v != null ? v._int183 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt183(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int183 = value;
        v.setBit(INT183_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt184() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT184_INDEX);
        int value = v != null ? v._int184 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt184(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int184 = value;
        v.setBit(INT184_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt185() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT185_INDEX);
        int value = v != null ? v._int185 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt185(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int185 = value;
        v.setBit(INT185_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt186() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT186_INDEX);
        int value = v != null ? v._int186 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt186(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int186 = value;
        v.setBit(INT186_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt187() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT187_INDEX);
        int value = v != null ? v._int187 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt187(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int187 = value;
        v.setBit(INT187_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt188() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT188_INDEX);
        int value = v != null ? v._int188 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt188(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int188 = value;
        v.setBit(INT188_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt189() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT189_INDEX);
        int value = v != null ? v._int189 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt189(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int189 = value;
        v.setBit(INT189_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt190() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT190_INDEX);
        int value = v != null ? v._int190 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt190(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int190 = value;
        v.setBit(INT190_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt191() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT191_INDEX);
        int value = v != null ? v._int191 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt191(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int191 = value;
        v.setBit(INT191_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt192() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT192_INDEX);
        int value = v != null ? v._int192 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt192(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int192 = value;
        v.setBit(INT192_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt193() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT193_INDEX);
        int value = v != null ? v._int193 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt193(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int193 = value;
        v.setBit(INT193_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt194() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT194_INDEX);
        int value = v != null ? v._int194 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt194(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int194 = value;
        v.setBit(INT194_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt195() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT195_INDEX);
        int value = v != null ? v._int195 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt195(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int195 = value;
        v.setBit(INT195_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt196() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT196_INDEX);
        int value = v != null ? v._int196 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt196(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int196 = value;
        v.setBit(INT196_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt197() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT197_INDEX);
        int value = v != null ? v._int197 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt197(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int197 = value;
        v.setBit(INT197_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt198() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT198_INDEX);
        int value = v != null ? v._int198 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt198(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int198 = value;
        v.setBit(INT198_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt199() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT199_INDEX);
        int value = v != null ? v._int199 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt199(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int199 = value;
        v.setBit(INT199_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt200() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT200_INDEX);
        int value = v != null ? v._int200 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt200(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int200 = value;
        v.setBit(INT200_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt201() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT201_INDEX);
        int value = v != null ? v._int201 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt201(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int201 = value;
        v.setBit(INT201_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt202() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT202_INDEX);
        int value = v != null ? v._int202 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt202(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int202 = value;
        v.setBit(INT202_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt203() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT203_INDEX);
        int value = v != null ? v._int203 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt203(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int203 = value;
        v.setBit(INT203_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt204() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT204_INDEX);
        int value = v != null ? v._int204 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt204(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int204 = value;
        v.setBit(INT204_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt205() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT205_INDEX);
        int value = v != null ? v._int205 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt205(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int205 = value;
        v.setBit(INT205_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt206() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT206_INDEX);
        int value = v != null ? v._int206 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt206(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int206 = value;
        v.setBit(INT206_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt207() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT207_INDEX);
        int value = v != null ? v._int207 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt207(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int207 = value;
        v.setBit(INT207_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt208() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT208_INDEX);
        int value = v != null ? v._int208 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt208(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int208 = value;
        v.setBit(INT208_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt209() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT209_INDEX);
        int value = v != null ? v._int209 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt209(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int209 = value;
        v.setBit(INT209_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt210() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT210_INDEX);
        int value = v != null ? v._int210 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt210(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int210 = value;
        v.setBit(INT210_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt211() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT211_INDEX);
        int value = v != null ? v._int211 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt211(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int211 = value;
        v.setBit(INT211_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt212() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT212_INDEX);
        int value = v != null ? v._int212 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt212(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int212 = value;
        v.setBit(INT212_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt213() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT213_INDEX);
        int value = v != null ? v._int213 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt213(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int213 = value;
        v.setBit(INT213_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt214() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT214_INDEX);
        int value = v != null ? v._int214 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt214(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int214 = value;
        v.setBit(INT214_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt215() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT215_INDEX);
        int value = v != null ? v._int215 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt215(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int215 = value;
        v.setBit(INT215_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt216() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT216_INDEX);
        int value = v != null ? v._int216 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt216(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int216 = value;
        v.setBit(INT216_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt217() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT217_INDEX);
        int value = v != null ? v._int217 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt217(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int217 = value;
        v.setBit(INT217_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt218() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT218_INDEX);
        int value = v != null ? v._int218 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt218(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int218 = value;
        v.setBit(INT218_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt219() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT219_INDEX);
        int value = v != null ? v._int219 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt219(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int219 = value;
        v.setBit(INT219_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt220() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT220_INDEX);
        int value = v != null ? v._int220 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt220(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int220 = value;
        v.setBit(INT220_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt221() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT221_INDEX);
        int value = v != null ? v._int221 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt221(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int221 = value;
        v.setBit(INT221_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt222() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT222_INDEX);
        int value = v != null ? v._int222 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt222(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int222 = value;
        v.setBit(INT222_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt223() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT223_INDEX);
        int value = v != null ? v._int223 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt223(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int223 = value;
        v.setBit(INT223_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt224() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT224_INDEX);
        int value = v != null ? v._int224 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt224(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int224 = value;
        v.setBit(INT224_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt225() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT225_INDEX);
        int value = v != null ? v._int225 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt225(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int225 = value;
        v.setBit(INT225_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt226() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT226_INDEX);
        int value = v != null ? v._int226 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt226(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int226 = value;
        v.setBit(INT226_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt227() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT227_INDEX);
        int value = v != null ? v._int227 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt227(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int227 = value;
        v.setBit(INT227_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt228() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT228_INDEX);
        int value = v != null ? v._int228 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt228(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int228 = value;
        v.setBit(INT228_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt229() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT229_INDEX);
        int value = v != null ? v._int229 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt229(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int229 = value;
        v.setBit(INT229_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt230() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT230_INDEX);
        int value = v != null ? v._int230 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt230(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int230 = value;
        v.setBit(INT230_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt231() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT231_INDEX);
        int value = v != null ? v._int231 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt231(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int231 = value;
        v.setBit(INT231_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt232() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT232_INDEX);
        int value = v != null ? v._int232 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt232(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int232 = value;
        v.setBit(INT232_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt233() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT233_INDEX);
        int value = v != null ? v._int233 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt233(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int233 = value;
        v.setBit(INT233_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt234() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT234_INDEX);
        int value = v != null ? v._int234 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt234(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int234 = value;
        v.setBit(INT234_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt235() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT235_INDEX);
        int value = v != null ? v._int235 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt235(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int235 = value;
        v.setBit(INT235_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt236() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT236_INDEX);
        int value = v != null ? v._int236 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt236(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int236 = value;
        v.setBit(INT236_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt237() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT237_INDEX);
        int value = v != null ? v._int237 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt237(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int237 = value;
        v.setBit(INT237_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt238() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT238_INDEX);
        int value = v != null ? v._int238 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt238(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int238 = value;
        v.setBit(INT238_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt239() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT239_INDEX);
        int value = v != null ? v._int239 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt239(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int239 = value;
        v.setBit(INT239_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt240() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT240_INDEX);
        int value = v != null ? v._int240 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt240(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int240 = value;
        v.setBit(INT240_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt241() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT241_INDEX);
        int value = v != null ? v._int241 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt241(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int241 = value;
        v.setBit(INT241_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt242() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT242_INDEX);
        int value = v != null ? v._int242 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt242(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int242 = value;
        v.setBit(INT242_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt243() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT243_INDEX);
        int value = v != null ? v._int243 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt243(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int243 = value;
        v.setBit(INT243_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt244() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT244_INDEX);
        int value = v != null ? v._int244 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt244(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int244 = value;
        v.setBit(INT244_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt245() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT245_INDEX);
        int value = v != null ? v._int245 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt245(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int245 = value;
        v.setBit(INT245_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt246() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT246_INDEX);
        int value = v != null ? v._int246 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt246(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int246 = value;
        v.setBit(INT246_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt247() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT247_INDEX);
        int value = v != null ? v._int247 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt247(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int247 = value;
        v.setBit(INT247_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt248() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT248_INDEX);
        int value = v != null ? v._int248 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt248(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int248 = value;
        v.setBit(INT248_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt249() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT249_INDEX);
        int value = v != null ? v._int249 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt249(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int249 = value;
        v.setBit(INT249_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt250() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT250_INDEX);
        int value = v != null ? v._int250 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt250(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int250 = value;
        v.setBit(INT250_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt251() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT251_INDEX);
        int value = v != null ? v._int251 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt251(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int251 = value;
        v.setBit(INT251_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt252() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT252_INDEX);
        int value = v != null ? v._int252 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt252(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int252 = value;
        v.setBit(INT252_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt253() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT253_INDEX);
        int value = v != null ? v._int253 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt253(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int253 = value;
        v.setBit(INT253_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt254() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT254_INDEX);
        int value = v != null ? v._int254 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt254(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int254 = value;
        v.setBit(INT254_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt255() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT255_INDEX);
        int value = v != null ? v._int255 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt255(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int255 = value;
        v.setBit(INT255_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public final int getInt256() {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startRead_objectfabric(outer);
        Version v = (Version) getTIndexedNVersion_objectfabric(inner, INT256_INDEX);
        int value = v != null ? v._int256 : 0;
        endRead_objectfabric(outer, inner);
        return value;
    }

    public final void setInt256(int value) {
        com.objectfabric.Transaction outer = com.objectfabric.Transaction.getCurrent();
        com.objectfabric.Transaction inner = startWrite_objectfabric(outer);
        Version v = (Version) getOrCreateVersion_objectfabric(inner);
        v._int256 = value;
        v.setBit(INT256_INDEX);
        endWrite_objectfabric(outer, inner);
    }

    public static final int INT0_INDEX = 0;

    public static final java.lang.String INT0_NAME = "int0";

    public static final java.lang.Class INT0_CLASS = int.class;

    public static final int INT1_INDEX = 1;

    public static final java.lang.String INT1_NAME = "int1";

    public static final java.lang.Class INT1_CLASS = int.class;

    public static final int INT2_INDEX = 2;

    public static final java.lang.String INT2_NAME = "int2";

    public static final java.lang.Class INT2_CLASS = int.class;

    public static final int INT3_INDEX = 3;

    public static final java.lang.String INT3_NAME = "int3";

    public static final java.lang.Class INT3_CLASS = int.class;

    public static final int INT4_INDEX = 4;

    public static final java.lang.String INT4_NAME = "int4";

    public static final java.lang.Class INT4_CLASS = int.class;

    public static final int INT5_INDEX = 5;

    public static final java.lang.String INT5_NAME = "int5";

    public static final java.lang.Class INT5_CLASS = int.class;

    public static final int INT6_INDEX = 6;

    public static final java.lang.String INT6_NAME = "int6";

    public static final java.lang.Class INT6_CLASS = int.class;

    public static final int INT7_INDEX = 7;

    public static final java.lang.String INT7_NAME = "int7";

    public static final java.lang.Class INT7_CLASS = int.class;

    public static final int INT8_INDEX = 8;

    public static final java.lang.String INT8_NAME = "int8";

    public static final java.lang.Class INT8_CLASS = int.class;

    public static final int INT9_INDEX = 9;

    public static final java.lang.String INT9_NAME = "int9";

    public static final java.lang.Class INT9_CLASS = int.class;

    public static final int INT10_INDEX = 10;

    public static final java.lang.String INT10_NAME = "int10";

    public static final java.lang.Class INT10_CLASS = int.class;

    public static final int INT11_INDEX = 11;

    public static final java.lang.String INT11_NAME = "int11";

    public static final java.lang.Class INT11_CLASS = int.class;

    public static final int INT12_INDEX = 12;

    public static final java.lang.String INT12_NAME = "int12";

    public static final java.lang.Class INT12_CLASS = int.class;

    public static final int INT13_INDEX = 13;

    public static final java.lang.String INT13_NAME = "int13";

    public static final java.lang.Class INT13_CLASS = int.class;

    public static final int INT14_INDEX = 14;

    public static final java.lang.String INT14_NAME = "int14";

    public static final java.lang.Class INT14_CLASS = int.class;

    public static final int INT15_INDEX = 15;

    public static final java.lang.String INT15_NAME = "int15";

    public static final java.lang.Class INT15_CLASS = int.class;

    public static final int INT16_INDEX = 16;

    public static final java.lang.String INT16_NAME = "int16";

    public static final java.lang.Class INT16_CLASS = int.class;

    public static final int INT17_INDEX = 17;

    public static final java.lang.String INT17_NAME = "int17";

    public static final java.lang.Class INT17_CLASS = int.class;

    public static final int INT18_INDEX = 18;

    public static final java.lang.String INT18_NAME = "int18";

    public static final java.lang.Class INT18_CLASS = int.class;

    public static final int INT19_INDEX = 19;

    public static final java.lang.String INT19_NAME = "int19";

    public static final java.lang.Class INT19_CLASS = int.class;

    public static final int INT20_INDEX = 20;

    public static final java.lang.String INT20_NAME = "int20";

    public static final java.lang.Class INT20_CLASS = int.class;

    public static final int INT21_INDEX = 21;

    public static final java.lang.String INT21_NAME = "int21";

    public static final java.lang.Class INT21_CLASS = int.class;

    public static final int INT22_INDEX = 22;

    public static final java.lang.String INT22_NAME = "int22";

    public static final java.lang.Class INT22_CLASS = int.class;

    public static final int INT23_INDEX = 23;

    public static final java.lang.String INT23_NAME = "int23";

    public static final java.lang.Class INT23_CLASS = int.class;

    public static final int INT24_INDEX = 24;

    public static final java.lang.String INT24_NAME = "int24";

    public static final java.lang.Class INT24_CLASS = int.class;

    public static final int INT25_INDEX = 25;

    public static final java.lang.String INT25_NAME = "int25";

    public static final java.lang.Class INT25_CLASS = int.class;

    public static final int INT26_INDEX = 26;

    public static final java.lang.String INT26_NAME = "int26";

    public static final java.lang.Class INT26_CLASS = int.class;

    public static final int INT27_INDEX = 27;

    public static final java.lang.String INT27_NAME = "int27";

    public static final java.lang.Class INT27_CLASS = int.class;

    public static final int INT28_INDEX = 28;

    public static final java.lang.String INT28_NAME = "int28";

    public static final java.lang.Class INT28_CLASS = int.class;

    public static final int INT29_INDEX = 29;

    public static final java.lang.String INT29_NAME = "int29";

    public static final java.lang.Class INT29_CLASS = int.class;

    public static final int INT30_INDEX = 30;

    public static final java.lang.String INT30_NAME = "int30";

    public static final java.lang.Class INT30_CLASS = int.class;

    public static final int INT31_INDEX = 31;

    public static final java.lang.String INT31_NAME = "int31";

    public static final java.lang.Class INT31_CLASS = int.class;

    public static final int INT32_INDEX = 32;

    public static final java.lang.String INT32_NAME = "int32";

    public static final java.lang.Class INT32_CLASS = int.class;

    public static final int INT33_INDEX = 33;

    public static final java.lang.String INT33_NAME = "int33";

    public static final java.lang.Class INT33_CLASS = int.class;

    public static final int INT34_INDEX = 34;

    public static final java.lang.String INT34_NAME = "int34";

    public static final java.lang.Class INT34_CLASS = int.class;

    public static final int INT35_INDEX = 35;

    public static final java.lang.String INT35_NAME = "int35";

    public static final java.lang.Class INT35_CLASS = int.class;

    public static final int INT36_INDEX = 36;

    public static final java.lang.String INT36_NAME = "int36";

    public static final java.lang.Class INT36_CLASS = int.class;

    public static final int INT37_INDEX = 37;

    public static final java.lang.String INT37_NAME = "int37";

    public static final java.lang.Class INT37_CLASS = int.class;

    public static final int INT38_INDEX = 38;

    public static final java.lang.String INT38_NAME = "int38";

    public static final java.lang.Class INT38_CLASS = int.class;

    public static final int INT39_INDEX = 39;

    public static final java.lang.String INT39_NAME = "int39";

    public static final java.lang.Class INT39_CLASS = int.class;

    public static final int INT40_INDEX = 40;

    public static final java.lang.String INT40_NAME = "int40";

    public static final java.lang.Class INT40_CLASS = int.class;

    public static final int INT41_INDEX = 41;

    public static final java.lang.String INT41_NAME = "int41";

    public static final java.lang.Class INT41_CLASS = int.class;

    public static final int INT42_INDEX = 42;

    public static final java.lang.String INT42_NAME = "int42";

    public static final java.lang.Class INT42_CLASS = int.class;

    public static final int INT43_INDEX = 43;

    public static final java.lang.String INT43_NAME = "int43";

    public static final java.lang.Class INT43_CLASS = int.class;

    public static final int INT44_INDEX = 44;

    public static final java.lang.String INT44_NAME = "int44";

    public static final java.lang.Class INT44_CLASS = int.class;

    public static final int INT45_INDEX = 45;

    public static final java.lang.String INT45_NAME = "int45";

    public static final java.lang.Class INT45_CLASS = int.class;

    public static final int INT46_INDEX = 46;

    public static final java.lang.String INT46_NAME = "int46";

    public static final java.lang.Class INT46_CLASS = int.class;

    public static final int INT47_INDEX = 47;

    public static final java.lang.String INT47_NAME = "int47";

    public static final java.lang.Class INT47_CLASS = int.class;

    public static final int INT48_INDEX = 48;

    public static final java.lang.String INT48_NAME = "int48";

    public static final java.lang.Class INT48_CLASS = int.class;

    public static final int INT49_INDEX = 49;

    public static final java.lang.String INT49_NAME = "int49";

    public static final java.lang.Class INT49_CLASS = int.class;

    public static final int INT50_INDEX = 50;

    public static final java.lang.String INT50_NAME = "int50";

    public static final java.lang.Class INT50_CLASS = int.class;

    public static final int INT51_INDEX = 51;

    public static final java.lang.String INT51_NAME = "int51";

    public static final java.lang.Class INT51_CLASS = int.class;

    public static final int INT52_INDEX = 52;

    public static final java.lang.String INT52_NAME = "int52";

    public static final java.lang.Class INT52_CLASS = int.class;

    public static final int INT53_INDEX = 53;

    public static final java.lang.String INT53_NAME = "int53";

    public static final java.lang.Class INT53_CLASS = int.class;

    public static final int INT54_INDEX = 54;

    public static final java.lang.String INT54_NAME = "int54";

    public static final java.lang.Class INT54_CLASS = int.class;

    public static final int INT55_INDEX = 55;

    public static final java.lang.String INT55_NAME = "int55";

    public static final java.lang.Class INT55_CLASS = int.class;

    public static final int INT56_INDEX = 56;

    public static final java.lang.String INT56_NAME = "int56";

    public static final java.lang.Class INT56_CLASS = int.class;

    public static final int INT57_INDEX = 57;

    public static final java.lang.String INT57_NAME = "int57";

    public static final java.lang.Class INT57_CLASS = int.class;

    public static final int INT58_INDEX = 58;

    public static final java.lang.String INT58_NAME = "int58";

    public static final java.lang.Class INT58_CLASS = int.class;

    public static final int INT59_INDEX = 59;

    public static final java.lang.String INT59_NAME = "int59";

    public static final java.lang.Class INT59_CLASS = int.class;

    public static final int INT60_INDEX = 60;

    public static final java.lang.String INT60_NAME = "int60";

    public static final java.lang.Class INT60_CLASS = int.class;

    public static final int INT61_INDEX = 61;

    public static final java.lang.String INT61_NAME = "int61";

    public static final java.lang.Class INT61_CLASS = int.class;

    public static final int INT62_INDEX = 62;

    public static final java.lang.String INT62_NAME = "int62";

    public static final java.lang.Class INT62_CLASS = int.class;

    public static final int INT63_INDEX = 63;

    public static final java.lang.String INT63_NAME = "int63";

    public static final java.lang.Class INT63_CLASS = int.class;

    public static final int INT64_INDEX = 64;

    public static final java.lang.String INT64_NAME = "int64";

    public static final java.lang.Class INT64_CLASS = int.class;

    public static final int INT65_INDEX = 65;

    public static final java.lang.String INT65_NAME = "int65";

    public static final java.lang.Class INT65_CLASS = int.class;

    public static final int INT66_INDEX = 66;

    public static final java.lang.String INT66_NAME = "int66";

    public static final java.lang.Class INT66_CLASS = int.class;

    public static final int INT67_INDEX = 67;

    public static final java.lang.String INT67_NAME = "int67";

    public static final java.lang.Class INT67_CLASS = int.class;

    public static final int INT68_INDEX = 68;

    public static final java.lang.String INT68_NAME = "int68";

    public static final java.lang.Class INT68_CLASS = int.class;

    public static final int INT69_INDEX = 69;

    public static final java.lang.String INT69_NAME = "int69";

    public static final java.lang.Class INT69_CLASS = int.class;

    public static final int INT70_INDEX = 70;

    public static final java.lang.String INT70_NAME = "int70";

    public static final java.lang.Class INT70_CLASS = int.class;

    public static final int INT71_INDEX = 71;

    public static final java.lang.String INT71_NAME = "int71";

    public static final java.lang.Class INT71_CLASS = int.class;

    public static final int INT72_INDEX = 72;

    public static final java.lang.String INT72_NAME = "int72";

    public static final java.lang.Class INT72_CLASS = int.class;

    public static final int INT73_INDEX = 73;

    public static final java.lang.String INT73_NAME = "int73";

    public static final java.lang.Class INT73_CLASS = int.class;

    public static final int INT74_INDEX = 74;

    public static final java.lang.String INT74_NAME = "int74";

    public static final java.lang.Class INT74_CLASS = int.class;

    public static final int INT75_INDEX = 75;

    public static final java.lang.String INT75_NAME = "int75";

    public static final java.lang.Class INT75_CLASS = int.class;

    public static final int INT76_INDEX = 76;

    public static final java.lang.String INT76_NAME = "int76";

    public static final java.lang.Class INT76_CLASS = int.class;

    public static final int INT77_INDEX = 77;

    public static final java.lang.String INT77_NAME = "int77";

    public static final java.lang.Class INT77_CLASS = int.class;

    public static final int INT78_INDEX = 78;

    public static final java.lang.String INT78_NAME = "int78";

    public static final java.lang.Class INT78_CLASS = int.class;

    public static final int INT79_INDEX = 79;

    public static final java.lang.String INT79_NAME = "int79";

    public static final java.lang.Class INT79_CLASS = int.class;

    public static final int INT80_INDEX = 80;

    public static final java.lang.String INT80_NAME = "int80";

    public static final java.lang.Class INT80_CLASS = int.class;

    public static final int INT81_INDEX = 81;

    public static final java.lang.String INT81_NAME = "int81";

    public static final java.lang.Class INT81_CLASS = int.class;

    public static final int INT82_INDEX = 82;

    public static final java.lang.String INT82_NAME = "int82";

    public static final java.lang.Class INT82_CLASS = int.class;

    public static final int INT83_INDEX = 83;

    public static final java.lang.String INT83_NAME = "int83";

    public static final java.lang.Class INT83_CLASS = int.class;

    public static final int INT84_INDEX = 84;

    public static final java.lang.String INT84_NAME = "int84";

    public static final java.lang.Class INT84_CLASS = int.class;

    public static final int INT85_INDEX = 85;

    public static final java.lang.String INT85_NAME = "int85";

    public static final java.lang.Class INT85_CLASS = int.class;

    public static final int INT86_INDEX = 86;

    public static final java.lang.String INT86_NAME = "int86";

    public static final java.lang.Class INT86_CLASS = int.class;

    public static final int INT87_INDEX = 87;

    public static final java.lang.String INT87_NAME = "int87";

    public static final java.lang.Class INT87_CLASS = int.class;

    public static final int INT88_INDEX = 88;

    public static final java.lang.String INT88_NAME = "int88";

    public static final java.lang.Class INT88_CLASS = int.class;

    public static final int INT89_INDEX = 89;

    public static final java.lang.String INT89_NAME = "int89";

    public static final java.lang.Class INT89_CLASS = int.class;

    public static final int INT90_INDEX = 90;

    public static final java.lang.String INT90_NAME = "int90";

    public static final java.lang.Class INT90_CLASS = int.class;

    public static final int INT91_INDEX = 91;

    public static final java.lang.String INT91_NAME = "int91";

    public static final java.lang.Class INT91_CLASS = int.class;

    public static final int INT92_INDEX = 92;

    public static final java.lang.String INT92_NAME = "int92";

    public static final java.lang.Class INT92_CLASS = int.class;

    public static final int INT93_INDEX = 93;

    public static final java.lang.String INT93_NAME = "int93";

    public static final java.lang.Class INT93_CLASS = int.class;

    public static final int INT94_INDEX = 94;

    public static final java.lang.String INT94_NAME = "int94";

    public static final java.lang.Class INT94_CLASS = int.class;

    public static final int INT95_INDEX = 95;

    public static final java.lang.String INT95_NAME = "int95";

    public static final java.lang.Class INT95_CLASS = int.class;

    public static final int INT96_INDEX = 96;

    public static final java.lang.String INT96_NAME = "int96";

    public static final java.lang.Class INT96_CLASS = int.class;

    public static final int INT97_INDEX = 97;

    public static final java.lang.String INT97_NAME = "int97";

    public static final java.lang.Class INT97_CLASS = int.class;

    public static final int INT98_INDEX = 98;

    public static final java.lang.String INT98_NAME = "int98";

    public static final java.lang.Class INT98_CLASS = int.class;

    public static final int INT99_INDEX = 99;

    public static final java.lang.String INT99_NAME = "int99";

    public static final java.lang.Class INT99_CLASS = int.class;

    public static final int INT100_INDEX = 100;

    public static final java.lang.String INT100_NAME = "int100";

    public static final java.lang.Class INT100_CLASS = int.class;

    public static final int INT101_INDEX = 101;

    public static final java.lang.String INT101_NAME = "int101";

    public static final java.lang.Class INT101_CLASS = int.class;

    public static final int INT102_INDEX = 102;

    public static final java.lang.String INT102_NAME = "int102";

    public static final java.lang.Class INT102_CLASS = int.class;

    public static final int INT103_INDEX = 103;

    public static final java.lang.String INT103_NAME = "int103";

    public static final java.lang.Class INT103_CLASS = int.class;

    public static final int INT104_INDEX = 104;

    public static final java.lang.String INT104_NAME = "int104";

    public static final java.lang.Class INT104_CLASS = int.class;

    public static final int INT105_INDEX = 105;

    public static final java.lang.String INT105_NAME = "int105";

    public static final java.lang.Class INT105_CLASS = int.class;

    public static final int INT106_INDEX = 106;

    public static final java.lang.String INT106_NAME = "int106";

    public static final java.lang.Class INT106_CLASS = int.class;

    public static final int INT107_INDEX = 107;

    public static final java.lang.String INT107_NAME = "int107";

    public static final java.lang.Class INT107_CLASS = int.class;

    public static final int INT108_INDEX = 108;

    public static final java.lang.String INT108_NAME = "int108";

    public static final java.lang.Class INT108_CLASS = int.class;

    public static final int INT109_INDEX = 109;

    public static final java.lang.String INT109_NAME = "int109";

    public static final java.lang.Class INT109_CLASS = int.class;

    public static final int INT110_INDEX = 110;

    public static final java.lang.String INT110_NAME = "int110";

    public static final java.lang.Class INT110_CLASS = int.class;

    public static final int INT111_INDEX = 111;

    public static final java.lang.String INT111_NAME = "int111";

    public static final java.lang.Class INT111_CLASS = int.class;

    public static final int INT112_INDEX = 112;

    public static final java.lang.String INT112_NAME = "int112";

    public static final java.lang.Class INT112_CLASS = int.class;

    public static final int INT113_INDEX = 113;

    public static final java.lang.String INT113_NAME = "int113";

    public static final java.lang.Class INT113_CLASS = int.class;

    public static final int INT114_INDEX = 114;

    public static final java.lang.String INT114_NAME = "int114";

    public static final java.lang.Class INT114_CLASS = int.class;

    public static final int INT115_INDEX = 115;

    public static final java.lang.String INT115_NAME = "int115";

    public static final java.lang.Class INT115_CLASS = int.class;

    public static final int INT116_INDEX = 116;

    public static final java.lang.String INT116_NAME = "int116";

    public static final java.lang.Class INT116_CLASS = int.class;

    public static final int INT117_INDEX = 117;

    public static final java.lang.String INT117_NAME = "int117";

    public static final java.lang.Class INT117_CLASS = int.class;

    public static final int INT118_INDEX = 118;

    public static final java.lang.String INT118_NAME = "int118";

    public static final java.lang.Class INT118_CLASS = int.class;

    public static final int INT119_INDEX = 119;

    public static final java.lang.String INT119_NAME = "int119";

    public static final java.lang.Class INT119_CLASS = int.class;

    public static final int INT120_INDEX = 120;

    public static final java.lang.String INT120_NAME = "int120";

    public static final java.lang.Class INT120_CLASS = int.class;

    public static final int INT121_INDEX = 121;

    public static final java.lang.String INT121_NAME = "int121";

    public static final java.lang.Class INT121_CLASS = int.class;

    public static final int INT122_INDEX = 122;

    public static final java.lang.String INT122_NAME = "int122";

    public static final java.lang.Class INT122_CLASS = int.class;

    public static final int INT123_INDEX = 123;

    public static final java.lang.String INT123_NAME = "int123";

    public static final java.lang.Class INT123_CLASS = int.class;

    public static final int INT124_INDEX = 124;

    public static final java.lang.String INT124_NAME = "int124";

    public static final java.lang.Class INT124_CLASS = int.class;

    public static final int INT125_INDEX = 125;

    public static final java.lang.String INT125_NAME = "int125";

    public static final java.lang.Class INT125_CLASS = int.class;

    public static final int INT126_INDEX = 126;

    public static final java.lang.String INT126_NAME = "int126";

    public static final java.lang.Class INT126_CLASS = int.class;

    public static final int INT127_INDEX = 127;

    public static final java.lang.String INT127_NAME = "int127";

    public static final java.lang.Class INT127_CLASS = int.class;

    public static final int INT128_INDEX = 128;

    public static final java.lang.String INT128_NAME = "int128";

    public static final java.lang.Class INT128_CLASS = int.class;

    public static final int INT129_INDEX = 129;

    public static final java.lang.String INT129_NAME = "int129";

    public static final java.lang.Class INT129_CLASS = int.class;

    public static final int INT130_INDEX = 130;

    public static final java.lang.String INT130_NAME = "int130";

    public static final java.lang.Class INT130_CLASS = int.class;

    public static final int INT131_INDEX = 131;

    public static final java.lang.String INT131_NAME = "int131";

    public static final java.lang.Class INT131_CLASS = int.class;

    public static final int INT132_INDEX = 132;

    public static final java.lang.String INT132_NAME = "int132";

    public static final java.lang.Class INT132_CLASS = int.class;

    public static final int INT133_INDEX = 133;

    public static final java.lang.String INT133_NAME = "int133";

    public static final java.lang.Class INT133_CLASS = int.class;

    public static final int INT134_INDEX = 134;

    public static final java.lang.String INT134_NAME = "int134";

    public static final java.lang.Class INT134_CLASS = int.class;

    public static final int INT135_INDEX = 135;

    public static final java.lang.String INT135_NAME = "int135";

    public static final java.lang.Class INT135_CLASS = int.class;

    public static final int INT136_INDEX = 136;

    public static final java.lang.String INT136_NAME = "int136";

    public static final java.lang.Class INT136_CLASS = int.class;

    public static final int INT137_INDEX = 137;

    public static final java.lang.String INT137_NAME = "int137";

    public static final java.lang.Class INT137_CLASS = int.class;

    public static final int INT138_INDEX = 138;

    public static final java.lang.String INT138_NAME = "int138";

    public static final java.lang.Class INT138_CLASS = int.class;

    public static final int INT139_INDEX = 139;

    public static final java.lang.String INT139_NAME = "int139";

    public static final java.lang.Class INT139_CLASS = int.class;

    public static final int INT140_INDEX = 140;

    public static final java.lang.String INT140_NAME = "int140";

    public static final java.lang.Class INT140_CLASS = int.class;

    public static final int INT141_INDEX = 141;

    public static final java.lang.String INT141_NAME = "int141";

    public static final java.lang.Class INT141_CLASS = int.class;

    public static final int INT142_INDEX = 142;

    public static final java.lang.String INT142_NAME = "int142";

    public static final java.lang.Class INT142_CLASS = int.class;

    public static final int INT143_INDEX = 143;

    public static final java.lang.String INT143_NAME = "int143";

    public static final java.lang.Class INT143_CLASS = int.class;

    public static final int INT144_INDEX = 144;

    public static final java.lang.String INT144_NAME = "int144";

    public static final java.lang.Class INT144_CLASS = int.class;

    public static final int INT145_INDEX = 145;

    public static final java.lang.String INT145_NAME = "int145";

    public static final java.lang.Class INT145_CLASS = int.class;

    public static final int INT146_INDEX = 146;

    public static final java.lang.String INT146_NAME = "int146";

    public static final java.lang.Class INT146_CLASS = int.class;

    public static final int INT147_INDEX = 147;

    public static final java.lang.String INT147_NAME = "int147";

    public static final java.lang.Class INT147_CLASS = int.class;

    public static final int INT148_INDEX = 148;

    public static final java.lang.String INT148_NAME = "int148";

    public static final java.lang.Class INT148_CLASS = int.class;

    public static final int INT149_INDEX = 149;

    public static final java.lang.String INT149_NAME = "int149";

    public static final java.lang.Class INT149_CLASS = int.class;

    public static final int INT150_INDEX = 150;

    public static final java.lang.String INT150_NAME = "int150";

    public static final java.lang.Class INT150_CLASS = int.class;

    public static final int INT151_INDEX = 151;

    public static final java.lang.String INT151_NAME = "int151";

    public static final java.lang.Class INT151_CLASS = int.class;

    public static final int INT152_INDEX = 152;

    public static final java.lang.String INT152_NAME = "int152";

    public static final java.lang.Class INT152_CLASS = int.class;

    public static final int INT153_INDEX = 153;

    public static final java.lang.String INT153_NAME = "int153";

    public static final java.lang.Class INT153_CLASS = int.class;

    public static final int INT154_INDEX = 154;

    public static final java.lang.String INT154_NAME = "int154";

    public static final java.lang.Class INT154_CLASS = int.class;

    public static final int INT155_INDEX = 155;

    public static final java.lang.String INT155_NAME = "int155";

    public static final java.lang.Class INT155_CLASS = int.class;

    public static final int INT156_INDEX = 156;

    public static final java.lang.String INT156_NAME = "int156";

    public static final java.lang.Class INT156_CLASS = int.class;

    public static final int INT157_INDEX = 157;

    public static final java.lang.String INT157_NAME = "int157";

    public static final java.lang.Class INT157_CLASS = int.class;

    public static final int INT158_INDEX = 158;

    public static final java.lang.String INT158_NAME = "int158";

    public static final java.lang.Class INT158_CLASS = int.class;

    public static final int INT159_INDEX = 159;

    public static final java.lang.String INT159_NAME = "int159";

    public static final java.lang.Class INT159_CLASS = int.class;

    public static final int INT160_INDEX = 160;

    public static final java.lang.String INT160_NAME = "int160";

    public static final java.lang.Class INT160_CLASS = int.class;

    public static final int INT161_INDEX = 161;

    public static final java.lang.String INT161_NAME = "int161";

    public static final java.lang.Class INT161_CLASS = int.class;

    public static final int INT162_INDEX = 162;

    public static final java.lang.String INT162_NAME = "int162";

    public static final java.lang.Class INT162_CLASS = int.class;

    public static final int INT163_INDEX = 163;

    public static final java.lang.String INT163_NAME = "int163";

    public static final java.lang.Class INT163_CLASS = int.class;

    public static final int INT164_INDEX = 164;

    public static final java.lang.String INT164_NAME = "int164";

    public static final java.lang.Class INT164_CLASS = int.class;

    public static final int INT165_INDEX = 165;

    public static final java.lang.String INT165_NAME = "int165";

    public static final java.lang.Class INT165_CLASS = int.class;

    public static final int INT166_INDEX = 166;

    public static final java.lang.String INT166_NAME = "int166";

    public static final java.lang.Class INT166_CLASS = int.class;

    public static final int INT167_INDEX = 167;

    public static final java.lang.String INT167_NAME = "int167";

    public static final java.lang.Class INT167_CLASS = int.class;

    public static final int INT168_INDEX = 168;

    public static final java.lang.String INT168_NAME = "int168";

    public static final java.lang.Class INT168_CLASS = int.class;

    public static final int INT169_INDEX = 169;

    public static final java.lang.String INT169_NAME = "int169";

    public static final java.lang.Class INT169_CLASS = int.class;

    public static final int INT170_INDEX = 170;

    public static final java.lang.String INT170_NAME = "int170";

    public static final java.lang.Class INT170_CLASS = int.class;

    public static final int INT171_INDEX = 171;

    public static final java.lang.String INT171_NAME = "int171";

    public static final java.lang.Class INT171_CLASS = int.class;

    public static final int INT172_INDEX = 172;

    public static final java.lang.String INT172_NAME = "int172";

    public static final java.lang.Class INT172_CLASS = int.class;

    public static final int INT173_INDEX = 173;

    public static final java.lang.String INT173_NAME = "int173";

    public static final java.lang.Class INT173_CLASS = int.class;

    public static final int INT174_INDEX = 174;

    public static final java.lang.String INT174_NAME = "int174";

    public static final java.lang.Class INT174_CLASS = int.class;

    public static final int INT175_INDEX = 175;

    public static final java.lang.String INT175_NAME = "int175";

    public static final java.lang.Class INT175_CLASS = int.class;

    public static final int INT176_INDEX = 176;

    public static final java.lang.String INT176_NAME = "int176";

    public static final java.lang.Class INT176_CLASS = int.class;

    public static final int INT177_INDEX = 177;

    public static final java.lang.String INT177_NAME = "int177";

    public static final java.lang.Class INT177_CLASS = int.class;

    public static final int INT178_INDEX = 178;

    public static final java.lang.String INT178_NAME = "int178";

    public static final java.lang.Class INT178_CLASS = int.class;

    public static final int INT179_INDEX = 179;

    public static final java.lang.String INT179_NAME = "int179";

    public static final java.lang.Class INT179_CLASS = int.class;

    public static final int INT180_INDEX = 180;

    public static final java.lang.String INT180_NAME = "int180";

    public static final java.lang.Class INT180_CLASS = int.class;

    public static final int INT181_INDEX = 181;

    public static final java.lang.String INT181_NAME = "int181";

    public static final java.lang.Class INT181_CLASS = int.class;

    public static final int INT182_INDEX = 182;

    public static final java.lang.String INT182_NAME = "int182";

    public static final java.lang.Class INT182_CLASS = int.class;

    public static final int INT183_INDEX = 183;

    public static final java.lang.String INT183_NAME = "int183";

    public static final java.lang.Class INT183_CLASS = int.class;

    public static final int INT184_INDEX = 184;

    public static final java.lang.String INT184_NAME = "int184";

    public static final java.lang.Class INT184_CLASS = int.class;

    public static final int INT185_INDEX = 185;

    public static final java.lang.String INT185_NAME = "int185";

    public static final java.lang.Class INT185_CLASS = int.class;

    public static final int INT186_INDEX = 186;

    public static final java.lang.String INT186_NAME = "int186";

    public static final java.lang.Class INT186_CLASS = int.class;

    public static final int INT187_INDEX = 187;

    public static final java.lang.String INT187_NAME = "int187";

    public static final java.lang.Class INT187_CLASS = int.class;

    public static final int INT188_INDEX = 188;

    public static final java.lang.String INT188_NAME = "int188";

    public static final java.lang.Class INT188_CLASS = int.class;

    public static final int INT189_INDEX = 189;

    public static final java.lang.String INT189_NAME = "int189";

    public static final java.lang.Class INT189_CLASS = int.class;

    public static final int INT190_INDEX = 190;

    public static final java.lang.String INT190_NAME = "int190";

    public static final java.lang.Class INT190_CLASS = int.class;

    public static final int INT191_INDEX = 191;

    public static final java.lang.String INT191_NAME = "int191";

    public static final java.lang.Class INT191_CLASS = int.class;

    public static final int INT192_INDEX = 192;

    public static final java.lang.String INT192_NAME = "int192";

    public static final java.lang.Class INT192_CLASS = int.class;

    public static final int INT193_INDEX = 193;

    public static final java.lang.String INT193_NAME = "int193";

    public static final java.lang.Class INT193_CLASS = int.class;

    public static final int INT194_INDEX = 194;

    public static final java.lang.String INT194_NAME = "int194";

    public static final java.lang.Class INT194_CLASS = int.class;

    public static final int INT195_INDEX = 195;

    public static final java.lang.String INT195_NAME = "int195";

    public static final java.lang.Class INT195_CLASS = int.class;

    public static final int INT196_INDEX = 196;

    public static final java.lang.String INT196_NAME = "int196";

    public static final java.lang.Class INT196_CLASS = int.class;

    public static final int INT197_INDEX = 197;

    public static final java.lang.String INT197_NAME = "int197";

    public static final java.lang.Class INT197_CLASS = int.class;

    public static final int INT198_INDEX = 198;

    public static final java.lang.String INT198_NAME = "int198";

    public static final java.lang.Class INT198_CLASS = int.class;

    public static final int INT199_INDEX = 199;

    public static final java.lang.String INT199_NAME = "int199";

    public static final java.lang.Class INT199_CLASS = int.class;

    public static final int INT200_INDEX = 200;

    public static final java.lang.String INT200_NAME = "int200";

    public static final java.lang.Class INT200_CLASS = int.class;

    public static final int INT201_INDEX = 201;

    public static final java.lang.String INT201_NAME = "int201";

    public static final java.lang.Class INT201_CLASS = int.class;

    public static final int INT202_INDEX = 202;

    public static final java.lang.String INT202_NAME = "int202";

    public static final java.lang.Class INT202_CLASS = int.class;

    public static final int INT203_INDEX = 203;

    public static final java.lang.String INT203_NAME = "int203";

    public static final java.lang.Class INT203_CLASS = int.class;

    public static final int INT204_INDEX = 204;

    public static final java.lang.String INT204_NAME = "int204";

    public static final java.lang.Class INT204_CLASS = int.class;

    public static final int INT205_INDEX = 205;

    public static final java.lang.String INT205_NAME = "int205";

    public static final java.lang.Class INT205_CLASS = int.class;

    public static final int INT206_INDEX = 206;

    public static final java.lang.String INT206_NAME = "int206";

    public static final java.lang.Class INT206_CLASS = int.class;

    public static final int INT207_INDEX = 207;

    public static final java.lang.String INT207_NAME = "int207";

    public static final java.lang.Class INT207_CLASS = int.class;

    public static final int INT208_INDEX = 208;

    public static final java.lang.String INT208_NAME = "int208";

    public static final java.lang.Class INT208_CLASS = int.class;

    public static final int INT209_INDEX = 209;

    public static final java.lang.String INT209_NAME = "int209";

    public static final java.lang.Class INT209_CLASS = int.class;

    public static final int INT210_INDEX = 210;

    public static final java.lang.String INT210_NAME = "int210";

    public static final java.lang.Class INT210_CLASS = int.class;

    public static final int INT211_INDEX = 211;

    public static final java.lang.String INT211_NAME = "int211";

    public static final java.lang.Class INT211_CLASS = int.class;

    public static final int INT212_INDEX = 212;

    public static final java.lang.String INT212_NAME = "int212";

    public static final java.lang.Class INT212_CLASS = int.class;

    public static final int INT213_INDEX = 213;

    public static final java.lang.String INT213_NAME = "int213";

    public static final java.lang.Class INT213_CLASS = int.class;

    public static final int INT214_INDEX = 214;

    public static final java.lang.String INT214_NAME = "int214";

    public static final java.lang.Class INT214_CLASS = int.class;

    public static final int INT215_INDEX = 215;

    public static final java.lang.String INT215_NAME = "int215";

    public static final java.lang.Class INT215_CLASS = int.class;

    public static final int INT216_INDEX = 216;

    public static final java.lang.String INT216_NAME = "int216";

    public static final java.lang.Class INT216_CLASS = int.class;

    public static final int INT217_INDEX = 217;

    public static final java.lang.String INT217_NAME = "int217";

    public static final java.lang.Class INT217_CLASS = int.class;

    public static final int INT218_INDEX = 218;

    public static final java.lang.String INT218_NAME = "int218";

    public static final java.lang.Class INT218_CLASS = int.class;

    public static final int INT219_INDEX = 219;

    public static final java.lang.String INT219_NAME = "int219";

    public static final java.lang.Class INT219_CLASS = int.class;

    public static final int INT220_INDEX = 220;

    public static final java.lang.String INT220_NAME = "int220";

    public static final java.lang.Class INT220_CLASS = int.class;

    public static final int INT221_INDEX = 221;

    public static final java.lang.String INT221_NAME = "int221";

    public static final java.lang.Class INT221_CLASS = int.class;

    public static final int INT222_INDEX = 222;

    public static final java.lang.String INT222_NAME = "int222";

    public static final java.lang.Class INT222_CLASS = int.class;

    public static final int INT223_INDEX = 223;

    public static final java.lang.String INT223_NAME = "int223";

    public static final java.lang.Class INT223_CLASS = int.class;

    public static final int INT224_INDEX = 224;

    public static final java.lang.String INT224_NAME = "int224";

    public static final java.lang.Class INT224_CLASS = int.class;

    public static final int INT225_INDEX = 225;

    public static final java.lang.String INT225_NAME = "int225";

    public static final java.lang.Class INT225_CLASS = int.class;

    public static final int INT226_INDEX = 226;

    public static final java.lang.String INT226_NAME = "int226";

    public static final java.lang.Class INT226_CLASS = int.class;

    public static final int INT227_INDEX = 227;

    public static final java.lang.String INT227_NAME = "int227";

    public static final java.lang.Class INT227_CLASS = int.class;

    public static final int INT228_INDEX = 228;

    public static final java.lang.String INT228_NAME = "int228";

    public static final java.lang.Class INT228_CLASS = int.class;

    public static final int INT229_INDEX = 229;

    public static final java.lang.String INT229_NAME = "int229";

    public static final java.lang.Class INT229_CLASS = int.class;

    public static final int INT230_INDEX = 230;

    public static final java.lang.String INT230_NAME = "int230";

    public static final java.lang.Class INT230_CLASS = int.class;

    public static final int INT231_INDEX = 231;

    public static final java.lang.String INT231_NAME = "int231";

    public static final java.lang.Class INT231_CLASS = int.class;

    public static final int INT232_INDEX = 232;

    public static final java.lang.String INT232_NAME = "int232";

    public static final java.lang.Class INT232_CLASS = int.class;

    public static final int INT233_INDEX = 233;

    public static final java.lang.String INT233_NAME = "int233";

    public static final java.lang.Class INT233_CLASS = int.class;

    public static final int INT234_INDEX = 234;

    public static final java.lang.String INT234_NAME = "int234";

    public static final java.lang.Class INT234_CLASS = int.class;

    public static final int INT235_INDEX = 235;

    public static final java.lang.String INT235_NAME = "int235";

    public static final java.lang.Class INT235_CLASS = int.class;

    public static final int INT236_INDEX = 236;

    public static final java.lang.String INT236_NAME = "int236";

    public static final java.lang.Class INT236_CLASS = int.class;

    public static final int INT237_INDEX = 237;

    public static final java.lang.String INT237_NAME = "int237";

    public static final java.lang.Class INT237_CLASS = int.class;

    public static final int INT238_INDEX = 238;

    public static final java.lang.String INT238_NAME = "int238";

    public static final java.lang.Class INT238_CLASS = int.class;

    public static final int INT239_INDEX = 239;

    public static final java.lang.String INT239_NAME = "int239";

    public static final java.lang.Class INT239_CLASS = int.class;

    public static final int INT240_INDEX = 240;

    public static final java.lang.String INT240_NAME = "int240";

    public static final java.lang.Class INT240_CLASS = int.class;

    public static final int INT241_INDEX = 241;

    public static final java.lang.String INT241_NAME = "int241";

    public static final java.lang.Class INT241_CLASS = int.class;

    public static final int INT242_INDEX = 242;

    public static final java.lang.String INT242_NAME = "int242";

    public static final java.lang.Class INT242_CLASS = int.class;

    public static final int INT243_INDEX = 243;

    public static final java.lang.String INT243_NAME = "int243";

    public static final java.lang.Class INT243_CLASS = int.class;

    public static final int INT244_INDEX = 244;

    public static final java.lang.String INT244_NAME = "int244";

    public static final java.lang.Class INT244_CLASS = int.class;

    public static final int INT245_INDEX = 245;

    public static final java.lang.String INT245_NAME = "int245";

    public static final java.lang.Class INT245_CLASS = int.class;

    public static final int INT246_INDEX = 246;

    public static final java.lang.String INT246_NAME = "int246";

    public static final java.lang.Class INT246_CLASS = int.class;

    public static final int INT247_INDEX = 247;

    public static final java.lang.String INT247_NAME = "int247";

    public static final java.lang.Class INT247_CLASS = int.class;

    public static final int INT248_INDEX = 248;

    public static final java.lang.String INT248_NAME = "int248";

    public static final java.lang.Class INT248_CLASS = int.class;

    public static final int INT249_INDEX = 249;

    public static final java.lang.String INT249_NAME = "int249";

    public static final java.lang.Class INT249_CLASS = int.class;

    public static final int INT250_INDEX = 250;

    public static final java.lang.String INT250_NAME = "int250";

    public static final java.lang.Class INT250_CLASS = int.class;

    public static final int INT251_INDEX = 251;

    public static final java.lang.String INT251_NAME = "int251";

    public static final java.lang.Class INT251_CLASS = int.class;

    public static final int INT252_INDEX = 252;

    public static final java.lang.String INT252_NAME = "int252";

    public static final java.lang.Class INT252_CLASS = int.class;

    public static final int INT253_INDEX = 253;

    public static final java.lang.String INT253_NAME = "int253";

    public static final java.lang.Class INT253_CLASS = int.class;

    public static final int INT254_INDEX = 254;

    public static final java.lang.String INT254_NAME = "int254";

    public static final java.lang.Class INT254_CLASS = int.class;

    public static final int INT255_INDEX = 255;

    public static final java.lang.String INT255_NAME = "int255";

    public static final java.lang.Class INT255_CLASS = int.class;

    public static final int INT256_INDEX = 256;

    public static final java.lang.String INT256_NAME = "int256";

    public static final java.lang.Class INT256_CLASS = int.class;

    public static final int FIELD_COUNT = 257;

    @Override
    public int getFieldCount() {
        return FIELD_COUNT;
    }

    @Override
    public java.lang.String getFieldName(int index) {
        return getFieldNameStatic(index);
    }

    @SuppressWarnings("static-access")
    public static java.lang.String getFieldNameStatic(int index) {
        switch (index) {
            case INT0_INDEX:
                return INT0_NAME;
            case INT1_INDEX:
                return INT1_NAME;
            case INT2_INDEX:
                return INT2_NAME;
            case INT3_INDEX:
                return INT3_NAME;
            case INT4_INDEX:
                return INT4_NAME;
            case INT5_INDEX:
                return INT5_NAME;
            case INT6_INDEX:
                return INT6_NAME;
            case INT7_INDEX:
                return INT7_NAME;
            case INT8_INDEX:
                return INT8_NAME;
            case INT9_INDEX:
                return INT9_NAME;
            case INT10_INDEX:
                return INT10_NAME;
            case INT11_INDEX:
                return INT11_NAME;
            case INT12_INDEX:
                return INT12_NAME;
            case INT13_INDEX:
                return INT13_NAME;
            case INT14_INDEX:
                return INT14_NAME;
            case INT15_INDEX:
                return INT15_NAME;
            case INT16_INDEX:
                return INT16_NAME;
            case INT17_INDEX:
                return INT17_NAME;
            case INT18_INDEX:
                return INT18_NAME;
            case INT19_INDEX:
                return INT19_NAME;
            case INT20_INDEX:
                return INT20_NAME;
            case INT21_INDEX:
                return INT21_NAME;
            case INT22_INDEX:
                return INT22_NAME;
            case INT23_INDEX:
                return INT23_NAME;
            case INT24_INDEX:
                return INT24_NAME;
            case INT25_INDEX:
                return INT25_NAME;
            case INT26_INDEX:
                return INT26_NAME;
            case INT27_INDEX:
                return INT27_NAME;
            case INT28_INDEX:
                return INT28_NAME;
            case INT29_INDEX:
                return INT29_NAME;
            case INT30_INDEX:
                return INT30_NAME;
            case INT31_INDEX:
                return INT31_NAME;
            case INT32_INDEX:
                return INT32_NAME;
            case INT33_INDEX:
                return INT33_NAME;
            case INT34_INDEX:
                return INT34_NAME;
            case INT35_INDEX:
                return INT35_NAME;
            case INT36_INDEX:
                return INT36_NAME;
            case INT37_INDEX:
                return INT37_NAME;
            case INT38_INDEX:
                return INT38_NAME;
            case INT39_INDEX:
                return INT39_NAME;
            case INT40_INDEX:
                return INT40_NAME;
            case INT41_INDEX:
                return INT41_NAME;
            case INT42_INDEX:
                return INT42_NAME;
            case INT43_INDEX:
                return INT43_NAME;
            case INT44_INDEX:
                return INT44_NAME;
            case INT45_INDEX:
                return INT45_NAME;
            case INT46_INDEX:
                return INT46_NAME;
            case INT47_INDEX:
                return INT47_NAME;
            case INT48_INDEX:
                return INT48_NAME;
            case INT49_INDEX:
                return INT49_NAME;
            case INT50_INDEX:
                return INT50_NAME;
            case INT51_INDEX:
                return INT51_NAME;
            case INT52_INDEX:
                return INT52_NAME;
            case INT53_INDEX:
                return INT53_NAME;
            case INT54_INDEX:
                return INT54_NAME;
            case INT55_INDEX:
                return INT55_NAME;
            case INT56_INDEX:
                return INT56_NAME;
            case INT57_INDEX:
                return INT57_NAME;
            case INT58_INDEX:
                return INT58_NAME;
            case INT59_INDEX:
                return INT59_NAME;
            case INT60_INDEX:
                return INT60_NAME;
            case INT61_INDEX:
                return INT61_NAME;
            case INT62_INDEX:
                return INT62_NAME;
            case INT63_INDEX:
                return INT63_NAME;
            case INT64_INDEX:
                return INT64_NAME;
            case INT65_INDEX:
                return INT65_NAME;
            case INT66_INDEX:
                return INT66_NAME;
            case INT67_INDEX:
                return INT67_NAME;
            case INT68_INDEX:
                return INT68_NAME;
            case INT69_INDEX:
                return INT69_NAME;
            case INT70_INDEX:
                return INT70_NAME;
            case INT71_INDEX:
                return INT71_NAME;
            case INT72_INDEX:
                return INT72_NAME;
            case INT73_INDEX:
                return INT73_NAME;
            case INT74_INDEX:
                return INT74_NAME;
            case INT75_INDEX:
                return INT75_NAME;
            case INT76_INDEX:
                return INT76_NAME;
            case INT77_INDEX:
                return INT77_NAME;
            case INT78_INDEX:
                return INT78_NAME;
            case INT79_INDEX:
                return INT79_NAME;
            case INT80_INDEX:
                return INT80_NAME;
            case INT81_INDEX:
                return INT81_NAME;
            case INT82_INDEX:
                return INT82_NAME;
            case INT83_INDEX:
                return INT83_NAME;
            case INT84_INDEX:
                return INT84_NAME;
            case INT85_INDEX:
                return INT85_NAME;
            case INT86_INDEX:
                return INT86_NAME;
            case INT87_INDEX:
                return INT87_NAME;
            case INT88_INDEX:
                return INT88_NAME;
            case INT89_INDEX:
                return INT89_NAME;
            case INT90_INDEX:
                return INT90_NAME;
            case INT91_INDEX:
                return INT91_NAME;
            case INT92_INDEX:
                return INT92_NAME;
            case INT93_INDEX:
                return INT93_NAME;
            case INT94_INDEX:
                return INT94_NAME;
            case INT95_INDEX:
                return INT95_NAME;
            case INT96_INDEX:
                return INT96_NAME;
            case INT97_INDEX:
                return INT97_NAME;
            case INT98_INDEX:
                return INT98_NAME;
            case INT99_INDEX:
                return INT99_NAME;
            case INT100_INDEX:
                return INT100_NAME;
            case INT101_INDEX:
                return INT101_NAME;
            case INT102_INDEX:
                return INT102_NAME;
            case INT103_INDEX:
                return INT103_NAME;
            case INT104_INDEX:
                return INT104_NAME;
            case INT105_INDEX:
                return INT105_NAME;
            case INT106_INDEX:
                return INT106_NAME;
            case INT107_INDEX:
                return INT107_NAME;
            case INT108_INDEX:
                return INT108_NAME;
            case INT109_INDEX:
                return INT109_NAME;
            case INT110_INDEX:
                return INT110_NAME;
            case INT111_INDEX:
                return INT111_NAME;
            case INT112_INDEX:
                return INT112_NAME;
            case INT113_INDEX:
                return INT113_NAME;
            case INT114_INDEX:
                return INT114_NAME;
            case INT115_INDEX:
                return INT115_NAME;
            case INT116_INDEX:
                return INT116_NAME;
            case INT117_INDEX:
                return INT117_NAME;
            case INT118_INDEX:
                return INT118_NAME;
            case INT119_INDEX:
                return INT119_NAME;
            case INT120_INDEX:
                return INT120_NAME;
            case INT121_INDEX:
                return INT121_NAME;
            case INT122_INDEX:
                return INT122_NAME;
            case INT123_INDEX:
                return INT123_NAME;
            case INT124_INDEX:
                return INT124_NAME;
            case INT125_INDEX:
                return INT125_NAME;
            case INT126_INDEX:
                return INT126_NAME;
            case INT127_INDEX:
                return INT127_NAME;
            case INT128_INDEX:
                return INT128_NAME;
            case INT129_INDEX:
                return INT129_NAME;
            case INT130_INDEX:
                return INT130_NAME;
            case INT131_INDEX:
                return INT131_NAME;
            case INT132_INDEX:
                return INT132_NAME;
            case INT133_INDEX:
                return INT133_NAME;
            case INT134_INDEX:
                return INT134_NAME;
            case INT135_INDEX:
                return INT135_NAME;
            case INT136_INDEX:
                return INT136_NAME;
            case INT137_INDEX:
                return INT137_NAME;
            case INT138_INDEX:
                return INT138_NAME;
            case INT139_INDEX:
                return INT139_NAME;
            case INT140_INDEX:
                return INT140_NAME;
            case INT141_INDEX:
                return INT141_NAME;
            case INT142_INDEX:
                return INT142_NAME;
            case INT143_INDEX:
                return INT143_NAME;
            case INT144_INDEX:
                return INT144_NAME;
            case INT145_INDEX:
                return INT145_NAME;
            case INT146_INDEX:
                return INT146_NAME;
            case INT147_INDEX:
                return INT147_NAME;
            case INT148_INDEX:
                return INT148_NAME;
            case INT149_INDEX:
                return INT149_NAME;
            case INT150_INDEX:
                return INT150_NAME;
            case INT151_INDEX:
                return INT151_NAME;
            case INT152_INDEX:
                return INT152_NAME;
            case INT153_INDEX:
                return INT153_NAME;
            case INT154_INDEX:
                return INT154_NAME;
            case INT155_INDEX:
                return INT155_NAME;
            case INT156_INDEX:
                return INT156_NAME;
            case INT157_INDEX:
                return INT157_NAME;
            case INT158_INDEX:
                return INT158_NAME;
            case INT159_INDEX:
                return INT159_NAME;
            case INT160_INDEX:
                return INT160_NAME;
            case INT161_INDEX:
                return INT161_NAME;
            case INT162_INDEX:
                return INT162_NAME;
            case INT163_INDEX:
                return INT163_NAME;
            case INT164_INDEX:
                return INT164_NAME;
            case INT165_INDEX:
                return INT165_NAME;
            case INT166_INDEX:
                return INT166_NAME;
            case INT167_INDEX:
                return INT167_NAME;
            case INT168_INDEX:
                return INT168_NAME;
            case INT169_INDEX:
                return INT169_NAME;
            case INT170_INDEX:
                return INT170_NAME;
            case INT171_INDEX:
                return INT171_NAME;
            case INT172_INDEX:
                return INT172_NAME;
            case INT173_INDEX:
                return INT173_NAME;
            case INT174_INDEX:
                return INT174_NAME;
            case INT175_INDEX:
                return INT175_NAME;
            case INT176_INDEX:
                return INT176_NAME;
            case INT177_INDEX:
                return INT177_NAME;
            case INT178_INDEX:
                return INT178_NAME;
            case INT179_INDEX:
                return INT179_NAME;
            case INT180_INDEX:
                return INT180_NAME;
            case INT181_INDEX:
                return INT181_NAME;
            case INT182_INDEX:
                return INT182_NAME;
            case INT183_INDEX:
                return INT183_NAME;
            case INT184_INDEX:
                return INT184_NAME;
            case INT185_INDEX:
                return INT185_NAME;
            case INT186_INDEX:
                return INT186_NAME;
            case INT187_INDEX:
                return INT187_NAME;
            case INT188_INDEX:
                return INT188_NAME;
            case INT189_INDEX:
                return INT189_NAME;
            case INT190_INDEX:
                return INT190_NAME;
            case INT191_INDEX:
                return INT191_NAME;
            case INT192_INDEX:
                return INT192_NAME;
            case INT193_INDEX:
                return INT193_NAME;
            case INT194_INDEX:
                return INT194_NAME;
            case INT195_INDEX:
                return INT195_NAME;
            case INT196_INDEX:
                return INT196_NAME;
            case INT197_INDEX:
                return INT197_NAME;
            case INT198_INDEX:
                return INT198_NAME;
            case INT199_INDEX:
                return INT199_NAME;
            case INT200_INDEX:
                return INT200_NAME;
            case INT201_INDEX:
                return INT201_NAME;
            case INT202_INDEX:
                return INT202_NAME;
            case INT203_INDEX:
                return INT203_NAME;
            case INT204_INDEX:
                return INT204_NAME;
            case INT205_INDEX:
                return INT205_NAME;
            case INT206_INDEX:
                return INT206_NAME;
            case INT207_INDEX:
                return INT207_NAME;
            case INT208_INDEX:
                return INT208_NAME;
            case INT209_INDEX:
                return INT209_NAME;
            case INT210_INDEX:
                return INT210_NAME;
            case INT211_INDEX:
                return INT211_NAME;
            case INT212_INDEX:
                return INT212_NAME;
            case INT213_INDEX:
                return INT213_NAME;
            case INT214_INDEX:
                return INT214_NAME;
            case INT215_INDEX:
                return INT215_NAME;
            case INT216_INDEX:
                return INT216_NAME;
            case INT217_INDEX:
                return INT217_NAME;
            case INT218_INDEX:
                return INT218_NAME;
            case INT219_INDEX:
                return INT219_NAME;
            case INT220_INDEX:
                return INT220_NAME;
            case INT221_INDEX:
                return INT221_NAME;
            case INT222_INDEX:
                return INT222_NAME;
            case INT223_INDEX:
                return INT223_NAME;
            case INT224_INDEX:
                return INT224_NAME;
            case INT225_INDEX:
                return INT225_NAME;
            case INT226_INDEX:
                return INT226_NAME;
            case INT227_INDEX:
                return INT227_NAME;
            case INT228_INDEX:
                return INT228_NAME;
            case INT229_INDEX:
                return INT229_NAME;
            case INT230_INDEX:
                return INT230_NAME;
            case INT231_INDEX:
                return INT231_NAME;
            case INT232_INDEX:
                return INT232_NAME;
            case INT233_INDEX:
                return INT233_NAME;
            case INT234_INDEX:
                return INT234_NAME;
            case INT235_INDEX:
                return INT235_NAME;
            case INT236_INDEX:
                return INT236_NAME;
            case INT237_INDEX:
                return INT237_NAME;
            case INT238_INDEX:
                return INT238_NAME;
            case INT239_INDEX:
                return INT239_NAME;
            case INT240_INDEX:
                return INT240_NAME;
            case INT241_INDEX:
                return INT241_NAME;
            case INT242_INDEX:
                return INT242_NAME;
            case INT243_INDEX:
                return INT243_NAME;
            case INT244_INDEX:
                return INT244_NAME;
            case INT245_INDEX:
                return INT245_NAME;
            case INT246_INDEX:
                return INT246_NAME;
            case INT247_INDEX:
                return INT247_NAME;
            case INT248_INDEX:
                return INT248_NAME;
            case INT249_INDEX:
                return INT249_NAME;
            case INT250_INDEX:
                return INT250_NAME;
            case INT251_INDEX:
                return INT251_NAME;
            case INT252_INDEX:
                return INT252_NAME;
            case INT253_INDEX:
                return INT253_NAME;
            case INT254_INDEX:
                return INT254_NAME;
            case INT255_INDEX:
                return INT255_NAME;
            case INT256_INDEX:
                return INT256_NAME;
            default:
                throw new IllegalArgumentException();
        }
    }

    @Override
    public java.lang.Class getFieldClass(int index) {
        return getFieldClassStatic(index);
    }

    @SuppressWarnings("static-access")
    public static java.lang.Class getFieldClassStatic(int index) {
        switch (index) {
            case INT0_INDEX:
                return INT0_CLASS;
            case INT1_INDEX:
                return INT1_CLASS;
            case INT2_INDEX:
                return INT2_CLASS;
            case INT3_INDEX:
                return INT3_CLASS;
            case INT4_INDEX:
                return INT4_CLASS;
            case INT5_INDEX:
                return INT5_CLASS;
            case INT6_INDEX:
                return INT6_CLASS;
            case INT7_INDEX:
                return INT7_CLASS;
            case INT8_INDEX:
                return INT8_CLASS;
            case INT9_INDEX:
                return INT9_CLASS;
            case INT10_INDEX:
                return INT10_CLASS;
            case INT11_INDEX:
                return INT11_CLASS;
            case INT12_INDEX:
                return INT12_CLASS;
            case INT13_INDEX:
                return INT13_CLASS;
            case INT14_INDEX:
                return INT14_CLASS;
            case INT15_INDEX:
                return INT15_CLASS;
            case INT16_INDEX:
                return INT16_CLASS;
            case INT17_INDEX:
                return INT17_CLASS;
            case INT18_INDEX:
                return INT18_CLASS;
            case INT19_INDEX:
                return INT19_CLASS;
            case INT20_INDEX:
                return INT20_CLASS;
            case INT21_INDEX:
                return INT21_CLASS;
            case INT22_INDEX:
                return INT22_CLASS;
            case INT23_INDEX:
                return INT23_CLASS;
            case INT24_INDEX:
                return INT24_CLASS;
            case INT25_INDEX:
                return INT25_CLASS;
            case INT26_INDEX:
                return INT26_CLASS;
            case INT27_INDEX:
                return INT27_CLASS;
            case INT28_INDEX:
                return INT28_CLASS;
            case INT29_INDEX:
                return INT29_CLASS;
            case INT30_INDEX:
                return INT30_CLASS;
            case INT31_INDEX:
                return INT31_CLASS;
            case INT32_INDEX:
                return INT32_CLASS;
            case INT33_INDEX:
                return INT33_CLASS;
            case INT34_INDEX:
                return INT34_CLASS;
            case INT35_INDEX:
                return INT35_CLASS;
            case INT36_INDEX:
                return INT36_CLASS;
            case INT37_INDEX:
                return INT37_CLASS;
            case INT38_INDEX:
                return INT38_CLASS;
            case INT39_INDEX:
                return INT39_CLASS;
            case INT40_INDEX:
                return INT40_CLASS;
            case INT41_INDEX:
                return INT41_CLASS;
            case INT42_INDEX:
                return INT42_CLASS;
            case INT43_INDEX:
                return INT43_CLASS;
            case INT44_INDEX:
                return INT44_CLASS;
            case INT45_INDEX:
                return INT45_CLASS;
            case INT46_INDEX:
                return INT46_CLASS;
            case INT47_INDEX:
                return INT47_CLASS;
            case INT48_INDEX:
                return INT48_CLASS;
            case INT49_INDEX:
                return INT49_CLASS;
            case INT50_INDEX:
                return INT50_CLASS;
            case INT51_INDEX:
                return INT51_CLASS;
            case INT52_INDEX:
                return INT52_CLASS;
            case INT53_INDEX:
                return INT53_CLASS;
            case INT54_INDEX:
                return INT54_CLASS;
            case INT55_INDEX:
                return INT55_CLASS;
            case INT56_INDEX:
                return INT56_CLASS;
            case INT57_INDEX:
                return INT57_CLASS;
            case INT58_INDEX:
                return INT58_CLASS;
            case INT59_INDEX:
                return INT59_CLASS;
            case INT60_INDEX:
                return INT60_CLASS;
            case INT61_INDEX:
                return INT61_CLASS;
            case INT62_INDEX:
                return INT62_CLASS;
            case INT63_INDEX:
                return INT63_CLASS;
            case INT64_INDEX:
                return INT64_CLASS;
            case INT65_INDEX:
                return INT65_CLASS;
            case INT66_INDEX:
                return INT66_CLASS;
            case INT67_INDEX:
                return INT67_CLASS;
            case INT68_INDEX:
                return INT68_CLASS;
            case INT69_INDEX:
                return INT69_CLASS;
            case INT70_INDEX:
                return INT70_CLASS;
            case INT71_INDEX:
                return INT71_CLASS;
            case INT72_INDEX:
                return INT72_CLASS;
            case INT73_INDEX:
                return INT73_CLASS;
            case INT74_INDEX:
                return INT74_CLASS;
            case INT75_INDEX:
                return INT75_CLASS;
            case INT76_INDEX:
                return INT76_CLASS;
            case INT77_INDEX:
                return INT77_CLASS;
            case INT78_INDEX:
                return INT78_CLASS;
            case INT79_INDEX:
                return INT79_CLASS;
            case INT80_INDEX:
                return INT80_CLASS;
            case INT81_INDEX:
                return INT81_CLASS;
            case INT82_INDEX:
                return INT82_CLASS;
            case INT83_INDEX:
                return INT83_CLASS;
            case INT84_INDEX:
                return INT84_CLASS;
            case INT85_INDEX:
                return INT85_CLASS;
            case INT86_INDEX:
                return INT86_CLASS;
            case INT87_INDEX:
                return INT87_CLASS;
            case INT88_INDEX:
                return INT88_CLASS;
            case INT89_INDEX:
                return INT89_CLASS;
            case INT90_INDEX:
                return INT90_CLASS;
            case INT91_INDEX:
                return INT91_CLASS;
            case INT92_INDEX:
                return INT92_CLASS;
            case INT93_INDEX:
                return INT93_CLASS;
            case INT94_INDEX:
                return INT94_CLASS;
            case INT95_INDEX:
                return INT95_CLASS;
            case INT96_INDEX:
                return INT96_CLASS;
            case INT97_INDEX:
                return INT97_CLASS;
            case INT98_INDEX:
                return INT98_CLASS;
            case INT99_INDEX:
                return INT99_CLASS;
            case INT100_INDEX:
                return INT100_CLASS;
            case INT101_INDEX:
                return INT101_CLASS;
            case INT102_INDEX:
                return INT102_CLASS;
            case INT103_INDEX:
                return INT103_CLASS;
            case INT104_INDEX:
                return INT104_CLASS;
            case INT105_INDEX:
                return INT105_CLASS;
            case INT106_INDEX:
                return INT106_CLASS;
            case INT107_INDEX:
                return INT107_CLASS;
            case INT108_INDEX:
                return INT108_CLASS;
            case INT109_INDEX:
                return INT109_CLASS;
            case INT110_INDEX:
                return INT110_CLASS;
            case INT111_INDEX:
                return INT111_CLASS;
            case INT112_INDEX:
                return INT112_CLASS;
            case INT113_INDEX:
                return INT113_CLASS;
            case INT114_INDEX:
                return INT114_CLASS;
            case INT115_INDEX:
                return INT115_CLASS;
            case INT116_INDEX:
                return INT116_CLASS;
            case INT117_INDEX:
                return INT117_CLASS;
            case INT118_INDEX:
                return INT118_CLASS;
            case INT119_INDEX:
                return INT119_CLASS;
            case INT120_INDEX:
                return INT120_CLASS;
            case INT121_INDEX:
                return INT121_CLASS;
            case INT122_INDEX:
                return INT122_CLASS;
            case INT123_INDEX:
                return INT123_CLASS;
            case INT124_INDEX:
                return INT124_CLASS;
            case INT125_INDEX:
                return INT125_CLASS;
            case INT126_INDEX:
                return INT126_CLASS;
            case INT127_INDEX:
                return INT127_CLASS;
            case INT128_INDEX:
                return INT128_CLASS;
            case INT129_INDEX:
                return INT129_CLASS;
            case INT130_INDEX:
                return INT130_CLASS;
            case INT131_INDEX:
                return INT131_CLASS;
            case INT132_INDEX:
                return INT132_CLASS;
            case INT133_INDEX:
                return INT133_CLASS;
            case INT134_INDEX:
                return INT134_CLASS;
            case INT135_INDEX:
                return INT135_CLASS;
            case INT136_INDEX:
                return INT136_CLASS;
            case INT137_INDEX:
                return INT137_CLASS;
            case INT138_INDEX:
                return INT138_CLASS;
            case INT139_INDEX:
                return INT139_CLASS;
            case INT140_INDEX:
                return INT140_CLASS;
            case INT141_INDEX:
                return INT141_CLASS;
            case INT142_INDEX:
                return INT142_CLASS;
            case INT143_INDEX:
                return INT143_CLASS;
            case INT144_INDEX:
                return INT144_CLASS;
            case INT145_INDEX:
                return INT145_CLASS;
            case INT146_INDEX:
                return INT146_CLASS;
            case INT147_INDEX:
                return INT147_CLASS;
            case INT148_INDEX:
                return INT148_CLASS;
            case INT149_INDEX:
                return INT149_CLASS;
            case INT150_INDEX:
                return INT150_CLASS;
            case INT151_INDEX:
                return INT151_CLASS;
            case INT152_INDEX:
                return INT152_CLASS;
            case INT153_INDEX:
                return INT153_CLASS;
            case INT154_INDEX:
                return INT154_CLASS;
            case INT155_INDEX:
                return INT155_CLASS;
            case INT156_INDEX:
                return INT156_CLASS;
            case INT157_INDEX:
                return INT157_CLASS;
            case INT158_INDEX:
                return INT158_CLASS;
            case INT159_INDEX:
                return INT159_CLASS;
            case INT160_INDEX:
                return INT160_CLASS;
            case INT161_INDEX:
                return INT161_CLASS;
            case INT162_INDEX:
                return INT162_CLASS;
            case INT163_INDEX:
                return INT163_CLASS;
            case INT164_INDEX:
                return INT164_CLASS;
            case INT165_INDEX:
                return INT165_CLASS;
            case INT166_INDEX:
                return INT166_CLASS;
            case INT167_INDEX:
                return INT167_CLASS;
            case INT168_INDEX:
                return INT168_CLASS;
            case INT169_INDEX:
                return INT169_CLASS;
            case INT170_INDEX:
                return INT170_CLASS;
            case INT171_INDEX:
                return INT171_CLASS;
            case INT172_INDEX:
                return INT172_CLASS;
            case INT173_INDEX:
                return INT173_CLASS;
            case INT174_INDEX:
                return INT174_CLASS;
            case INT175_INDEX:
                return INT175_CLASS;
            case INT176_INDEX:
                return INT176_CLASS;
            case INT177_INDEX:
                return INT177_CLASS;
            case INT178_INDEX:
                return INT178_CLASS;
            case INT179_INDEX:
                return INT179_CLASS;
            case INT180_INDEX:
                return INT180_CLASS;
            case INT181_INDEX:
                return INT181_CLASS;
            case INT182_INDEX:
                return INT182_CLASS;
            case INT183_INDEX:
                return INT183_CLASS;
            case INT184_INDEX:
                return INT184_CLASS;
            case INT185_INDEX:
                return INT185_CLASS;
            case INT186_INDEX:
                return INT186_CLASS;
            case INT187_INDEX:
                return INT187_CLASS;
            case INT188_INDEX:
                return INT188_CLASS;
            case INT189_INDEX:
                return INT189_CLASS;
            case INT190_INDEX:
                return INT190_CLASS;
            case INT191_INDEX:
                return INT191_CLASS;
            case INT192_INDEX:
                return INT192_CLASS;
            case INT193_INDEX:
                return INT193_CLASS;
            case INT194_INDEX:
                return INT194_CLASS;
            case INT195_INDEX:
                return INT195_CLASS;
            case INT196_INDEX:
                return INT196_CLASS;
            case INT197_INDEX:
                return INT197_CLASS;
            case INT198_INDEX:
                return INT198_CLASS;
            case INT199_INDEX:
                return INT199_CLASS;
            case INT200_INDEX:
                return INT200_CLASS;
            case INT201_INDEX:
                return INT201_CLASS;
            case INT202_INDEX:
                return INT202_CLASS;
            case INT203_INDEX:
                return INT203_CLASS;
            case INT204_INDEX:
                return INT204_CLASS;
            case INT205_INDEX:
                return INT205_CLASS;
            case INT206_INDEX:
                return INT206_CLASS;
            case INT207_INDEX:
                return INT207_CLASS;
            case INT208_INDEX:
                return INT208_CLASS;
            case INT209_INDEX:
                return INT209_CLASS;
            case INT210_INDEX:
                return INT210_CLASS;
            case INT211_INDEX:
                return INT211_CLASS;
            case INT212_INDEX:
                return INT212_CLASS;
            case INT213_INDEX:
                return INT213_CLASS;
            case INT214_INDEX:
                return INT214_CLASS;
            case INT215_INDEX:
                return INT215_CLASS;
            case INT216_INDEX:
                return INT216_CLASS;
            case INT217_INDEX:
                return INT217_CLASS;
            case INT218_INDEX:
                return INT218_CLASS;
            case INT219_INDEX:
                return INT219_CLASS;
            case INT220_INDEX:
                return INT220_CLASS;
            case INT221_INDEX:
                return INT221_CLASS;
            case INT222_INDEX:
                return INT222_CLASS;
            case INT223_INDEX:
                return INT223_CLASS;
            case INT224_INDEX:
                return INT224_CLASS;
            case INT225_INDEX:
                return INT225_CLASS;
            case INT226_INDEX:
                return INT226_CLASS;
            case INT227_INDEX:
                return INT227_CLASS;
            case INT228_INDEX:
                return INT228_CLASS;
            case INT229_INDEX:
                return INT229_CLASS;
            case INT230_INDEX:
                return INT230_CLASS;
            case INT231_INDEX:
                return INT231_CLASS;
            case INT232_INDEX:
                return INT232_CLASS;
            case INT233_INDEX:
                return INT233_CLASS;
            case INT234_INDEX:
                return INT234_CLASS;
            case INT235_INDEX:
                return INT235_CLASS;
            case INT236_INDEX:
                return INT236_CLASS;
            case INT237_INDEX:
                return INT237_CLASS;
            case INT238_INDEX:
                return INT238_CLASS;
            case INT239_INDEX:
                return INT239_CLASS;
            case INT240_INDEX:
                return INT240_CLASS;
            case INT241_INDEX:
                return INT241_CLASS;
            case INT242_INDEX:
                return INT242_CLASS;
            case INT243_INDEX:
                return INT243_CLASS;
            case INT244_INDEX:
                return INT244_CLASS;
            case INT245_INDEX:
                return INT245_CLASS;
            case INT246_INDEX:
                return INT246_CLASS;
            case INT247_INDEX:
                return INT247_CLASS;
            case INT248_INDEX:
                return INT248_CLASS;
            case INT249_INDEX:
                return INT249_CLASS;
            case INT250_INDEX:
                return INT250_CLASS;
            case INT251_INDEX:
                return INT251_CLASS;
            case INT252_INDEX:
                return INT252_CLASS;
            case INT253_INDEX:
                return INT253_CLASS;
            case INT254_INDEX:
                return INT254_CLASS;
            case INT255_INDEX:
                return INT255_CLASS;
            case INT256_INDEX:
                return INT256_CLASS;
            default:
                throw new IllegalArgumentException();
        }
    }

    protected static class Version extends com.objectfabric.TGeneratedFieldsN.Version {

        public int _int0;

        public int _int1;

        public int _int2;

        public int _int3;

        public int _int4;

        public int _int5;

        public int _int6;

        public int _int7;

        public int _int8;

        public int _int9;

        public int _int10;

        public int _int11;

        public int _int12;

        public int _int13;

        public int _int14;

        public int _int15;

        public int _int16;

        public int _int17;

        public int _int18;

        public int _int19;

        public int _int20;

        public int _int21;

        public int _int22;

        public int _int23;

        public int _int24;

        public int _int25;

        public int _int26;

        public int _int27;

        public int _int28;

        public int _int29;

        public int _int30;

        public int _int31;

        public int _int32;

        public int _int33;

        public int _int34;

        public int _int35;

        public int _int36;

        public int _int37;

        public int _int38;

        public int _int39;

        public int _int40;

        public int _int41;

        public int _int42;

        public int _int43;

        public int _int44;

        public int _int45;

        public int _int46;

        public int _int47;

        public int _int48;

        public int _int49;

        public int _int50;

        public int _int51;

        public int _int52;

        public int _int53;

        public int _int54;

        public int _int55;

        public int _int56;

        public int _int57;

        public int _int58;

        public int _int59;

        public int _int60;

        public int _int61;

        public int _int62;

        public int _int63;

        public int _int64;

        public int _int65;

        public int _int66;

        public int _int67;

        public int _int68;

        public int _int69;

        public int _int70;

        public int _int71;

        public int _int72;

        public int _int73;

        public int _int74;

        public int _int75;

        public int _int76;

        public int _int77;

        public int _int78;

        public int _int79;

        public int _int80;

        public int _int81;

        public int _int82;

        public int _int83;

        public int _int84;

        public int _int85;

        public int _int86;

        public int _int87;

        public int _int88;

        public int _int89;

        public int _int90;

        public int _int91;

        public int _int92;

        public int _int93;

        public int _int94;

        public int _int95;

        public int _int96;

        public int _int97;

        public int _int98;

        public int _int99;

        public int _int100;

        public int _int101;

        public int _int102;

        public int _int103;

        public int _int104;

        public int _int105;

        public int _int106;

        public int _int107;

        public int _int108;

        public int _int109;

        public int _int110;

        public int _int111;

        public int _int112;

        public int _int113;

        public int _int114;

        public int _int115;

        public int _int116;

        public int _int117;

        public int _int118;

        public int _int119;

        public int _int120;

        public int _int121;

        public int _int122;

        public int _int123;

        public int _int124;

        public int _int125;

        public int _int126;

        public int _int127;

        public int _int128;

        public int _int129;

        public int _int130;

        public int _int131;

        public int _int132;

        public int _int133;

        public int _int134;

        public int _int135;

        public int _int136;

        public int _int137;

        public int _int138;

        public int _int139;

        public int _int140;

        public int _int141;

        public int _int142;

        public int _int143;

        public int _int144;

        public int _int145;

        public int _int146;

        public int _int147;

        public int _int148;

        public int _int149;

        public int _int150;

        public int _int151;

        public int _int152;

        public int _int153;

        public int _int154;

        public int _int155;

        public int _int156;

        public int _int157;

        public int _int158;

        public int _int159;

        public int _int160;

        public int _int161;

        public int _int162;

        public int _int163;

        public int _int164;

        public int _int165;

        public int _int166;

        public int _int167;

        public int _int168;

        public int _int169;

        public int _int170;

        public int _int171;

        public int _int172;

        public int _int173;

        public int _int174;

        public int _int175;

        public int _int176;

        public int _int177;

        public int _int178;

        public int _int179;

        public int _int180;

        public int _int181;

        public int _int182;

        public int _int183;

        public int _int184;

        public int _int185;

        public int _int186;

        public int _int187;

        public int _int188;

        public int _int189;

        public int _int190;

        public int _int191;

        public int _int192;

        public int _int193;

        public int _int194;

        public int _int195;

        public int _int196;

        public int _int197;

        public int _int198;

        public int _int199;

        public int _int200;

        public int _int201;

        public int _int202;

        public int _int203;

        public int _int204;

        public int _int205;

        public int _int206;

        public int _int207;

        public int _int208;

        public int _int209;

        public int _int210;

        public int _int211;

        public int _int212;

        public int _int213;

        public int _int214;

        public int _int215;

        public int _int216;

        public int _int217;

        public int _int218;

        public int _int219;

        public int _int220;

        public int _int221;

        public int _int222;

        public int _int223;

        public int _int224;

        public int _int225;

        public int _int226;

        public int _int227;

        public int _int228;

        public int _int229;

        public int _int230;

        public int _int231;

        public int _int232;

        public int _int233;

        public int _int234;

        public int _int235;

        public int _int236;

        public int _int237;

        public int _int238;

        public int _int239;

        public int _int240;

        public int _int241;

        public int _int242;

        public int _int243;

        public int _int244;

        public int _int245;

        public int _int246;

        public int _int247;

        public int _int248;

        public int _int249;

        public int _int250;

        public int _int251;

        public int _int252;

        public int _int253;

        public int _int254;

        public int _int255;

        public int _int256;

        static {
        }

        public Version(com.objectfabric.TGeneratedFieldsN.Version shared, int length) {
            super(shared, length);
        }

        @Override
        public java.lang.Object getAsObject(int index) {
            switch (index) {
                case INT0_INDEX:
                    return _int0;
                case INT1_INDEX:
                    return _int1;
                case INT2_INDEX:
                    return _int2;
                case INT3_INDEX:
                    return _int3;
                case INT4_INDEX:
                    return _int4;
                case INT5_INDEX:
                    return _int5;
                case INT6_INDEX:
                    return _int6;
                case INT7_INDEX:
                    return _int7;
                case INT8_INDEX:
                    return _int8;
                case INT9_INDEX:
                    return _int9;
                case INT10_INDEX:
                    return _int10;
                case INT11_INDEX:
                    return _int11;
                case INT12_INDEX:
                    return _int12;
                case INT13_INDEX:
                    return _int13;
                case INT14_INDEX:
                    return _int14;
                case INT15_INDEX:
                    return _int15;
                case INT16_INDEX:
                    return _int16;
                case INT17_INDEX:
                    return _int17;
                case INT18_INDEX:
                    return _int18;
                case INT19_INDEX:
                    return _int19;
                case INT20_INDEX:
                    return _int20;
                case INT21_INDEX:
                    return _int21;
                case INT22_INDEX:
                    return _int22;
                case INT23_INDEX:
                    return _int23;
                case INT24_INDEX:
                    return _int24;
                case INT25_INDEX:
                    return _int25;
                case INT26_INDEX:
                    return _int26;
                case INT27_INDEX:
                    return _int27;
                case INT28_INDEX:
                    return _int28;
                case INT29_INDEX:
                    return _int29;
                case INT30_INDEX:
                    return _int30;
                case INT31_INDEX:
                    return _int31;
                case INT32_INDEX:
                    return _int32;
                case INT33_INDEX:
                    return _int33;
                case INT34_INDEX:
                    return _int34;
                case INT35_INDEX:
                    return _int35;
                case INT36_INDEX:
                    return _int36;
                case INT37_INDEX:
                    return _int37;
                case INT38_INDEX:
                    return _int38;
                case INT39_INDEX:
                    return _int39;
                case INT40_INDEX:
                    return _int40;
                case INT41_INDEX:
                    return _int41;
                case INT42_INDEX:
                    return _int42;
                case INT43_INDEX:
                    return _int43;
                case INT44_INDEX:
                    return _int44;
                case INT45_INDEX:
                    return _int45;
                case INT46_INDEX:
                    return _int46;
                case INT47_INDEX:
                    return _int47;
                case INT48_INDEX:
                    return _int48;
                case INT49_INDEX:
                    return _int49;
                case INT50_INDEX:
                    return _int50;
                case INT51_INDEX:
                    return _int51;
                case INT52_INDEX:
                    return _int52;
                case INT53_INDEX:
                    return _int53;
                case INT54_INDEX:
                    return _int54;
                case INT55_INDEX:
                    return _int55;
                case INT56_INDEX:
                    return _int56;
                case INT57_INDEX:
                    return _int57;
                case INT58_INDEX:
                    return _int58;
                case INT59_INDEX:
                    return _int59;
                case INT60_INDEX:
                    return _int60;
                case INT61_INDEX:
                    return _int61;
                case INT62_INDEX:
                    return _int62;
                case INT63_INDEX:
                    return _int63;
                case INT64_INDEX:
                    return _int64;
                case INT65_INDEX:
                    return _int65;
                case INT66_INDEX:
                    return _int66;
                case INT67_INDEX:
                    return _int67;
                case INT68_INDEX:
                    return _int68;
                case INT69_INDEX:
                    return _int69;
                case INT70_INDEX:
                    return _int70;
                case INT71_INDEX:
                    return _int71;
                case INT72_INDEX:
                    return _int72;
                case INT73_INDEX:
                    return _int73;
                case INT74_INDEX:
                    return _int74;
                case INT75_INDEX:
                    return _int75;
                case INT76_INDEX:
                    return _int76;
                case INT77_INDEX:
                    return _int77;
                case INT78_INDEX:
                    return _int78;
                case INT79_INDEX:
                    return _int79;
                case INT80_INDEX:
                    return _int80;
                case INT81_INDEX:
                    return _int81;
                case INT82_INDEX:
                    return _int82;
                case INT83_INDEX:
                    return _int83;
                case INT84_INDEX:
                    return _int84;
                case INT85_INDEX:
                    return _int85;
                case INT86_INDEX:
                    return _int86;
                case INT87_INDEX:
                    return _int87;
                case INT88_INDEX:
                    return _int88;
                case INT89_INDEX:
                    return _int89;
                case INT90_INDEX:
                    return _int90;
                case INT91_INDEX:
                    return _int91;
                case INT92_INDEX:
                    return _int92;
                case INT93_INDEX:
                    return _int93;
                case INT94_INDEX:
                    return _int94;
                case INT95_INDEX:
                    return _int95;
                case INT96_INDEX:
                    return _int96;
                case INT97_INDEX:
                    return _int97;
                case INT98_INDEX:
                    return _int98;
                case INT99_INDEX:
                    return _int99;
                case INT100_INDEX:
                    return _int100;
                case INT101_INDEX:
                    return _int101;
                case INT102_INDEX:
                    return _int102;
                case INT103_INDEX:
                    return _int103;
                case INT104_INDEX:
                    return _int104;
                case INT105_INDEX:
                    return _int105;
                case INT106_INDEX:
                    return _int106;
                case INT107_INDEX:
                    return _int107;
                case INT108_INDEX:
                    return _int108;
                case INT109_INDEX:
                    return _int109;
                case INT110_INDEX:
                    return _int110;
                case INT111_INDEX:
                    return _int111;
                case INT112_INDEX:
                    return _int112;
                case INT113_INDEX:
                    return _int113;
                case INT114_INDEX:
                    return _int114;
                case INT115_INDEX:
                    return _int115;
                case INT116_INDEX:
                    return _int116;
                case INT117_INDEX:
                    return _int117;
                case INT118_INDEX:
                    return _int118;
                case INT119_INDEX:
                    return _int119;
                case INT120_INDEX:
                    return _int120;
                case INT121_INDEX:
                    return _int121;
                case INT122_INDEX:
                    return _int122;
                case INT123_INDEX:
                    return _int123;
                case INT124_INDEX:
                    return _int124;
                case INT125_INDEX:
                    return _int125;
                case INT126_INDEX:
                    return _int126;
                case INT127_INDEX:
                    return _int127;
                case INT128_INDEX:
                    return _int128;
                case INT129_INDEX:
                    return _int129;
                case INT130_INDEX:
                    return _int130;
                case INT131_INDEX:
                    return _int131;
                case INT132_INDEX:
                    return _int132;
                case INT133_INDEX:
                    return _int133;
                case INT134_INDEX:
                    return _int134;
                case INT135_INDEX:
                    return _int135;
                case INT136_INDEX:
                    return _int136;
                case INT137_INDEX:
                    return _int137;
                case INT138_INDEX:
                    return _int138;
                case INT139_INDEX:
                    return _int139;
                case INT140_INDEX:
                    return _int140;
                case INT141_INDEX:
                    return _int141;
                case INT142_INDEX:
                    return _int142;
                case INT143_INDEX:
                    return _int143;
                case INT144_INDEX:
                    return _int144;
                case INT145_INDEX:
                    return _int145;
                case INT146_INDEX:
                    return _int146;
                case INT147_INDEX:
                    return _int147;
                case INT148_INDEX:
                    return _int148;
                case INT149_INDEX:
                    return _int149;
                case INT150_INDEX:
                    return _int150;
                case INT151_INDEX:
                    return _int151;
                case INT152_INDEX:
                    return _int152;
                case INT153_INDEX:
                    return _int153;
                case INT154_INDEX:
                    return _int154;
                case INT155_INDEX:
                    return _int155;
                case INT156_INDEX:
                    return _int156;
                case INT157_INDEX:
                    return _int157;
                case INT158_INDEX:
                    return _int158;
                case INT159_INDEX:
                    return _int159;
                case INT160_INDEX:
                    return _int160;
                case INT161_INDEX:
                    return _int161;
                case INT162_INDEX:
                    return _int162;
                case INT163_INDEX:
                    return _int163;
                case INT164_INDEX:
                    return _int164;
                case INT165_INDEX:
                    return _int165;
                case INT166_INDEX:
                    return _int166;
                case INT167_INDEX:
                    return _int167;
                case INT168_INDEX:
                    return _int168;
                case INT169_INDEX:
                    return _int169;
                case INT170_INDEX:
                    return _int170;
                case INT171_INDEX:
                    return _int171;
                case INT172_INDEX:
                    return _int172;
                case INT173_INDEX:
                    return _int173;
                case INT174_INDEX:
                    return _int174;
                case INT175_INDEX:
                    return _int175;
                case INT176_INDEX:
                    return _int176;
                case INT177_INDEX:
                    return _int177;
                case INT178_INDEX:
                    return _int178;
                case INT179_INDEX:
                    return _int179;
                case INT180_INDEX:
                    return _int180;
                case INT181_INDEX:
                    return _int181;
                case INT182_INDEX:
                    return _int182;
                case INT183_INDEX:
                    return _int183;
                case INT184_INDEX:
                    return _int184;
                case INT185_INDEX:
                    return _int185;
                case INT186_INDEX:
                    return _int186;
                case INT187_INDEX:
                    return _int187;
                case INT188_INDEX:
                    return _int188;
                case INT189_INDEX:
                    return _int189;
                case INT190_INDEX:
                    return _int190;
                case INT191_INDEX:
                    return _int191;
                case INT192_INDEX:
                    return _int192;
                case INT193_INDEX:
                    return _int193;
                case INT194_INDEX:
                    return _int194;
                case INT195_INDEX:
                    return _int195;
                case INT196_INDEX:
                    return _int196;
                case INT197_INDEX:
                    return _int197;
                case INT198_INDEX:
                    return _int198;
                case INT199_INDEX:
                    return _int199;
                case INT200_INDEX:
                    return _int200;
                case INT201_INDEX:
                    return _int201;
                case INT202_INDEX:
                    return _int202;
                case INT203_INDEX:
                    return _int203;
                case INT204_INDEX:
                    return _int204;
                case INT205_INDEX:
                    return _int205;
                case INT206_INDEX:
                    return _int206;
                case INT207_INDEX:
                    return _int207;
                case INT208_INDEX:
                    return _int208;
                case INT209_INDEX:
                    return _int209;
                case INT210_INDEX:
                    return _int210;
                case INT211_INDEX:
                    return _int211;
                case INT212_INDEX:
                    return _int212;
                case INT213_INDEX:
                    return _int213;
                case INT214_INDEX:
                    return _int214;
                case INT215_INDEX:
                    return _int215;
                case INT216_INDEX:
                    return _int216;
                case INT217_INDEX:
                    return _int217;
                case INT218_INDEX:
                    return _int218;
                case INT219_INDEX:
                    return _int219;
                case INT220_INDEX:
                    return _int220;
                case INT221_INDEX:
                    return _int221;
                case INT222_INDEX:
                    return _int222;
                case INT223_INDEX:
                    return _int223;
                case INT224_INDEX:
                    return _int224;
                case INT225_INDEX:
                    return _int225;
                case INT226_INDEX:
                    return _int226;
                case INT227_INDEX:
                    return _int227;
                case INT228_INDEX:
                    return _int228;
                case INT229_INDEX:
                    return _int229;
                case INT230_INDEX:
                    return _int230;
                case INT231_INDEX:
                    return _int231;
                case INT232_INDEX:
                    return _int232;
                case INT233_INDEX:
                    return _int233;
                case INT234_INDEX:
                    return _int234;
                case INT235_INDEX:
                    return _int235;
                case INT236_INDEX:
                    return _int236;
                case INT237_INDEX:
                    return _int237;
                case INT238_INDEX:
                    return _int238;
                case INT239_INDEX:
                    return _int239;
                case INT240_INDEX:
                    return _int240;
                case INT241_INDEX:
                    return _int241;
                case INT242_INDEX:
                    return _int242;
                case INT243_INDEX:
                    return _int243;
                case INT244_INDEX:
                    return _int244;
                case INT245_INDEX:
                    return _int245;
                case INT246_INDEX:
                    return _int246;
                case INT247_INDEX:
                    return _int247;
                case INT248_INDEX:
                    return _int248;
                case INT249_INDEX:
                    return _int249;
                case INT250_INDEX:
                    return _int250;
                case INT251_INDEX:
                    return _int251;
                case INT252_INDEX:
                    return _int252;
                case INT253_INDEX:
                    return _int253;
                case INT254_INDEX:
                    return _int254;
                case INT255_INDEX:
                    return _int255;
                case INT256_INDEX:
                    return _int256;
                default:
                    return super.getAsObject(index);
            }
        }

        @Override
        public void setAsObject(int index, java.lang.Object value) {
            switch (index) {
                case INT0_INDEX:
                    _int0 = ((java.lang.Integer) value).intValue();
                    break;
                case INT1_INDEX:
                    _int1 = ((java.lang.Integer) value).intValue();
                    break;
                case INT2_INDEX:
                    _int2 = ((java.lang.Integer) value).intValue();
                    break;
                case INT3_INDEX:
                    _int3 = ((java.lang.Integer) value).intValue();
                    break;
                case INT4_INDEX:
                    _int4 = ((java.lang.Integer) value).intValue();
                    break;
                case INT5_INDEX:
                    _int5 = ((java.lang.Integer) value).intValue();
                    break;
                case INT6_INDEX:
                    _int6 = ((java.lang.Integer) value).intValue();
                    break;
                case INT7_INDEX:
                    _int7 = ((java.lang.Integer) value).intValue();
                    break;
                case INT8_INDEX:
                    _int8 = ((java.lang.Integer) value).intValue();
                    break;
                case INT9_INDEX:
                    _int9 = ((java.lang.Integer) value).intValue();
                    break;
                case INT10_INDEX:
                    _int10 = ((java.lang.Integer) value).intValue();
                    break;
                case INT11_INDEX:
                    _int11 = ((java.lang.Integer) value).intValue();
                    break;
                case INT12_INDEX:
                    _int12 = ((java.lang.Integer) value).intValue();
                    break;
                case INT13_INDEX:
                    _int13 = ((java.lang.Integer) value).intValue();
                    break;
                case INT14_INDEX:
                    _int14 = ((java.lang.Integer) value).intValue();
                    break;
                case INT15_INDEX:
                    _int15 = ((java.lang.Integer) value).intValue();
                    break;
                case INT16_INDEX:
                    _int16 = ((java.lang.Integer) value).intValue();
                    break;
                case INT17_INDEX:
                    _int17 = ((java.lang.Integer) value).intValue();
                    break;
                case INT18_INDEX:
                    _int18 = ((java.lang.Integer) value).intValue();
                    break;
                case INT19_INDEX:
                    _int19 = ((java.lang.Integer) value).intValue();
                    break;
                case INT20_INDEX:
                    _int20 = ((java.lang.Integer) value).intValue();
                    break;
                case INT21_INDEX:
                    _int21 = ((java.lang.Integer) value).intValue();
                    break;
                case INT22_INDEX:
                    _int22 = ((java.lang.Integer) value).intValue();
                    break;
                case INT23_INDEX:
                    _int23 = ((java.lang.Integer) value).intValue();
                    break;
                case INT24_INDEX:
                    _int24 = ((java.lang.Integer) value).intValue();
                    break;
                case INT25_INDEX:
                    _int25 = ((java.lang.Integer) value).intValue();
                    break;
                case INT26_INDEX:
                    _int26 = ((java.lang.Integer) value).intValue();
                    break;
                case INT27_INDEX:
                    _int27 = ((java.lang.Integer) value).intValue();
                    break;
                case INT28_INDEX:
                    _int28 = ((java.lang.Integer) value).intValue();
                    break;
                case INT29_INDEX:
                    _int29 = ((java.lang.Integer) value).intValue();
                    break;
                case INT30_INDEX:
                    _int30 = ((java.lang.Integer) value).intValue();
                    break;
                case INT31_INDEX:
                    _int31 = ((java.lang.Integer) value).intValue();
                    break;
                case INT32_INDEX:
                    _int32 = ((java.lang.Integer) value).intValue();
                    break;
                case INT33_INDEX:
                    _int33 = ((java.lang.Integer) value).intValue();
                    break;
                case INT34_INDEX:
                    _int34 = ((java.lang.Integer) value).intValue();
                    break;
                case INT35_INDEX:
                    _int35 = ((java.lang.Integer) value).intValue();
                    break;
                case INT36_INDEX:
                    _int36 = ((java.lang.Integer) value).intValue();
                    break;
                case INT37_INDEX:
                    _int37 = ((java.lang.Integer) value).intValue();
                    break;
                case INT38_INDEX:
                    _int38 = ((java.lang.Integer) value).intValue();
                    break;
                case INT39_INDEX:
                    _int39 = ((java.lang.Integer) value).intValue();
                    break;
                case INT40_INDEX:
                    _int40 = ((java.lang.Integer) value).intValue();
                    break;
                case INT41_INDEX:
                    _int41 = ((java.lang.Integer) value).intValue();
                    break;
                case INT42_INDEX:
                    _int42 = ((java.lang.Integer) value).intValue();
                    break;
                case INT43_INDEX:
                    _int43 = ((java.lang.Integer) value).intValue();
                    break;
                case INT44_INDEX:
                    _int44 = ((java.lang.Integer) value).intValue();
                    break;
                case INT45_INDEX:
                    _int45 = ((java.lang.Integer) value).intValue();
                    break;
                case INT46_INDEX:
                    _int46 = ((java.lang.Integer) value).intValue();
                    break;
                case INT47_INDEX:
                    _int47 = ((java.lang.Integer) value).intValue();
                    break;
                case INT48_INDEX:
                    _int48 = ((java.lang.Integer) value).intValue();
                    break;
                case INT49_INDEX:
                    _int49 = ((java.lang.Integer) value).intValue();
                    break;
                case INT50_INDEX:
                    _int50 = ((java.lang.Integer) value).intValue();
                    break;
                case INT51_INDEX:
                    _int51 = ((java.lang.Integer) value).intValue();
                    break;
                case INT52_INDEX:
                    _int52 = ((java.lang.Integer) value).intValue();
                    break;
                case INT53_INDEX:
                    _int53 = ((java.lang.Integer) value).intValue();
                    break;
                case INT54_INDEX:
                    _int54 = ((java.lang.Integer) value).intValue();
                    break;
                case INT55_INDEX:
                    _int55 = ((java.lang.Integer) value).intValue();
                    break;
                case INT56_INDEX:
                    _int56 = ((java.lang.Integer) value).intValue();
                    break;
                case INT57_INDEX:
                    _int57 = ((java.lang.Integer) value).intValue();
                    break;
                case INT58_INDEX:
                    _int58 = ((java.lang.Integer) value).intValue();
                    break;
                case INT59_INDEX:
                    _int59 = ((java.lang.Integer) value).intValue();
                    break;
                case INT60_INDEX:
                    _int60 = ((java.lang.Integer) value).intValue();
                    break;
                case INT61_INDEX:
                    _int61 = ((java.lang.Integer) value).intValue();
                    break;
                case INT62_INDEX:
                    _int62 = ((java.lang.Integer) value).intValue();
                    break;
                case INT63_INDEX:
                    _int63 = ((java.lang.Integer) value).intValue();
                    break;
                case INT64_INDEX:
                    _int64 = ((java.lang.Integer) value).intValue();
                    break;
                case INT65_INDEX:
                    _int65 = ((java.lang.Integer) value).intValue();
                    break;
                case INT66_INDEX:
                    _int66 = ((java.lang.Integer) value).intValue();
                    break;
                case INT67_INDEX:
                    _int67 = ((java.lang.Integer) value).intValue();
                    break;
                case INT68_INDEX:
                    _int68 = ((java.lang.Integer) value).intValue();
                    break;
                case INT69_INDEX:
                    _int69 = ((java.lang.Integer) value).intValue();
                    break;
                case INT70_INDEX:
                    _int70 = ((java.lang.Integer) value).intValue();
                    break;
                case INT71_INDEX:
                    _int71 = ((java.lang.Integer) value).intValue();
                    break;
                case INT72_INDEX:
                    _int72 = ((java.lang.Integer) value).intValue();
                    break;
                case INT73_INDEX:
                    _int73 = ((java.lang.Integer) value).intValue();
                    break;
                case INT74_INDEX:
                    _int74 = ((java.lang.Integer) value).intValue();
                    break;
                case INT75_INDEX:
                    _int75 = ((java.lang.Integer) value).intValue();
                    break;
                case INT76_INDEX:
                    _int76 = ((java.lang.Integer) value).intValue();
                    break;
                case INT77_INDEX:
                    _int77 = ((java.lang.Integer) value).intValue();
                    break;
                case INT78_INDEX:
                    _int78 = ((java.lang.Integer) value).intValue();
                    break;
                case INT79_INDEX:
                    _int79 = ((java.lang.Integer) value).intValue();
                    break;
                case INT80_INDEX:
                    _int80 = ((java.lang.Integer) value).intValue();
                    break;
                case INT81_INDEX:
                    _int81 = ((java.lang.Integer) value).intValue();
                    break;
                case INT82_INDEX:
                    _int82 = ((java.lang.Integer) value).intValue();
                    break;
                case INT83_INDEX:
                    _int83 = ((java.lang.Integer) value).intValue();
                    break;
                case INT84_INDEX:
                    _int84 = ((java.lang.Integer) value).intValue();
                    break;
                case INT85_INDEX:
                    _int85 = ((java.lang.Integer) value).intValue();
                    break;
                case INT86_INDEX:
                    _int86 = ((java.lang.Integer) value).intValue();
                    break;
                case INT87_INDEX:
                    _int87 = ((java.lang.Integer) value).intValue();
                    break;
                case INT88_INDEX:
                    _int88 = ((java.lang.Integer) value).intValue();
                    break;
                case INT89_INDEX:
                    _int89 = ((java.lang.Integer) value).intValue();
                    break;
                case INT90_INDEX:
                    _int90 = ((java.lang.Integer) value).intValue();
                    break;
                case INT91_INDEX:
                    _int91 = ((java.lang.Integer) value).intValue();
                    break;
                case INT92_INDEX:
                    _int92 = ((java.lang.Integer) value).intValue();
                    break;
                case INT93_INDEX:
                    _int93 = ((java.lang.Integer) value).intValue();
                    break;
                case INT94_INDEX:
                    _int94 = ((java.lang.Integer) value).intValue();
                    break;
                case INT95_INDEX:
                    _int95 = ((java.lang.Integer) value).intValue();
                    break;
                case INT96_INDEX:
                    _int96 = ((java.lang.Integer) value).intValue();
                    break;
                case INT97_INDEX:
                    _int97 = ((java.lang.Integer) value).intValue();
                    break;
                case INT98_INDEX:
                    _int98 = ((java.lang.Integer) value).intValue();
                    break;
                case INT99_INDEX:
                    _int99 = ((java.lang.Integer) value).intValue();
                    break;
                case INT100_INDEX:
                    _int100 = ((java.lang.Integer) value).intValue();
                    break;
                case INT101_INDEX:
                    _int101 = ((java.lang.Integer) value).intValue();
                    break;
                case INT102_INDEX:
                    _int102 = ((java.lang.Integer) value).intValue();
                    break;
                case INT103_INDEX:
                    _int103 = ((java.lang.Integer) value).intValue();
                    break;
                case INT104_INDEX:
                    _int104 = ((java.lang.Integer) value).intValue();
                    break;
                case INT105_INDEX:
                    _int105 = ((java.lang.Integer) value).intValue();
                    break;
                case INT106_INDEX:
                    _int106 = ((java.lang.Integer) value).intValue();
                    break;
                case INT107_INDEX:
                    _int107 = ((java.lang.Integer) value).intValue();
                    break;
                case INT108_INDEX:
                    _int108 = ((java.lang.Integer) value).intValue();
                    break;
                case INT109_INDEX:
                    _int109 = ((java.lang.Integer) value).intValue();
                    break;
                case INT110_INDEX:
                    _int110 = ((java.lang.Integer) value).intValue();
                    break;
                case INT111_INDEX:
                    _int111 = ((java.lang.Integer) value).intValue();
                    break;
                case INT112_INDEX:
                    _int112 = ((java.lang.Integer) value).intValue();
                    break;
                case INT113_INDEX:
                    _int113 = ((java.lang.Integer) value).intValue();
                    break;
                case INT114_INDEX:
                    _int114 = ((java.lang.Integer) value).intValue();
                    break;
                case INT115_INDEX:
                    _int115 = ((java.lang.Integer) value).intValue();
                    break;
                case INT116_INDEX:
                    _int116 = ((java.lang.Integer) value).intValue();
                    break;
                case INT117_INDEX:
                    _int117 = ((java.lang.Integer) value).intValue();
                    break;
                case INT118_INDEX:
                    _int118 = ((java.lang.Integer) value).intValue();
                    break;
                case INT119_INDEX:
                    _int119 = ((java.lang.Integer) value).intValue();
                    break;
                case INT120_INDEX:
                    _int120 = ((java.lang.Integer) value).intValue();
                    break;
                case INT121_INDEX:
                    _int121 = ((java.lang.Integer) value).intValue();
                    break;
                case INT122_INDEX:
                    _int122 = ((java.lang.Integer) value).intValue();
                    break;
                case INT123_INDEX:
                    _int123 = ((java.lang.Integer) value).intValue();
                    break;
                case INT124_INDEX:
                    _int124 = ((java.lang.Integer) value).intValue();
                    break;
                case INT125_INDEX:
                    _int125 = ((java.lang.Integer) value).intValue();
                    break;
                case INT126_INDEX:
                    _int126 = ((java.lang.Integer) value).intValue();
                    break;
                case INT127_INDEX:
                    _int127 = ((java.lang.Integer) value).intValue();
                    break;
                case INT128_INDEX:
                    _int128 = ((java.lang.Integer) value).intValue();
                    break;
                case INT129_INDEX:
                    _int129 = ((java.lang.Integer) value).intValue();
                    break;
                case INT130_INDEX:
                    _int130 = ((java.lang.Integer) value).intValue();
                    break;
                case INT131_INDEX:
                    _int131 = ((java.lang.Integer) value).intValue();
                    break;
                case INT132_INDEX:
                    _int132 = ((java.lang.Integer) value).intValue();
                    break;
                case INT133_INDEX:
                    _int133 = ((java.lang.Integer) value).intValue();
                    break;
                case INT134_INDEX:
                    _int134 = ((java.lang.Integer) value).intValue();
                    break;
                case INT135_INDEX:
                    _int135 = ((java.lang.Integer) value).intValue();
                    break;
                case INT136_INDEX:
                    _int136 = ((java.lang.Integer) value).intValue();
                    break;
                case INT137_INDEX:
                    _int137 = ((java.lang.Integer) value).intValue();
                    break;
                case INT138_INDEX:
                    _int138 = ((java.lang.Integer) value).intValue();
                    break;
                case INT139_INDEX:
                    _int139 = ((java.lang.Integer) value).intValue();
                    break;
                case INT140_INDEX:
                    _int140 = ((java.lang.Integer) value).intValue();
                    break;
                case INT141_INDEX:
                    _int141 = ((java.lang.Integer) value).intValue();
                    break;
                case INT142_INDEX:
                    _int142 = ((java.lang.Integer) value).intValue();
                    break;
                case INT143_INDEX:
                    _int143 = ((java.lang.Integer) value).intValue();
                    break;
                case INT144_INDEX:
                    _int144 = ((java.lang.Integer) value).intValue();
                    break;
                case INT145_INDEX:
                    _int145 = ((java.lang.Integer) value).intValue();
                    break;
                case INT146_INDEX:
                    _int146 = ((java.lang.Integer) value).intValue();
                    break;
                case INT147_INDEX:
                    _int147 = ((java.lang.Integer) value).intValue();
                    break;
                case INT148_INDEX:
                    _int148 = ((java.lang.Integer) value).intValue();
                    break;
                case INT149_INDEX:
                    _int149 = ((java.lang.Integer) value).intValue();
                    break;
                case INT150_INDEX:
                    _int150 = ((java.lang.Integer) value).intValue();
                    break;
                case INT151_INDEX:
                    _int151 = ((java.lang.Integer) value).intValue();
                    break;
                case INT152_INDEX:
                    _int152 = ((java.lang.Integer) value).intValue();
                    break;
                case INT153_INDEX:
                    _int153 = ((java.lang.Integer) value).intValue();
                    break;
                case INT154_INDEX:
                    _int154 = ((java.lang.Integer) value).intValue();
                    break;
                case INT155_INDEX:
                    _int155 = ((java.lang.Integer) value).intValue();
                    break;
                case INT156_INDEX:
                    _int156 = ((java.lang.Integer) value).intValue();
                    break;
                case INT157_INDEX:
                    _int157 = ((java.lang.Integer) value).intValue();
                    break;
                case INT158_INDEX:
                    _int158 = ((java.lang.Integer) value).intValue();
                    break;
                case INT159_INDEX:
                    _int159 = ((java.lang.Integer) value).intValue();
                    break;
                case INT160_INDEX:
                    _int160 = ((java.lang.Integer) value).intValue();
                    break;
                case INT161_INDEX:
                    _int161 = ((java.lang.Integer) value).intValue();
                    break;
                case INT162_INDEX:
                    _int162 = ((java.lang.Integer) value).intValue();
                    break;
                case INT163_INDEX:
                    _int163 = ((java.lang.Integer) value).intValue();
                    break;
                case INT164_INDEX:
                    _int164 = ((java.lang.Integer) value).intValue();
                    break;
                case INT165_INDEX:
                    _int165 = ((java.lang.Integer) value).intValue();
                    break;
                case INT166_INDEX:
                    _int166 = ((java.lang.Integer) value).intValue();
                    break;
                case INT167_INDEX:
                    _int167 = ((java.lang.Integer) value).intValue();
                    break;
                case INT168_INDEX:
                    _int168 = ((java.lang.Integer) value).intValue();
                    break;
                case INT169_INDEX:
                    _int169 = ((java.lang.Integer) value).intValue();
                    break;
                case INT170_INDEX:
                    _int170 = ((java.lang.Integer) value).intValue();
                    break;
                case INT171_INDEX:
                    _int171 = ((java.lang.Integer) value).intValue();
                    break;
                case INT172_INDEX:
                    _int172 = ((java.lang.Integer) value).intValue();
                    break;
                case INT173_INDEX:
                    _int173 = ((java.lang.Integer) value).intValue();
                    break;
                case INT174_INDEX:
                    _int174 = ((java.lang.Integer) value).intValue();
                    break;
                case INT175_INDEX:
                    _int175 = ((java.lang.Integer) value).intValue();
                    break;
                case INT176_INDEX:
                    _int176 = ((java.lang.Integer) value).intValue();
                    break;
                case INT177_INDEX:
                    _int177 = ((java.lang.Integer) value).intValue();
                    break;
                case INT178_INDEX:
                    _int178 = ((java.lang.Integer) value).intValue();
                    break;
                case INT179_INDEX:
                    _int179 = ((java.lang.Integer) value).intValue();
                    break;
                case INT180_INDEX:
                    _int180 = ((java.lang.Integer) value).intValue();
                    break;
                case INT181_INDEX:
                    _int181 = ((java.lang.Integer) value).intValue();
                    break;
                case INT182_INDEX:
                    _int182 = ((java.lang.Integer) value).intValue();
                    break;
                case INT183_INDEX:
                    _int183 = ((java.lang.Integer) value).intValue();
                    break;
                case INT184_INDEX:
                    _int184 = ((java.lang.Integer) value).intValue();
                    break;
                case INT185_INDEX:
                    _int185 = ((java.lang.Integer) value).intValue();
                    break;
                case INT186_INDEX:
                    _int186 = ((java.lang.Integer) value).intValue();
                    break;
                case INT187_INDEX:
                    _int187 = ((java.lang.Integer) value).intValue();
                    break;
                case INT188_INDEX:
                    _int188 = ((java.lang.Integer) value).intValue();
                    break;
                case INT189_INDEX:
                    _int189 = ((java.lang.Integer) value).intValue();
                    break;
                case INT190_INDEX:
                    _int190 = ((java.lang.Integer) value).intValue();
                    break;
                case INT191_INDEX:
                    _int191 = ((java.lang.Integer) value).intValue();
                    break;
                case INT192_INDEX:
                    _int192 = ((java.lang.Integer) value).intValue();
                    break;
                case INT193_INDEX:
                    _int193 = ((java.lang.Integer) value).intValue();
                    break;
                case INT194_INDEX:
                    _int194 = ((java.lang.Integer) value).intValue();
                    break;
                case INT195_INDEX:
                    _int195 = ((java.lang.Integer) value).intValue();
                    break;
                case INT196_INDEX:
                    _int196 = ((java.lang.Integer) value).intValue();
                    break;
                case INT197_INDEX:
                    _int197 = ((java.lang.Integer) value).intValue();
                    break;
                case INT198_INDEX:
                    _int198 = ((java.lang.Integer) value).intValue();
                    break;
                case INT199_INDEX:
                    _int199 = ((java.lang.Integer) value).intValue();
                    break;
                case INT200_INDEX:
                    _int200 = ((java.lang.Integer) value).intValue();
                    break;
                case INT201_INDEX:
                    _int201 = ((java.lang.Integer) value).intValue();
                    break;
                case INT202_INDEX:
                    _int202 = ((java.lang.Integer) value).intValue();
                    break;
                case INT203_INDEX:
                    _int203 = ((java.lang.Integer) value).intValue();
                    break;
                case INT204_INDEX:
                    _int204 = ((java.lang.Integer) value).intValue();
                    break;
                case INT205_INDEX:
                    _int205 = ((java.lang.Integer) value).intValue();
                    break;
                case INT206_INDEX:
                    _int206 = ((java.lang.Integer) value).intValue();
                    break;
                case INT207_INDEX:
                    _int207 = ((java.lang.Integer) value).intValue();
                    break;
                case INT208_INDEX:
                    _int208 = ((java.lang.Integer) value).intValue();
                    break;
                case INT209_INDEX:
                    _int209 = ((java.lang.Integer) value).intValue();
                    break;
                case INT210_INDEX:
                    _int210 = ((java.lang.Integer) value).intValue();
                    break;
                case INT211_INDEX:
                    _int211 = ((java.lang.Integer) value).intValue();
                    break;
                case INT212_INDEX:
                    _int212 = ((java.lang.Integer) value).intValue();
                    break;
                case INT213_INDEX:
                    _int213 = ((java.lang.Integer) value).intValue();
                    break;
                case INT214_INDEX:
                    _int214 = ((java.lang.Integer) value).intValue();
                    break;
                case INT215_INDEX:
                    _int215 = ((java.lang.Integer) value).intValue();
                    break;
                case INT216_INDEX:
                    _int216 = ((java.lang.Integer) value).intValue();
                    break;
                case INT217_INDEX:
                    _int217 = ((java.lang.Integer) value).intValue();
                    break;
                case INT218_INDEX:
                    _int218 = ((java.lang.Integer) value).intValue();
                    break;
                case INT219_INDEX:
                    _int219 = ((java.lang.Integer) value).intValue();
                    break;
                case INT220_INDEX:
                    _int220 = ((java.lang.Integer) value).intValue();
                    break;
                case INT221_INDEX:
                    _int221 = ((java.lang.Integer) value).intValue();
                    break;
                case INT222_INDEX:
                    _int222 = ((java.lang.Integer) value).intValue();
                    break;
                case INT223_INDEX:
                    _int223 = ((java.lang.Integer) value).intValue();
                    break;
                case INT224_INDEX:
                    _int224 = ((java.lang.Integer) value).intValue();
                    break;
                case INT225_INDEX:
                    _int225 = ((java.lang.Integer) value).intValue();
                    break;
                case INT226_INDEX:
                    _int226 = ((java.lang.Integer) value).intValue();
                    break;
                case INT227_INDEX:
                    _int227 = ((java.lang.Integer) value).intValue();
                    break;
                case INT228_INDEX:
                    _int228 = ((java.lang.Integer) value).intValue();
                    break;
                case INT229_INDEX:
                    _int229 = ((java.lang.Integer) value).intValue();
                    break;
                case INT230_INDEX:
                    _int230 = ((java.lang.Integer) value).intValue();
                    break;
                case INT231_INDEX:
                    _int231 = ((java.lang.Integer) value).intValue();
                    break;
                case INT232_INDEX:
                    _int232 = ((java.lang.Integer) value).intValue();
                    break;
                case INT233_INDEX:
                    _int233 = ((java.lang.Integer) value).intValue();
                    break;
                case INT234_INDEX:
                    _int234 = ((java.lang.Integer) value).intValue();
                    break;
                case INT235_INDEX:
                    _int235 = ((java.lang.Integer) value).intValue();
                    break;
                case INT236_INDEX:
                    _int236 = ((java.lang.Integer) value).intValue();
                    break;
                case INT237_INDEX:
                    _int237 = ((java.lang.Integer) value).intValue();
                    break;
                case INT238_INDEX:
                    _int238 = ((java.lang.Integer) value).intValue();
                    break;
                case INT239_INDEX:
                    _int239 = ((java.lang.Integer) value).intValue();
                    break;
                case INT240_INDEX:
                    _int240 = ((java.lang.Integer) value).intValue();
                    break;
                case INT241_INDEX:
                    _int241 = ((java.lang.Integer) value).intValue();
                    break;
                case INT242_INDEX:
                    _int242 = ((java.lang.Integer) value).intValue();
                    break;
                case INT243_INDEX:
                    _int243 = ((java.lang.Integer) value).intValue();
                    break;
                case INT244_INDEX:
                    _int244 = ((java.lang.Integer) value).intValue();
                    break;
                case INT245_INDEX:
                    _int245 = ((java.lang.Integer) value).intValue();
                    break;
                case INT246_INDEX:
                    _int246 = ((java.lang.Integer) value).intValue();
                    break;
                case INT247_INDEX:
                    _int247 = ((java.lang.Integer) value).intValue();
                    break;
                case INT248_INDEX:
                    _int248 = ((java.lang.Integer) value).intValue();
                    break;
                case INT249_INDEX:
                    _int249 = ((java.lang.Integer) value).intValue();
                    break;
                case INT250_INDEX:
                    _int250 = ((java.lang.Integer) value).intValue();
                    break;
                case INT251_INDEX:
                    _int251 = ((java.lang.Integer) value).intValue();
                    break;
                case INT252_INDEX:
                    _int252 = ((java.lang.Integer) value).intValue();
                    break;
                case INT253_INDEX:
                    _int253 = ((java.lang.Integer) value).intValue();
                    break;
                case INT254_INDEX:
                    _int254 = ((java.lang.Integer) value).intValue();
                    break;
                case INT255_INDEX:
                    _int255 = ((java.lang.Integer) value).intValue();
                    break;
                case INT256_INDEX:
                    _int256 = ((java.lang.Integer) value).intValue();
                    break;
                default:
                    super.setAsObject(index, value);
                    break;
            }
        }

        @Override
        public com.objectfabric.TObject.Version merge(com.objectfabric.TObject.Version target, com.objectfabric.TObject.Version next, int flags) {
            LimitN_min.Version source = (LimitN_min.Version) next;
            LimitN_min.Version merged = (LimitN_min.Version) super.merge(target, next, flags);

            if (source.hasBits()) {
                if (source.getBit(INT0_INDEX))
                    merged._int0 = source._int0;

                if (source.getBit(INT1_INDEX))
                    merged._int1 = source._int1;

                if (source.getBit(INT2_INDEX))
                    merged._int2 = source._int2;

                if (source.getBit(INT3_INDEX))
                    merged._int3 = source._int3;

                if (source.getBit(INT4_INDEX))
                    merged._int4 = source._int4;

                if (source.getBit(INT5_INDEX))
                    merged._int5 = source._int5;

                if (source.getBit(INT6_INDEX))
                    merged._int6 = source._int6;

                if (source.getBit(INT7_INDEX))
                    merged._int7 = source._int7;

                if (source.getBit(INT8_INDEX))
                    merged._int8 = source._int8;

                if (source.getBit(INT9_INDEX))
                    merged._int9 = source._int9;

                if (source.getBit(INT10_INDEX))
                    merged._int10 = source._int10;

                if (source.getBit(INT11_INDEX))
                    merged._int11 = source._int11;

                if (source.getBit(INT12_INDEX))
                    merged._int12 = source._int12;

                if (source.getBit(INT13_INDEX))
                    merged._int13 = source._int13;

                if (source.getBit(INT14_INDEX))
                    merged._int14 = source._int14;

                if (source.getBit(INT15_INDEX))
                    merged._int15 = source._int15;

                if (source.getBit(INT16_INDEX))
                    merged._int16 = source._int16;

                if (source.getBit(INT17_INDEX))
                    merged._int17 = source._int17;

                if (source.getBit(INT18_INDEX))
                    merged._int18 = source._int18;

                if (source.getBit(INT19_INDEX))
                    merged._int19 = source._int19;

                if (source.getBit(INT20_INDEX))
                    merged._int20 = source._int20;

                if (source.getBit(INT21_INDEX))
                    merged._int21 = source._int21;

                if (source.getBit(INT22_INDEX))
                    merged._int22 = source._int22;

                if (source.getBit(INT23_INDEX))
                    merged._int23 = source._int23;

                if (source.getBit(INT24_INDEX))
                    merged._int24 = source._int24;

                if (source.getBit(INT25_INDEX))
                    merged._int25 = source._int25;

                if (source.getBit(INT26_INDEX))
                    merged._int26 = source._int26;

                if (source.getBit(INT27_INDEX))
                    merged._int27 = source._int27;

                if (source.getBit(INT28_INDEX))
                    merged._int28 = source._int28;

                if (source.getBit(INT29_INDEX))
                    merged._int29 = source._int29;

                if (source.getBit(INT30_INDEX))
                    merged._int30 = source._int30;

                if (source.getBit(INT31_INDEX))
                    merged._int31 = source._int31;

                if (source.getBit(INT32_INDEX))
                    merged._int32 = source._int32;

                if (source.getBit(INT33_INDEX))
                    merged._int33 = source._int33;

                if (source.getBit(INT34_INDEX))
                    merged._int34 = source._int34;

                if (source.getBit(INT35_INDEX))
                    merged._int35 = source._int35;

                if (source.getBit(INT36_INDEX))
                    merged._int36 = source._int36;

                if (source.getBit(INT37_INDEX))
                    merged._int37 = source._int37;

                if (source.getBit(INT38_INDEX))
                    merged._int38 = source._int38;

                if (source.getBit(INT39_INDEX))
                    merged._int39 = source._int39;

                if (source.getBit(INT40_INDEX))
                    merged._int40 = source._int40;

                if (source.getBit(INT41_INDEX))
                    merged._int41 = source._int41;

                if (source.getBit(INT42_INDEX))
                    merged._int42 = source._int42;

                if (source.getBit(INT43_INDEX))
                    merged._int43 = source._int43;

                if (source.getBit(INT44_INDEX))
                    merged._int44 = source._int44;

                if (source.getBit(INT45_INDEX))
                    merged._int45 = source._int45;

                if (source.getBit(INT46_INDEX))
                    merged._int46 = source._int46;

                if (source.getBit(INT47_INDEX))
                    merged._int47 = source._int47;

                if (source.getBit(INT48_INDEX))
                    merged._int48 = source._int48;

                if (source.getBit(INT49_INDEX))
                    merged._int49 = source._int49;

                if (source.getBit(INT50_INDEX))
                    merged._int50 = source._int50;

                if (source.getBit(INT51_INDEX))
                    merged._int51 = source._int51;

                if (source.getBit(INT52_INDEX))
                    merged._int52 = source._int52;

                if (source.getBit(INT53_INDEX))
                    merged._int53 = source._int53;

                if (source.getBit(INT54_INDEX))
                    merged._int54 = source._int54;

                if (source.getBit(INT55_INDEX))
                    merged._int55 = source._int55;

                if (source.getBit(INT56_INDEX))
                    merged._int56 = source._int56;

                if (source.getBit(INT57_INDEX))
                    merged._int57 = source._int57;

                if (source.getBit(INT58_INDEX))
                    merged._int58 = source._int58;

                if (source.getBit(INT59_INDEX))
                    merged._int59 = source._int59;

                if (source.getBit(INT60_INDEX))
                    merged._int60 = source._int60;

                if (source.getBit(INT61_INDEX))
                    merged._int61 = source._int61;

                if (source.getBit(INT62_INDEX))
                    merged._int62 = source._int62;

                if (source.getBit(INT63_INDEX))
                    merged._int63 = source._int63;

                if (source.getBit(INT64_INDEX))
                    merged._int64 = source._int64;

                if (source.getBit(INT65_INDEX))
                    merged._int65 = source._int65;

                if (source.getBit(INT66_INDEX))
                    merged._int66 = source._int66;

                if (source.getBit(INT67_INDEX))
                    merged._int67 = source._int67;

                if (source.getBit(INT68_INDEX))
                    merged._int68 = source._int68;

                if (source.getBit(INT69_INDEX))
                    merged._int69 = source._int69;

                if (source.getBit(INT70_INDEX))
                    merged._int70 = source._int70;

                if (source.getBit(INT71_INDEX))
                    merged._int71 = source._int71;

                if (source.getBit(INT72_INDEX))
                    merged._int72 = source._int72;

                if (source.getBit(INT73_INDEX))
                    merged._int73 = source._int73;

                if (source.getBit(INT74_INDEX))
                    merged._int74 = source._int74;

                if (source.getBit(INT75_INDEX))
                    merged._int75 = source._int75;

                if (source.getBit(INT76_INDEX))
                    merged._int76 = source._int76;

                if (source.getBit(INT77_INDEX))
                    merged._int77 = source._int77;

                if (source.getBit(INT78_INDEX))
                    merged._int78 = source._int78;

                if (source.getBit(INT79_INDEX))
                    merged._int79 = source._int79;

                if (source.getBit(INT80_INDEX))
                    merged._int80 = source._int80;

                if (source.getBit(INT81_INDEX))
                    merged._int81 = source._int81;

                if (source.getBit(INT82_INDEX))
                    merged._int82 = source._int82;

                if (source.getBit(INT83_INDEX))
                    merged._int83 = source._int83;

                if (source.getBit(INT84_INDEX))
                    merged._int84 = source._int84;

                if (source.getBit(INT85_INDEX))
                    merged._int85 = source._int85;

                if (source.getBit(INT86_INDEX))
                    merged._int86 = source._int86;

                if (source.getBit(INT87_INDEX))
                    merged._int87 = source._int87;

                if (source.getBit(INT88_INDEX))
                    merged._int88 = source._int88;

                if (source.getBit(INT89_INDEX))
                    merged._int89 = source._int89;

                if (source.getBit(INT90_INDEX))
                    merged._int90 = source._int90;

                if (source.getBit(INT91_INDEX))
                    merged._int91 = source._int91;

                if (source.getBit(INT92_INDEX))
                    merged._int92 = source._int92;

                if (source.getBit(INT93_INDEX))
                    merged._int93 = source._int93;

                if (source.getBit(INT94_INDEX))
                    merged._int94 = source._int94;

                if (source.getBit(INT95_INDEX))
                    merged._int95 = source._int95;

                if (source.getBit(INT96_INDEX))
                    merged._int96 = source._int96;

                if (source.getBit(INT97_INDEX))
                    merged._int97 = source._int97;

                if (source.getBit(INT98_INDEX))
                    merged._int98 = source._int98;

                if (source.getBit(INT99_INDEX))
                    merged._int99 = source._int99;

                if (source.getBit(INT100_INDEX))
                    merged._int100 = source._int100;

                if (source.getBit(INT101_INDEX))
                    merged._int101 = source._int101;

                if (source.getBit(INT102_INDEX))
                    merged._int102 = source._int102;

                if (source.getBit(INT103_INDEX))
                    merged._int103 = source._int103;

                if (source.getBit(INT104_INDEX))
                    merged._int104 = source._int104;

                if (source.getBit(INT105_INDEX))
                    merged._int105 = source._int105;

                if (source.getBit(INT106_INDEX))
                    merged._int106 = source._int106;

                if (source.getBit(INT107_INDEX))
                    merged._int107 = source._int107;

                if (source.getBit(INT108_INDEX))
                    merged._int108 = source._int108;

                if (source.getBit(INT109_INDEX))
                    merged._int109 = source._int109;

                if (source.getBit(INT110_INDEX))
                    merged._int110 = source._int110;

                if (source.getBit(INT111_INDEX))
                    merged._int111 = source._int111;

                if (source.getBit(INT112_INDEX))
                    merged._int112 = source._int112;

                if (source.getBit(INT113_INDEX))
                    merged._int113 = source._int113;

                if (source.getBit(INT114_INDEX))
                    merged._int114 = source._int114;

                if (source.getBit(INT115_INDEX))
                    merged._int115 = source._int115;

                if (source.getBit(INT116_INDEX))
                    merged._int116 = source._int116;

                if (source.getBit(INT117_INDEX))
                    merged._int117 = source._int117;

                if (source.getBit(INT118_INDEX))
                    merged._int118 = source._int118;

                if (source.getBit(INT119_INDEX))
                    merged._int119 = source._int119;

                if (source.getBit(INT120_INDEX))
                    merged._int120 = source._int120;

                if (source.getBit(INT121_INDEX))
                    merged._int121 = source._int121;

                if (source.getBit(INT122_INDEX))
                    merged._int122 = source._int122;

                if (source.getBit(INT123_INDEX))
                    merged._int123 = source._int123;

                if (source.getBit(INT124_INDEX))
                    merged._int124 = source._int124;

                if (source.getBit(INT125_INDEX))
                    merged._int125 = source._int125;

                if (source.getBit(INT126_INDEX))
                    merged._int126 = source._int126;

                if (source.getBit(INT127_INDEX))
                    merged._int127 = source._int127;

                if (source.getBit(INT128_INDEX))
                    merged._int128 = source._int128;

                if (source.getBit(INT129_INDEX))
                    merged._int129 = source._int129;

                if (source.getBit(INT130_INDEX))
                    merged._int130 = source._int130;

                if (source.getBit(INT131_INDEX))
                    merged._int131 = source._int131;

                if (source.getBit(INT132_INDEX))
                    merged._int132 = source._int132;

                if (source.getBit(INT133_INDEX))
                    merged._int133 = source._int133;

                if (source.getBit(INT134_INDEX))
                    merged._int134 = source._int134;

                if (source.getBit(INT135_INDEX))
                    merged._int135 = source._int135;

                if (source.getBit(INT136_INDEX))
                    merged._int136 = source._int136;

                if (source.getBit(INT137_INDEX))
                    merged._int137 = source._int137;

                if (source.getBit(INT138_INDEX))
                    merged._int138 = source._int138;

                if (source.getBit(INT139_INDEX))
                    merged._int139 = source._int139;

                if (source.getBit(INT140_INDEX))
                    merged._int140 = source._int140;

                if (source.getBit(INT141_INDEX))
                    merged._int141 = source._int141;

                if (source.getBit(INT142_INDEX))
                    merged._int142 = source._int142;

                if (source.getBit(INT143_INDEX))
                    merged._int143 = source._int143;

                if (source.getBit(INT144_INDEX))
                    merged._int144 = source._int144;

                if (source.getBit(INT145_INDEX))
                    merged._int145 = source._int145;

                if (source.getBit(INT146_INDEX))
                    merged._int146 = source._int146;

                if (source.getBit(INT147_INDEX))
                    merged._int147 = source._int147;

                if (source.getBit(INT148_INDEX))
                    merged._int148 = source._int148;

                if (source.getBit(INT149_INDEX))
                    merged._int149 = source._int149;

                if (source.getBit(INT150_INDEX))
                    merged._int150 = source._int150;

                if (source.getBit(INT151_INDEX))
                    merged._int151 = source._int151;

                if (source.getBit(INT152_INDEX))
                    merged._int152 = source._int152;

                if (source.getBit(INT153_INDEX))
                    merged._int153 = source._int153;

                if (source.getBit(INT154_INDEX))
                    merged._int154 = source._int154;

                if (source.getBit(INT155_INDEX))
                    merged._int155 = source._int155;

                if (source.getBit(INT156_INDEX))
                    merged._int156 = source._int156;

                if (source.getBit(INT157_INDEX))
                    merged._int157 = source._int157;

                if (source.getBit(INT158_INDEX))
                    merged._int158 = source._int158;

                if (source.getBit(INT159_INDEX))
                    merged._int159 = source._int159;

                if (source.getBit(INT160_INDEX))
                    merged._int160 = source._int160;

                if (source.getBit(INT161_INDEX))
                    merged._int161 = source._int161;

                if (source.getBit(INT162_INDEX))
                    merged._int162 = source._int162;

                if (source.getBit(INT163_INDEX))
                    merged._int163 = source._int163;

                if (source.getBit(INT164_INDEX))
                    merged._int164 = source._int164;

                if (source.getBit(INT165_INDEX))
                    merged._int165 = source._int165;

                if (source.getBit(INT166_INDEX))
                    merged._int166 = source._int166;

                if (source.getBit(INT167_INDEX))
                    merged._int167 = source._int167;

                if (source.getBit(INT168_INDEX))
                    merged._int168 = source._int168;

                if (source.getBit(INT169_INDEX))
                    merged._int169 = source._int169;

                if (source.getBit(INT170_INDEX))
                    merged._int170 = source._int170;

                if (source.getBit(INT171_INDEX))
                    merged._int171 = source._int171;

                if (source.getBit(INT172_INDEX))
                    merged._int172 = source._int172;

                if (source.getBit(INT173_INDEX))
                    merged._int173 = source._int173;

                if (source.getBit(INT174_INDEX))
                    merged._int174 = source._int174;

                if (source.getBit(INT175_INDEX))
                    merged._int175 = source._int175;

                if (source.getBit(INT176_INDEX))
                    merged._int176 = source._int176;

                if (source.getBit(INT177_INDEX))
                    merged._int177 = source._int177;

                if (source.getBit(INT178_INDEX))
                    merged._int178 = source._int178;

                if (source.getBit(INT179_INDEX))
                    merged._int179 = source._int179;

                if (source.getBit(INT180_INDEX))
                    merged._int180 = source._int180;

                if (source.getBit(INT181_INDEX))
                    merged._int181 = source._int181;

                if (source.getBit(INT182_INDEX))
                    merged._int182 = source._int182;

                if (source.getBit(INT183_INDEX))
                    merged._int183 = source._int183;

                if (source.getBit(INT184_INDEX))
                    merged._int184 = source._int184;

                if (source.getBit(INT185_INDEX))
                    merged._int185 = source._int185;

                if (source.getBit(INT186_INDEX))
                    merged._int186 = source._int186;

                if (source.getBit(INT187_INDEX))
                    merged._int187 = source._int187;

                if (source.getBit(INT188_INDEX))
                    merged._int188 = source._int188;

                if (source.getBit(INT189_INDEX))
                    merged._int189 = source._int189;

                if (source.getBit(INT190_INDEX))
                    merged._int190 = source._int190;

                if (source.getBit(INT191_INDEX))
                    merged._int191 = source._int191;

                if (source.getBit(INT192_INDEX))
                    merged._int192 = source._int192;

                if (source.getBit(INT193_INDEX))
                    merged._int193 = source._int193;

                if (source.getBit(INT194_INDEX))
                    merged._int194 = source._int194;

                if (source.getBit(INT195_INDEX))
                    merged._int195 = source._int195;

                if (source.getBit(INT196_INDEX))
                    merged._int196 = source._int196;

                if (source.getBit(INT197_INDEX))
                    merged._int197 = source._int197;

                if (source.getBit(INT198_INDEX))
                    merged._int198 = source._int198;

                if (source.getBit(INT199_INDEX))
                    merged._int199 = source._int199;

                if (source.getBit(INT200_INDEX))
                    merged._int200 = source._int200;

                if (source.getBit(INT201_INDEX))
                    merged._int201 = source._int201;

                if (source.getBit(INT202_INDEX))
                    merged._int202 = source._int202;

                if (source.getBit(INT203_INDEX))
                    merged._int203 = source._int203;

                if (source.getBit(INT204_INDEX))
                    merged._int204 = source._int204;

                if (source.getBit(INT205_INDEX))
                    merged._int205 = source._int205;

                if (source.getBit(INT206_INDEX))
                    merged._int206 = source._int206;

                if (source.getBit(INT207_INDEX))
                    merged._int207 = source._int207;

                if (source.getBit(INT208_INDEX))
                    merged._int208 = source._int208;

                if (source.getBit(INT209_INDEX))
                    merged._int209 = source._int209;

                if (source.getBit(INT210_INDEX))
                    merged._int210 = source._int210;

                if (source.getBit(INT211_INDEX))
                    merged._int211 = source._int211;

                if (source.getBit(INT212_INDEX))
                    merged._int212 = source._int212;

                if (source.getBit(INT213_INDEX))
                    merged._int213 = source._int213;

                if (source.getBit(INT214_INDEX))
                    merged._int214 = source._int214;

                if (source.getBit(INT215_INDEX))
                    merged._int215 = source._int215;

                if (source.getBit(INT216_INDEX))
                    merged._int216 = source._int216;

                if (source.getBit(INT217_INDEX))
                    merged._int217 = source._int217;

                if (source.getBit(INT218_INDEX))
                    merged._int218 = source._int218;

                if (source.getBit(INT219_INDEX))
                    merged._int219 = source._int219;

                if (source.getBit(INT220_INDEX))
                    merged._int220 = source._int220;

                if (source.getBit(INT221_INDEX))
                    merged._int221 = source._int221;

                if (source.getBit(INT222_INDEX))
                    merged._int222 = source._int222;

                if (source.getBit(INT223_INDEX))
                    merged._int223 = source._int223;

                if (source.getBit(INT224_INDEX))
                    merged._int224 = source._int224;

                if (source.getBit(INT225_INDEX))
                    merged._int225 = source._int225;

                if (source.getBit(INT226_INDEX))
                    merged._int226 = source._int226;

                if (source.getBit(INT227_INDEX))
                    merged._int227 = source._int227;

                if (source.getBit(INT228_INDEX))
                    merged._int228 = source._int228;

                if (source.getBit(INT229_INDEX))
                    merged._int229 = source._int229;

                if (source.getBit(INT230_INDEX))
                    merged._int230 = source._int230;

                if (source.getBit(INT231_INDEX))
                    merged._int231 = source._int231;

                if (source.getBit(INT232_INDEX))
                    merged._int232 = source._int232;

                if (source.getBit(INT233_INDEX))
                    merged._int233 = source._int233;

                if (source.getBit(INT234_INDEX))
                    merged._int234 = source._int234;

                if (source.getBit(INT235_INDEX))
                    merged._int235 = source._int235;

                if (source.getBit(INT236_INDEX))
                    merged._int236 = source._int236;

                if (source.getBit(INT237_INDEX))
                    merged._int237 = source._int237;

                if (source.getBit(INT238_INDEX))
                    merged._int238 = source._int238;

                if (source.getBit(INT239_INDEX))
                    merged._int239 = source._int239;

                if (source.getBit(INT240_INDEX))
                    merged._int240 = source._int240;

                if (source.getBit(INT241_INDEX))
                    merged._int241 = source._int241;

                if (source.getBit(INT242_INDEX))
                    merged._int242 = source._int242;

                if (source.getBit(INT243_INDEX))
                    merged._int243 = source._int243;

                if (source.getBit(INT244_INDEX))
                    merged._int244 = source._int244;

                if (source.getBit(INT245_INDEX))
                    merged._int245 = source._int245;

                if (source.getBit(INT246_INDEX))
                    merged._int246 = source._int246;

                if (source.getBit(INT247_INDEX))
                    merged._int247 = source._int247;

                if (source.getBit(INT248_INDEX))
                    merged._int248 = source._int248;

                if (source.getBit(INT249_INDEX))
                    merged._int249 = source._int249;

                if (source.getBit(INT250_INDEX))
                    merged._int250 = source._int250;

                if (source.getBit(INT251_INDEX))
                    merged._int251 = source._int251;

                if (source.getBit(INT252_INDEX))
                    merged._int252 = source._int252;

                if (source.getBit(INT253_INDEX))
                    merged._int253 = source._int253;

                if (source.getBit(INT254_INDEX))
                    merged._int254 = source._int254;

                if (source.getBit(INT255_INDEX))
                    merged._int255 = source._int255;

                if (source.getBit(INT256_INDEX))
                    merged._int256 = source._int256;
            }

            return merged;
        }

        @Override
        public void writeWrite(com.objectfabric.Writer writer, int index) {
            if (writer.interrupted())
                writer.resume();

            switch (index) {
                case INT0_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int0);
                    break;
                }
                case INT1_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int1);
                    break;
                }
                case INT2_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int2);
                    break;
                }
                case INT3_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int3);
                    break;
                }
                case INT4_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int4);
                    break;
                }
                case INT5_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int5);
                    break;
                }
                case INT6_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int6);
                    break;
                }
                case INT7_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int7);
                    break;
                }
                case INT8_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int8);
                    break;
                }
                case INT9_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int9);
                    break;
                }
                case INT10_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int10);
                    break;
                }
                case INT11_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int11);
                    break;
                }
                case INT12_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int12);
                    break;
                }
                case INT13_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int13);
                    break;
                }
                case INT14_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int14);
                    break;
                }
                case INT15_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int15);
                    break;
                }
                case INT16_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int16);
                    break;
                }
                case INT17_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int17);
                    break;
                }
                case INT18_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int18);
                    break;
                }
                case INT19_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int19);
                    break;
                }
                case INT20_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int20);
                    break;
                }
                case INT21_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int21);
                    break;
                }
                case INT22_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int22);
                    break;
                }
                case INT23_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int23);
                    break;
                }
                case INT24_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int24);
                    break;
                }
                case INT25_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int25);
                    break;
                }
                case INT26_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int26);
                    break;
                }
                case INT27_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int27);
                    break;
                }
                case INT28_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int28);
                    break;
                }
                case INT29_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int29);
                    break;
                }
                case INT30_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int30);
                    break;
                }
                case INT31_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int31);
                    break;
                }
                case INT32_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int32);
                    break;
                }
                case INT33_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int33);
                    break;
                }
                case INT34_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int34);
                    break;
                }
                case INT35_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int35);
                    break;
                }
                case INT36_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int36);
                    break;
                }
                case INT37_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int37);
                    break;
                }
                case INT38_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int38);
                    break;
                }
                case INT39_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int39);
                    break;
                }
                case INT40_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int40);
                    break;
                }
                case INT41_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int41);
                    break;
                }
                case INT42_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int42);
                    break;
                }
                case INT43_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int43);
                    break;
                }
                case INT44_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int44);
                    break;
                }
                case INT45_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int45);
                    break;
                }
                case INT46_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int46);
                    break;
                }
                case INT47_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int47);
                    break;
                }
                case INT48_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int48);
                    break;
                }
                case INT49_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int49);
                    break;
                }
                case INT50_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int50);
                    break;
                }
                case INT51_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int51);
                    break;
                }
                case INT52_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int52);
                    break;
                }
                case INT53_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int53);
                    break;
                }
                case INT54_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int54);
                    break;
                }
                case INT55_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int55);
                    break;
                }
                case INT56_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int56);
                    break;
                }
                case INT57_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int57);
                    break;
                }
                case INT58_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int58);
                    break;
                }
                case INT59_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int59);
                    break;
                }
                case INT60_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int60);
                    break;
                }
                case INT61_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int61);
                    break;
                }
                case INT62_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int62);
                    break;
                }
                case INT63_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int63);
                    break;
                }
                case INT64_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int64);
                    break;
                }
                case INT65_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int65);
                    break;
                }
                case INT66_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int66);
                    break;
                }
                case INT67_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int67);
                    break;
                }
                case INT68_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int68);
                    break;
                }
                case INT69_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int69);
                    break;
                }
                case INT70_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int70);
                    break;
                }
                case INT71_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int71);
                    break;
                }
                case INT72_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int72);
                    break;
                }
                case INT73_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int73);
                    break;
                }
                case INT74_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int74);
                    break;
                }
                case INT75_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int75);
                    break;
                }
                case INT76_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int76);
                    break;
                }
                case INT77_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int77);
                    break;
                }
                case INT78_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int78);
                    break;
                }
                case INT79_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int79);
                    break;
                }
                case INT80_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int80);
                    break;
                }
                case INT81_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int81);
                    break;
                }
                case INT82_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int82);
                    break;
                }
                case INT83_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int83);
                    break;
                }
                case INT84_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int84);
                    break;
                }
                case INT85_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int85);
                    break;
                }
                case INT86_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int86);
                    break;
                }
                case INT87_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int87);
                    break;
                }
                case INT88_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int88);
                    break;
                }
                case INT89_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int89);
                    break;
                }
                case INT90_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int90);
                    break;
                }
                case INT91_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int91);
                    break;
                }
                case INT92_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int92);
                    break;
                }
                case INT93_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int93);
                    break;
                }
                case INT94_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int94);
                    break;
                }
                case INT95_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int95);
                    break;
                }
                case INT96_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int96);
                    break;
                }
                case INT97_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int97);
                    break;
                }
                case INT98_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int98);
                    break;
                }
                case INT99_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int99);
                    break;
                }
                case INT100_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int100);
                    break;
                }
                case INT101_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int101);
                    break;
                }
                case INT102_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int102);
                    break;
                }
                case INT103_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int103);
                    break;
                }
                case INT104_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int104);
                    break;
                }
                case INT105_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int105);
                    break;
                }
                case INT106_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int106);
                    break;
                }
                case INT107_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int107);
                    break;
                }
                case INT108_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int108);
                    break;
                }
                case INT109_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int109);
                    break;
                }
                case INT110_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int110);
                    break;
                }
                case INT111_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int111);
                    break;
                }
                case INT112_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int112);
                    break;
                }
                case INT113_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int113);
                    break;
                }
                case INT114_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int114);
                    break;
                }
                case INT115_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int115);
                    break;
                }
                case INT116_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int116);
                    break;
                }
                case INT117_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int117);
                    break;
                }
                case INT118_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int118);
                    break;
                }
                case INT119_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int119);
                    break;
                }
                case INT120_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int120);
                    break;
                }
                case INT121_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int121);
                    break;
                }
                case INT122_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int122);
                    break;
                }
                case INT123_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int123);
                    break;
                }
                case INT124_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int124);
                    break;
                }
                case INT125_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int125);
                    break;
                }
                case INT126_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int126);
                    break;
                }
                case INT127_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int127);
                    break;
                }
                case INT128_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int128);
                    break;
                }
                case INT129_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int129);
                    break;
                }
                case INT130_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int130);
                    break;
                }
                case INT131_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int131);
                    break;
                }
                case INT132_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int132);
                    break;
                }
                case INT133_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int133);
                    break;
                }
                case INT134_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int134);
                    break;
                }
                case INT135_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int135);
                    break;
                }
                case INT136_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int136);
                    break;
                }
                case INT137_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int137);
                    break;
                }
                case INT138_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int138);
                    break;
                }
                case INT139_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int139);
                    break;
                }
                case INT140_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int140);
                    break;
                }
                case INT141_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int141);
                    break;
                }
                case INT142_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int142);
                    break;
                }
                case INT143_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int143);
                    break;
                }
                case INT144_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int144);
                    break;
                }
                case INT145_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int145);
                    break;
                }
                case INT146_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int146);
                    break;
                }
                case INT147_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int147);
                    break;
                }
                case INT148_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int148);
                    break;
                }
                case INT149_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int149);
                    break;
                }
                case INT150_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int150);
                    break;
                }
                case INT151_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int151);
                    break;
                }
                case INT152_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int152);
                    break;
                }
                case INT153_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int153);
                    break;
                }
                case INT154_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int154);
                    break;
                }
                case INT155_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int155);
                    break;
                }
                case INT156_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int156);
                    break;
                }
                case INT157_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int157);
                    break;
                }
                case INT158_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int158);
                    break;
                }
                case INT159_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int159);
                    break;
                }
                case INT160_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int160);
                    break;
                }
                case INT161_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int161);
                    break;
                }
                case INT162_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int162);
                    break;
                }
                case INT163_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int163);
                    break;
                }
                case INT164_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int164);
                    break;
                }
                case INT165_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int165);
                    break;
                }
                case INT166_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int166);
                    break;
                }
                case INT167_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int167);
                    break;
                }
                case INT168_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int168);
                    break;
                }
                case INT169_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int169);
                    break;
                }
                case INT170_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int170);
                    break;
                }
                case INT171_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int171);
                    break;
                }
                case INT172_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int172);
                    break;
                }
                case INT173_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int173);
                    break;
                }
                case INT174_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int174);
                    break;
                }
                case INT175_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int175);
                    break;
                }
                case INT176_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int176);
                    break;
                }
                case INT177_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int177);
                    break;
                }
                case INT178_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int178);
                    break;
                }
                case INT179_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int179);
                    break;
                }
                case INT180_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int180);
                    break;
                }
                case INT181_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int181);
                    break;
                }
                case INT182_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int182);
                    break;
                }
                case INT183_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int183);
                    break;
                }
                case INT184_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int184);
                    break;
                }
                case INT185_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int185);
                    break;
                }
                case INT186_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int186);
                    break;
                }
                case INT187_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int187);
                    break;
                }
                case INT188_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int188);
                    break;
                }
                case INT189_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int189);
                    break;
                }
                case INT190_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int190);
                    break;
                }
                case INT191_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int191);
                    break;
                }
                case INT192_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int192);
                    break;
                }
                case INT193_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int193);
                    break;
                }
                case INT194_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int194);
                    break;
                }
                case INT195_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int195);
                    break;
                }
                case INT196_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int196);
                    break;
                }
                case INT197_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int197);
                    break;
                }
                case INT198_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int198);
                    break;
                }
                case INT199_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int199);
                    break;
                }
                case INT200_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int200);
                    break;
                }
                case INT201_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int201);
                    break;
                }
                case INT202_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int202);
                    break;
                }
                case INT203_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int203);
                    break;
                }
                case INT204_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int204);
                    break;
                }
                case INT205_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int205);
                    break;
                }
                case INT206_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int206);
                    break;
                }
                case INT207_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int207);
                    break;
                }
                case INT208_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int208);
                    break;
                }
                case INT209_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int209);
                    break;
                }
                case INT210_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int210);
                    break;
                }
                case INT211_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int211);
                    break;
                }
                case INT212_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int212);
                    break;
                }
                case INT213_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int213);
                    break;
                }
                case INT214_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int214);
                    break;
                }
                case INT215_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int215);
                    break;
                }
                case INT216_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int216);
                    break;
                }
                case INT217_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int217);
                    break;
                }
                case INT218_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int218);
                    break;
                }
                case INT219_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int219);
                    break;
                }
                case INT220_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int220);
                    break;
                }
                case INT221_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int221);
                    break;
                }
                case INT222_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int222);
                    break;
                }
                case INT223_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int223);
                    break;
                }
                case INT224_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int224);
                    break;
                }
                case INT225_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int225);
                    break;
                }
                case INT226_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int226);
                    break;
                }
                case INT227_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int227);
                    break;
                }
                case INT228_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int228);
                    break;
                }
                case INT229_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int229);
                    break;
                }
                case INT230_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int230);
                    break;
                }
                case INT231_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int231);
                    break;
                }
                case INT232_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int232);
                    break;
                }
                case INT233_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int233);
                    break;
                }
                case INT234_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int234);
                    break;
                }
                case INT235_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int235);
                    break;
                }
                case INT236_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int236);
                    break;
                }
                case INT237_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int237);
                    break;
                }
                case INT238_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int238);
                    break;
                }
                case INT239_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int239);
                    break;
                }
                case INT240_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int240);
                    break;
                }
                case INT241_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int241);
                    break;
                }
                case INT242_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int242);
                    break;
                }
                case INT243_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int243);
                    break;
                }
                case INT244_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int244);
                    break;
                }
                case INT245_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int245);
                    break;
                }
                case INT246_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int246);
                    break;
                }
                case INT247_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int247);
                    break;
                }
                case INT248_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int248);
                    break;
                }
                case INT249_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int249);
                    break;
                }
                case INT250_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int250);
                    break;
                }
                case INT251_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int251);
                    break;
                }
                case INT252_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int252);
                    break;
                }
                case INT253_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int253);
                    break;
                }
                case INT254_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int254);
                    break;
                }
                case INT255_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int255);
                    break;
                }
                case INT256_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int256);
                    break;
                }
                default: {
                    super.writeWrite(writer, index);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }
                    break;
                }
            }
        }

        @Override
        public void readWrite(com.objectfabric.Reader reader, int index) {
            if (reader.interrupted())
                reader.resume();

            switch (index) {
                case INT0_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int0 = reader.readInteger();
                    break;
                }
                case INT1_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int1 = reader.readInteger();
                    break;
                }
                case INT2_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int2 = reader.readInteger();
                    break;
                }
                case INT3_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int3 = reader.readInteger();
                    break;
                }
                case INT4_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int4 = reader.readInteger();
                    break;
                }
                case INT5_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int5 = reader.readInteger();
                    break;
                }
                case INT6_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int6 = reader.readInteger();
                    break;
                }
                case INT7_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int7 = reader.readInteger();
                    break;
                }
                case INT8_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int8 = reader.readInteger();
                    break;
                }
                case INT9_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int9 = reader.readInteger();
                    break;
                }
                case INT10_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int10 = reader.readInteger();
                    break;
                }
                case INT11_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int11 = reader.readInteger();
                    break;
                }
                case INT12_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int12 = reader.readInteger();
                    break;
                }
                case INT13_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int13 = reader.readInteger();
                    break;
                }
                case INT14_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int14 = reader.readInteger();
                    break;
                }
                case INT15_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int15 = reader.readInteger();
                    break;
                }
                case INT16_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int16 = reader.readInteger();
                    break;
                }
                case INT17_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int17 = reader.readInteger();
                    break;
                }
                case INT18_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int18 = reader.readInteger();
                    break;
                }
                case INT19_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int19 = reader.readInteger();
                    break;
                }
                case INT20_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int20 = reader.readInteger();
                    break;
                }
                case INT21_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int21 = reader.readInteger();
                    break;
                }
                case INT22_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int22 = reader.readInteger();
                    break;
                }
                case INT23_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int23 = reader.readInteger();
                    break;
                }
                case INT24_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int24 = reader.readInteger();
                    break;
                }
                case INT25_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int25 = reader.readInteger();
                    break;
                }
                case INT26_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int26 = reader.readInteger();
                    break;
                }
                case INT27_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int27 = reader.readInteger();
                    break;
                }
                case INT28_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int28 = reader.readInteger();
                    break;
                }
                case INT29_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int29 = reader.readInteger();
                    break;
                }
                case INT30_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int30 = reader.readInteger();
                    break;
                }
                case INT31_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int31 = reader.readInteger();
                    break;
                }
                case INT32_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int32 = reader.readInteger();
                    break;
                }
                case INT33_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int33 = reader.readInteger();
                    break;
                }
                case INT34_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int34 = reader.readInteger();
                    break;
                }
                case INT35_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int35 = reader.readInteger();
                    break;
                }
                case INT36_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int36 = reader.readInteger();
                    break;
                }
                case INT37_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int37 = reader.readInteger();
                    break;
                }
                case INT38_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int38 = reader.readInteger();
                    break;
                }
                case INT39_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int39 = reader.readInteger();
                    break;
                }
                case INT40_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int40 = reader.readInteger();
                    break;
                }
                case INT41_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int41 = reader.readInteger();
                    break;
                }
                case INT42_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int42 = reader.readInteger();
                    break;
                }
                case INT43_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int43 = reader.readInteger();
                    break;
                }
                case INT44_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int44 = reader.readInteger();
                    break;
                }
                case INT45_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int45 = reader.readInteger();
                    break;
                }
                case INT46_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int46 = reader.readInteger();
                    break;
                }
                case INT47_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int47 = reader.readInteger();
                    break;
                }
                case INT48_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int48 = reader.readInteger();
                    break;
                }
                case INT49_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int49 = reader.readInteger();
                    break;
                }
                case INT50_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int50 = reader.readInteger();
                    break;
                }
                case INT51_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int51 = reader.readInteger();
                    break;
                }
                case INT52_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int52 = reader.readInteger();
                    break;
                }
                case INT53_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int53 = reader.readInteger();
                    break;
                }
                case INT54_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int54 = reader.readInteger();
                    break;
                }
                case INT55_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int55 = reader.readInteger();
                    break;
                }
                case INT56_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int56 = reader.readInteger();
                    break;
                }
                case INT57_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int57 = reader.readInteger();
                    break;
                }
                case INT58_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int58 = reader.readInteger();
                    break;
                }
                case INT59_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int59 = reader.readInteger();
                    break;
                }
                case INT60_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int60 = reader.readInteger();
                    break;
                }
                case INT61_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int61 = reader.readInteger();
                    break;
                }
                case INT62_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int62 = reader.readInteger();
                    break;
                }
                case INT63_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int63 = reader.readInteger();
                    break;
                }
                case INT64_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int64 = reader.readInteger();
                    break;
                }
                case INT65_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int65 = reader.readInteger();
                    break;
                }
                case INT66_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int66 = reader.readInteger();
                    break;
                }
                case INT67_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int67 = reader.readInteger();
                    break;
                }
                case INT68_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int68 = reader.readInteger();
                    break;
                }
                case INT69_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int69 = reader.readInteger();
                    break;
                }
                case INT70_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int70 = reader.readInteger();
                    break;
                }
                case INT71_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int71 = reader.readInteger();
                    break;
                }
                case INT72_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int72 = reader.readInteger();
                    break;
                }
                case INT73_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int73 = reader.readInteger();
                    break;
                }
                case INT74_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int74 = reader.readInteger();
                    break;
                }
                case INT75_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int75 = reader.readInteger();
                    break;
                }
                case INT76_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int76 = reader.readInteger();
                    break;
                }
                case INT77_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int77 = reader.readInteger();
                    break;
                }
                case INT78_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int78 = reader.readInteger();
                    break;
                }
                case INT79_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int79 = reader.readInteger();
                    break;
                }
                case INT80_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int80 = reader.readInteger();
                    break;
                }
                case INT81_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int81 = reader.readInteger();
                    break;
                }
                case INT82_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int82 = reader.readInteger();
                    break;
                }
                case INT83_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int83 = reader.readInteger();
                    break;
                }
                case INT84_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int84 = reader.readInteger();
                    break;
                }
                case INT85_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int85 = reader.readInteger();
                    break;
                }
                case INT86_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int86 = reader.readInteger();
                    break;
                }
                case INT87_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int87 = reader.readInteger();
                    break;
                }
                case INT88_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int88 = reader.readInteger();
                    break;
                }
                case INT89_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int89 = reader.readInteger();
                    break;
                }
                case INT90_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int90 = reader.readInteger();
                    break;
                }
                case INT91_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int91 = reader.readInteger();
                    break;
                }
                case INT92_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int92 = reader.readInteger();
                    break;
                }
                case INT93_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int93 = reader.readInteger();
                    break;
                }
                case INT94_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int94 = reader.readInteger();
                    break;
                }
                case INT95_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int95 = reader.readInteger();
                    break;
                }
                case INT96_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int96 = reader.readInteger();
                    break;
                }
                case INT97_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int97 = reader.readInteger();
                    break;
                }
                case INT98_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int98 = reader.readInteger();
                    break;
                }
                case INT99_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int99 = reader.readInteger();
                    break;
                }
                case INT100_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int100 = reader.readInteger();
                    break;
                }
                case INT101_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int101 = reader.readInteger();
                    break;
                }
                case INT102_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int102 = reader.readInteger();
                    break;
                }
                case INT103_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int103 = reader.readInteger();
                    break;
                }
                case INT104_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int104 = reader.readInteger();
                    break;
                }
                case INT105_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int105 = reader.readInteger();
                    break;
                }
                case INT106_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int106 = reader.readInteger();
                    break;
                }
                case INT107_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int107 = reader.readInteger();
                    break;
                }
                case INT108_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int108 = reader.readInteger();
                    break;
                }
                case INT109_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int109 = reader.readInteger();
                    break;
                }
                case INT110_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int110 = reader.readInteger();
                    break;
                }
                case INT111_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int111 = reader.readInteger();
                    break;
                }
                case INT112_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int112 = reader.readInteger();
                    break;
                }
                case INT113_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int113 = reader.readInteger();
                    break;
                }
                case INT114_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int114 = reader.readInteger();
                    break;
                }
                case INT115_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int115 = reader.readInteger();
                    break;
                }
                case INT116_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int116 = reader.readInteger();
                    break;
                }
                case INT117_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int117 = reader.readInteger();
                    break;
                }
                case INT118_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int118 = reader.readInteger();
                    break;
                }
                case INT119_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int119 = reader.readInteger();
                    break;
                }
                case INT120_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int120 = reader.readInteger();
                    break;
                }
                case INT121_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int121 = reader.readInteger();
                    break;
                }
                case INT122_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int122 = reader.readInteger();
                    break;
                }
                case INT123_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int123 = reader.readInteger();
                    break;
                }
                case INT124_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int124 = reader.readInteger();
                    break;
                }
                case INT125_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int125 = reader.readInteger();
                    break;
                }
                case INT126_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int126 = reader.readInteger();
                    break;
                }
                case INT127_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int127 = reader.readInteger();
                    break;
                }
                case INT128_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int128 = reader.readInteger();
                    break;
                }
                case INT129_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int129 = reader.readInteger();
                    break;
                }
                case INT130_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int130 = reader.readInteger();
                    break;
                }
                case INT131_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int131 = reader.readInteger();
                    break;
                }
                case INT132_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int132 = reader.readInteger();
                    break;
                }
                case INT133_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int133 = reader.readInteger();
                    break;
                }
                case INT134_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int134 = reader.readInteger();
                    break;
                }
                case INT135_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int135 = reader.readInteger();
                    break;
                }
                case INT136_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int136 = reader.readInteger();
                    break;
                }
                case INT137_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int137 = reader.readInteger();
                    break;
                }
                case INT138_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int138 = reader.readInteger();
                    break;
                }
                case INT139_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int139 = reader.readInteger();
                    break;
                }
                case INT140_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int140 = reader.readInteger();
                    break;
                }
                case INT141_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int141 = reader.readInteger();
                    break;
                }
                case INT142_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int142 = reader.readInteger();
                    break;
                }
                case INT143_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int143 = reader.readInteger();
                    break;
                }
                case INT144_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int144 = reader.readInteger();
                    break;
                }
                case INT145_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int145 = reader.readInteger();
                    break;
                }
                case INT146_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int146 = reader.readInteger();
                    break;
                }
                case INT147_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int147 = reader.readInteger();
                    break;
                }
                case INT148_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int148 = reader.readInteger();
                    break;
                }
                case INT149_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int149 = reader.readInteger();
                    break;
                }
                case INT150_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int150 = reader.readInteger();
                    break;
                }
                case INT151_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int151 = reader.readInteger();
                    break;
                }
                case INT152_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int152 = reader.readInteger();
                    break;
                }
                case INT153_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int153 = reader.readInteger();
                    break;
                }
                case INT154_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int154 = reader.readInteger();
                    break;
                }
                case INT155_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int155 = reader.readInteger();
                    break;
                }
                case INT156_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int156 = reader.readInteger();
                    break;
                }
                case INT157_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int157 = reader.readInteger();
                    break;
                }
                case INT158_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int158 = reader.readInteger();
                    break;
                }
                case INT159_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int159 = reader.readInteger();
                    break;
                }
                case INT160_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int160 = reader.readInteger();
                    break;
                }
                case INT161_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int161 = reader.readInteger();
                    break;
                }
                case INT162_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int162 = reader.readInteger();
                    break;
                }
                case INT163_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int163 = reader.readInteger();
                    break;
                }
                case INT164_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int164 = reader.readInteger();
                    break;
                }
                case INT165_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int165 = reader.readInteger();
                    break;
                }
                case INT166_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int166 = reader.readInteger();
                    break;
                }
                case INT167_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int167 = reader.readInteger();
                    break;
                }
                case INT168_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int168 = reader.readInteger();
                    break;
                }
                case INT169_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int169 = reader.readInteger();
                    break;
                }
                case INT170_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int170 = reader.readInteger();
                    break;
                }
                case INT171_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int171 = reader.readInteger();
                    break;
                }
                case INT172_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int172 = reader.readInteger();
                    break;
                }
                case INT173_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int173 = reader.readInteger();
                    break;
                }
                case INT174_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int174 = reader.readInteger();
                    break;
                }
                case INT175_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int175 = reader.readInteger();
                    break;
                }
                case INT176_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int176 = reader.readInteger();
                    break;
                }
                case INT177_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int177 = reader.readInteger();
                    break;
                }
                case INT178_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int178 = reader.readInteger();
                    break;
                }
                case INT179_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int179 = reader.readInteger();
                    break;
                }
                case INT180_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int180 = reader.readInteger();
                    break;
                }
                case INT181_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int181 = reader.readInteger();
                    break;
                }
                case INT182_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int182 = reader.readInteger();
                    break;
                }
                case INT183_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int183 = reader.readInteger();
                    break;
                }
                case INT184_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int184 = reader.readInteger();
                    break;
                }
                case INT185_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int185 = reader.readInteger();
                    break;
                }
                case INT186_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int186 = reader.readInteger();
                    break;
                }
                case INT187_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int187 = reader.readInteger();
                    break;
                }
                case INT188_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int188 = reader.readInteger();
                    break;
                }
                case INT189_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int189 = reader.readInteger();
                    break;
                }
                case INT190_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int190 = reader.readInteger();
                    break;
                }
                case INT191_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int191 = reader.readInteger();
                    break;
                }
                case INT192_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int192 = reader.readInteger();
                    break;
                }
                case INT193_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int193 = reader.readInteger();
                    break;
                }
                case INT194_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int194 = reader.readInteger();
                    break;
                }
                case INT195_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int195 = reader.readInteger();
                    break;
                }
                case INT196_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int196 = reader.readInteger();
                    break;
                }
                case INT197_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int197 = reader.readInteger();
                    break;
                }
                case INT198_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int198 = reader.readInteger();
                    break;
                }
                case INT199_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int199 = reader.readInteger();
                    break;
                }
                case INT200_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int200 = reader.readInteger();
                    break;
                }
                case INT201_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int201 = reader.readInteger();
                    break;
                }
                case INT202_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int202 = reader.readInteger();
                    break;
                }
                case INT203_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int203 = reader.readInteger();
                    break;
                }
                case INT204_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int204 = reader.readInteger();
                    break;
                }
                case INT205_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int205 = reader.readInteger();
                    break;
                }
                case INT206_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int206 = reader.readInteger();
                    break;
                }
                case INT207_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int207 = reader.readInteger();
                    break;
                }
                case INT208_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int208 = reader.readInteger();
                    break;
                }
                case INT209_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int209 = reader.readInteger();
                    break;
                }
                case INT210_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int210 = reader.readInteger();
                    break;
                }
                case INT211_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int211 = reader.readInteger();
                    break;
                }
                case INT212_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int212 = reader.readInteger();
                    break;
                }
                case INT213_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int213 = reader.readInteger();
                    break;
                }
                case INT214_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int214 = reader.readInteger();
                    break;
                }
                case INT215_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int215 = reader.readInteger();
                    break;
                }
                case INT216_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int216 = reader.readInteger();
                    break;
                }
                case INT217_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int217 = reader.readInteger();
                    break;
                }
                case INT218_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int218 = reader.readInteger();
                    break;
                }
                case INT219_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int219 = reader.readInteger();
                    break;
                }
                case INT220_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int220 = reader.readInteger();
                    break;
                }
                case INT221_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int221 = reader.readInteger();
                    break;
                }
                case INT222_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int222 = reader.readInteger();
                    break;
                }
                case INT223_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int223 = reader.readInteger();
                    break;
                }
                case INT224_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int224 = reader.readInteger();
                    break;
                }
                case INT225_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int225 = reader.readInteger();
                    break;
                }
                case INT226_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int226 = reader.readInteger();
                    break;
                }
                case INT227_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int227 = reader.readInteger();
                    break;
                }
                case INT228_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int228 = reader.readInteger();
                    break;
                }
                case INT229_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int229 = reader.readInteger();
                    break;
                }
                case INT230_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int230 = reader.readInteger();
                    break;
                }
                case INT231_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int231 = reader.readInteger();
                    break;
                }
                case INT232_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int232 = reader.readInteger();
                    break;
                }
                case INT233_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int233 = reader.readInteger();
                    break;
                }
                case INT234_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int234 = reader.readInteger();
                    break;
                }
                case INT235_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int235 = reader.readInteger();
                    break;
                }
                case INT236_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int236 = reader.readInteger();
                    break;
                }
                case INT237_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int237 = reader.readInteger();
                    break;
                }
                case INT238_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int238 = reader.readInteger();
                    break;
                }
                case INT239_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int239 = reader.readInteger();
                    break;
                }
                case INT240_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int240 = reader.readInteger();
                    break;
                }
                case INT241_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int241 = reader.readInteger();
                    break;
                }
                case INT242_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int242 = reader.readInteger();
                    break;
                }
                case INT243_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int243 = reader.readInteger();
                    break;
                }
                case INT244_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int244 = reader.readInteger();
                    break;
                }
                case INT245_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int245 = reader.readInteger();
                    break;
                }
                case INT246_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int246 = reader.readInteger();
                    break;
                }
                case INT247_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int247 = reader.readInteger();
                    break;
                }
                case INT248_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int248 = reader.readInteger();
                    break;
                }
                case INT249_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int249 = reader.readInteger();
                    break;
                }
                case INT250_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int250 = reader.readInteger();
                    break;
                }
                case INT251_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int251 = reader.readInteger();
                    break;
                }
                case INT252_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int252 = reader.readInteger();
                    break;
                }
                case INT253_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int253 = reader.readInteger();
                    break;
                }
                case INT254_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int254 = reader.readInteger();
                    break;
                }
                case INT255_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int255 = reader.readInteger();
                    break;
                }
                case INT256_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    _int256 = reader.readInteger();
                    break;
                }
                default: {
                    super.readWrite(reader, index);

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }
                    break;
                }
            }
        }

        @Override
        public com.objectfabric.TObject.Version createVersion() {
            return new LimitN_min.Version(this, FIELD_COUNT);
        }

        @Override
        public int getClassId() {
            return com.objectfabric.generated.LimitsObjectModel.COM_OBJECTFABRIC_GENERATED_LIMITN_MIN_CLASS_ID;
        }

        @SuppressWarnings("static-access")
        @Override
        public com.objectfabric.ObjectModel getObjectModel() {
            return com.objectfabric.generated.LimitsObjectModel.getInstance();
        }
    }
}
