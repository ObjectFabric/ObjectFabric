<!--
    Check readme.txt for more information about this Ant build file.
-->
<project name="objectfabric.ec2">
	<!-- Equivalent to basedir, necessary when importing from other build file -->
	<dirname property="amazon" file="${ant.file.objectfabric.ec2}" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${amazon}/lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!-- User defined -->

	<!--
		Those properties must have been set before invoking tasks from this file,
		c.f. objectfabric.examples/build.xml for an example.
	-->
	<property name="public dns" value="" />
	<property name="private key" value="" />
	<property name="main class" value="" />

	<!--
		This task must gather your application's files.
		c.f. objectfabric.examples/build.xml for an example.
	-->
	<target name="get files" />

	<!-- Internals -->

	<!-- TODO add install_deamon to start -->
	
	<!--
		By default class path will be "classes:jars" where jars are the list of jar files found
		in /deployed/lib.
	-->
	<target name="init start.sh">
		<path id="class path 1">
			<pathelement location="${amazon}/deployed/classes" />
			<fileset dir="${amazon}/deployed/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<pathconvert property="class path 2" pathsep=":">
			<path refid="class path 1" />
			<filtermapper>
				<replacestring from="${amazon}${file.separator}deployed${file.separator}" to="" />
				<replacestring from="${file.separator}" to="/" />
			</filtermapper>
		</pathconvert>
		<copy todir="${amazon}/deployed" overwrite="true">
			<fileset dir="${amazon}" includes="start.sh" />
			<filterchain>
				<replacestring from="#myMainClass#" to="${main class}" />
				<replacestring from="#classPath#" to="${class path 2}" />
			</filterchain>
		</copy>
	</target>

	<!-- Verbose ssh connection: value="-v" -->
	<property name="verbose" value="" />
	<property name="ssh args" value="${verbose} -l ec2-user -i ${private key} -o UserKnownHostsFile=${amazon}/known_hosts" />
	<property name="console" value="ssh ${ssh args} ${public dns} -L 8000:${public dns}:8000" />
	<property name="start args" value="${ssh args} ${public dns} &quot;sh -c 'cd deployed; ./start.sh; exit'&quot;" />
	<property name="killall args" value="${ssh args} ${public dns} &quot;killall java&quot;" />

	<target name="open command line and debug port">
		<if>
			<os family="windows" />
			<then>
				<exec executable="cmd" spawn="true">
					<arg line="/c start cmd /k ${amazon}\cwRsync\${console}" />
					<env key="CYGWIN" value="nodosfilewarning" />
				</exec>
			</then>
			<else>
				<if>
					<os family="mac" />
					<then>
						<exec executable="/usr/X11R6/bin/xterm" spawn="true">
							<arg line="-x bash -c &quot;${console}; cat&quot;" />
						</exec>
					</then>
					<else>
						<exec executable="gnome-terminal" spawn="true">
							<arg line="-x bash -c &quot;${console}; cat&quot;" />
						</exec>
					</else>
				</if>
			</else>
		</if>
	</target>

	<target name="deploy and start" depends="deploy, start" />

	<target name="deploy" depends="get files, init start.sh">
		<if>
			<os family="windows" />
			<then>
				<exec executable="${amazon}\cwRsync\rsync" dir="${amazon}" failonerror="true">
					<arg line="-vvrzute '${amazon}\cwRsync\ssh ${ssh args}' --delete -L deployed ${public dns}:/home/ec2-user" />
					<env key="CYGWIN" value="nodosfilewarning" />
				</exec>
			</then>
			<else>
				<exec executable="rsync" dir="${amazon}" failonerror="true">
					<arg line="-vvrzute 'ssh ${ssh args}' --delete -L deployed ${public dns}:/home/ec2-user" />
				</exec>
			</else>
		</if>
	</target>


	<target name="start">
		<if>
			<os family="windows" />
			<then>
				<exec executable="${amazon}\cwRsync\ssh">
					<arg line="${start args}" />
					<env key="CYGWIN" value="nodosfilewarning" />
				</exec>
			</then>
			<else>
				<exec executable="ssh">
					<arg line="${start args}" />
				</exec>
			</else>
		</if>
	</target>

	<target name="killall java">
		<if>
			<os family="windows" />
			<then>
				<exec executable="${amazon}\cwRsync\ssh">
					<arg line="${killall args}" />
					<env key="CYGWIN" value="nodosfilewarning" />
				</exec>
			</then>
			<else>
				<exec executable="ssh">
					<arg line="${killall args}" />
				</exec>
			</else>
		</if>
	</target>
</project>