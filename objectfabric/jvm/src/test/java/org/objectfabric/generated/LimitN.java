/**
 * This file is part of ObjectFabric (http://objectfabric.org).
 *
 * ObjectFabric is licensed under the Apache License, Version 2.0, the terms
 * of which may be found at http://www.apache.org/licenses/LICENSE-2.0.html.
 * 
 * Copyright ObjectFabric Inc.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

package org.objectfabric.generated;

//==============================================================================
//                                                                              
//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                
//                                                                              
//==============================================================================

@SuppressWarnings({ "hiding", "unchecked", "static-access", "unused", "cast", "rawtypes" })
public class LimitN extends org.objectfabric.TGenerated {

    public LimitN(org.objectfabric.Resource resource) {
        this(resource, new Version(FIELD_COUNT), FIELD_COUNT);
    }

    protected LimitN(org.objectfabric.Resource resource, org.objectfabric.TObject.Version shared, int length) {
        super(resource, shared, FIELD_COUNT);
    }

    public LimitN(LimitN toCopy) {
        this(toCopy.resource());

        int0(toCopy.int0());
        int1(toCopy.int1());
        int2(toCopy.int2());
        int3(toCopy.int3());
        int4(toCopy.int4());
        int5(toCopy.int5());
        int6(toCopy.int6());
        int7(toCopy.int7());
        int8(toCopy.int8());
        int9(toCopy.int9());
        int10(toCopy.int10());
        int11(toCopy.int11());
        int12(toCopy.int12());
        int13(toCopy.int13());
        int14(toCopy.int14());
        int15(toCopy.int15());
        int16(toCopy.int16());
        int17(toCopy.int17());
        int18(toCopy.int18());
        int19(toCopy.int19());
        int20(toCopy.int20());
        int21(toCopy.int21());
        int22(toCopy.int22());
        int23(toCopy.int23());
        int24(toCopy.int24());
        int25(toCopy.int25());
        int26(toCopy.int26());
        int27(toCopy.int27());
        int28(toCopy.int28());
        int29(toCopy.int29());
        int30(toCopy.int30());
        int31(toCopy.int31());
        int32(toCopy.int32());
        int33(toCopy.int33());
        int34(toCopy.int34());
        int35(toCopy.int35());
        int36(toCopy.int36());
        int37(toCopy.int37());
        int38(toCopy.int38());
        int39(toCopy.int39());
        int40(toCopy.int40());
        int41(toCopy.int41());
        int42(toCopy.int42());
        int43(toCopy.int43());
        int44(toCopy.int44());
        int45(toCopy.int45());
        int46(toCopy.int46());
        int47(toCopy.int47());
        int48(toCopy.int48());
        int49(toCopy.int49());
        int50(toCopy.int50());
        int51(toCopy.int51());
        int52(toCopy.int52());
        int53(toCopy.int53());
        int54(toCopy.int54());
        int55(toCopy.int55());
        int56(toCopy.int56());
        int57(toCopy.int57());
        int58(toCopy.int58());
        int59(toCopy.int59());
        int60(toCopy.int60());
        int61(toCopy.int61());
        int62(toCopy.int62());
        int63(toCopy.int63());
        int64(toCopy.int64());
        int65(toCopy.int65());
        int66(toCopy.int66());
        int67(toCopy.int67());
        int68(toCopy.int68());
        int69(toCopy.int69());
        int70(toCopy.int70());
        int71(toCopy.int71());
        int72(toCopy.int72());
        int73(toCopy.int73());
        int74(toCopy.int74());
        int75(toCopy.int75());
        int76(toCopy.int76());
        int77(toCopy.int77());
        int78(toCopy.int78());
        int79(toCopy.int79());
        int80(toCopy.int80());
        int81(toCopy.int81());
        int82(toCopy.int82());
        int83(toCopy.int83());
        int84(toCopy.int84());
        int85(toCopy.int85());
        int86(toCopy.int86());
        int87(toCopy.int87());
        int88(toCopy.int88());
        int89(toCopy.int89());
        int90(toCopy.int90());
        int91(toCopy.int91());
        int92(toCopy.int92());
        int93(toCopy.int93());
        int94(toCopy.int94());
        int95(toCopy.int95());
        int96(toCopy.int96());
        int97(toCopy.int97());
        int98(toCopy.int98());
        int99(toCopy.int99());
        int100(toCopy.int100());
        int101(toCopy.int101());
        int102(toCopy.int102());
        int103(toCopy.int103());
        int104(toCopy.int104());
        int105(toCopy.int105());
        int106(toCopy.int106());
        int107(toCopy.int107());
        int108(toCopy.int108());
        int109(toCopy.int109());
        int110(toCopy.int110());
        int111(toCopy.int111());
        int112(toCopy.int112());
        int113(toCopy.int113());
        int114(toCopy.int114());
        int115(toCopy.int115());
        int116(toCopy.int116());
        int117(toCopy.int117());
        int118(toCopy.int118());
        int119(toCopy.int119());
        int120(toCopy.int120());
        int121(toCopy.int121());
        int122(toCopy.int122());
        int123(toCopy.int123());
        int124(toCopy.int124());
        int125(toCopy.int125());
        int126(toCopy.int126());
        int127(toCopy.int127());
        int128(toCopy.int128());
        int129(toCopy.int129());
        int130(toCopy.int130());
        int131(toCopy.int131());
        int132(toCopy.int132());
        int133(toCopy.int133());
        int134(toCopy.int134());
        int135(toCopy.int135());
        int136(toCopy.int136());
        int137(toCopy.int137());
        int138(toCopy.int138());
        int139(toCopy.int139());
        int140(toCopy.int140());
        int141(toCopy.int141());
        int142(toCopy.int142());
        int143(toCopy.int143());
        int144(toCopy.int144());
        int145(toCopy.int145());
        int146(toCopy.int146());
        int147(toCopy.int147());
        int148(toCopy.int148());
        int149(toCopy.int149());
        int150(toCopy.int150());
        int151(toCopy.int151());
        int152(toCopy.int152());
        int153(toCopy.int153());
        int154(toCopy.int154());
        int155(toCopy.int155());
        int156(toCopy.int156());
        int157(toCopy.int157());
        int158(toCopy.int158());
        int159(toCopy.int159());
        int160(toCopy.int160());
        int161(toCopy.int161());
        int162(toCopy.int162());
        int163(toCopy.int163());
        int164(toCopy.int164());
        int165(toCopy.int165());
        int166(toCopy.int166());
        int167(toCopy.int167());
        int168(toCopy.int168());
        int169(toCopy.int169());
        int170(toCopy.int170());
        int171(toCopy.int171());
        int172(toCopy.int172());
        int173(toCopy.int173());
        int174(toCopy.int174());
        int175(toCopy.int175());
        int176(toCopy.int176());
        int177(toCopy.int177());
        int178(toCopy.int178());
        int179(toCopy.int179());
        int180(toCopy.int180());
        int181(toCopy.int181());
        int182(toCopy.int182());
        int183(toCopy.int183());
        int184(toCopy.int184());
        int185(toCopy.int185());
        int186(toCopy.int186());
        int187(toCopy.int187());
        int188(toCopy.int188());
        int189(toCopy.int189());
        int190(toCopy.int190());
        int191(toCopy.int191());
        int192(toCopy.int192());
        int193(toCopy.int193());
        int194(toCopy.int194());
        int195(toCopy.int195());
        int196(toCopy.int196());
        int197(toCopy.int197());
        int198(toCopy.int198());
        int199(toCopy.int199());
        int200(toCopy.int200());
        int201(toCopy.int201());
        int202(toCopy.int202());
        int203(toCopy.int203());
        int204(toCopy.int204());
        int205(toCopy.int205());
        int206(toCopy.int206());
        int207(toCopy.int207());
        int208(toCopy.int208());
        int209(toCopy.int209());
        int210(toCopy.int210());
        int211(toCopy.int211());
        int212(toCopy.int212());
        int213(toCopy.int213());
        int214(toCopy.int214());
        int215(toCopy.int215());
        int216(toCopy.int216());
        int217(toCopy.int217());
        int218(toCopy.int218());
        int219(toCopy.int219());
        int220(toCopy.int220());
        int221(toCopy.int221());
        int222(toCopy.int222());
        int223(toCopy.int223());
        int224(toCopy.int224());
        int225(toCopy.int225());
        int226(toCopy.int226());
        int227(toCopy.int227());
        int228(toCopy.int228());
        int229(toCopy.int229());
        int230(toCopy.int230());
        int231(toCopy.int231());
        int232(toCopy.int232());
        int233(toCopy.int233());
        int234(toCopy.int234());
        int235(toCopy.int235());
        int236(toCopy.int236());
        int237(toCopy.int237());
        int238(toCopy.int238());
        int239(toCopy.int239());
        int240(toCopy.int240());
        int241(toCopy.int241());
        int242(toCopy.int242());
        int243(toCopy.int243());
        int244(toCopy.int244());
        int245(toCopy.int245());
        int246(toCopy.int246());
        int247(toCopy.int247());
        int248(toCopy.int248());
        int249(toCopy.int249());
        int250(toCopy.int250());
        int251(toCopy.int251());
        int252(toCopy.int252());
        int253(toCopy.int253());
        int254(toCopy.int254());
        int255(toCopy.int255());
        int256(toCopy.int256());
        int257(toCopy.int257());
        int258(toCopy.int258());
        int259(toCopy.int259());
        int260(toCopy.int260());
        int261(toCopy.int261());
        int262(toCopy.int262());
        int263(toCopy.int263());
        int264(toCopy.int264());
        int265(toCopy.int265());
        int266(toCopy.int266());
        int267(toCopy.int267());
        int268(toCopy.int268());
        int269(toCopy.int269());
        int270(toCopy.int270());
        int271(toCopy.int271());
        int272(toCopy.int272());
        int273(toCopy.int273());
        int274(toCopy.int274());
        int275(toCopy.int275());
        int276(toCopy.int276());
        int277(toCopy.int277());
        int278(toCopy.int278());
        int279(toCopy.int279());
        int280(toCopy.int280());
        int281(toCopy.int281());
        int282(toCopy.int282());
        int283(toCopy.int283());
        int284(toCopy.int284());
        int285(toCopy.int285());
        int286(toCopy.int286());
        int287(toCopy.int287());
        int288(toCopy.int288());
        int289(toCopy.int289());
        int290(toCopy.int290());
        int291(toCopy.int291());
        int292(toCopy.int292());
        int293(toCopy.int293());
        int294(toCopy.int294());
        int295(toCopy.int295());
        int296(toCopy.int296());
        int297(toCopy.int297());
        int298(toCopy.int298());
        int299(toCopy.int299());
    }

    public static final org.objectfabric.TType TYPE = new org.objectfabric.TType(org.objectfabric.generated.LimitsObjectModel.instance(), org.objectfabric.generated.LimitsObjectModel.ORG_OBJECTFABRIC_GENERATED_LIMITN_CLASS_ID);

    public final int int0() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT0_INDEX);
        int value = v != null ? v._int0 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int0(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int0 = value;
        v.setBit(INT0_INDEX);
        endWrite_(outer, inner);
    }

    public final int int1() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT1_INDEX);
        int value = v != null ? v._int1 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int1(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int1 = value;
        v.setBit(INT1_INDEX);
        endWrite_(outer, inner);
    }

    public final int int2() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT2_INDEX);
        int value = v != null ? v._int2 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int2(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int2 = value;
        v.setBit(INT2_INDEX);
        endWrite_(outer, inner);
    }

    public final int int3() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT3_INDEX);
        int value = v != null ? v._int3 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int3(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int3 = value;
        v.setBit(INT3_INDEX);
        endWrite_(outer, inner);
    }

    public final int int4() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT4_INDEX);
        int value = v != null ? v._int4 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int4(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int4 = value;
        v.setBit(INT4_INDEX);
        endWrite_(outer, inner);
    }

    public final int int5() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT5_INDEX);
        int value = v != null ? v._int5 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int5(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int5 = value;
        v.setBit(INT5_INDEX);
        endWrite_(outer, inner);
    }

    public final int int6() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT6_INDEX);
        int value = v != null ? v._int6 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int6(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int6 = value;
        v.setBit(INT6_INDEX);
        endWrite_(outer, inner);
    }

    public final int int7() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT7_INDEX);
        int value = v != null ? v._int7 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int7(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int7 = value;
        v.setBit(INT7_INDEX);
        endWrite_(outer, inner);
    }

    public final int int8() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT8_INDEX);
        int value = v != null ? v._int8 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int8(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int8 = value;
        v.setBit(INT8_INDEX);
        endWrite_(outer, inner);
    }

    public final int int9() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT9_INDEX);
        int value = v != null ? v._int9 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int9(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int9 = value;
        v.setBit(INT9_INDEX);
        endWrite_(outer, inner);
    }

    public final int int10() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT10_INDEX);
        int value = v != null ? v._int10 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int10(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int10 = value;
        v.setBit(INT10_INDEX);
        endWrite_(outer, inner);
    }

    public final int int11() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT11_INDEX);
        int value = v != null ? v._int11 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int11(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int11 = value;
        v.setBit(INT11_INDEX);
        endWrite_(outer, inner);
    }

    public final int int12() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT12_INDEX);
        int value = v != null ? v._int12 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int12(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int12 = value;
        v.setBit(INT12_INDEX);
        endWrite_(outer, inner);
    }

    public final int int13() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT13_INDEX);
        int value = v != null ? v._int13 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int13(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int13 = value;
        v.setBit(INT13_INDEX);
        endWrite_(outer, inner);
    }

    public final int int14() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT14_INDEX);
        int value = v != null ? v._int14 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int14(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int14 = value;
        v.setBit(INT14_INDEX);
        endWrite_(outer, inner);
    }

    public final int int15() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT15_INDEX);
        int value = v != null ? v._int15 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int15(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int15 = value;
        v.setBit(INT15_INDEX);
        endWrite_(outer, inner);
    }

    public final int int16() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT16_INDEX);
        int value = v != null ? v._int16 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int16(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int16 = value;
        v.setBit(INT16_INDEX);
        endWrite_(outer, inner);
    }

    public final int int17() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT17_INDEX);
        int value = v != null ? v._int17 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int17(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int17 = value;
        v.setBit(INT17_INDEX);
        endWrite_(outer, inner);
    }

    public final int int18() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT18_INDEX);
        int value = v != null ? v._int18 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int18(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int18 = value;
        v.setBit(INT18_INDEX);
        endWrite_(outer, inner);
    }

    public final int int19() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT19_INDEX);
        int value = v != null ? v._int19 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int19(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int19 = value;
        v.setBit(INT19_INDEX);
        endWrite_(outer, inner);
    }

    public final int int20() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT20_INDEX);
        int value = v != null ? v._int20 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int20(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int20 = value;
        v.setBit(INT20_INDEX);
        endWrite_(outer, inner);
    }

    public final int int21() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT21_INDEX);
        int value = v != null ? v._int21 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int21(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int21 = value;
        v.setBit(INT21_INDEX);
        endWrite_(outer, inner);
    }

    public final int int22() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT22_INDEX);
        int value = v != null ? v._int22 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int22(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int22 = value;
        v.setBit(INT22_INDEX);
        endWrite_(outer, inner);
    }

    public final int int23() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT23_INDEX);
        int value = v != null ? v._int23 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int23(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int23 = value;
        v.setBit(INT23_INDEX);
        endWrite_(outer, inner);
    }

    public final int int24() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT24_INDEX);
        int value = v != null ? v._int24 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int24(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int24 = value;
        v.setBit(INT24_INDEX);
        endWrite_(outer, inner);
    }

    public final int int25() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT25_INDEX);
        int value = v != null ? v._int25 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int25(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int25 = value;
        v.setBit(INT25_INDEX);
        endWrite_(outer, inner);
    }

    public final int int26() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT26_INDEX);
        int value = v != null ? v._int26 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int26(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int26 = value;
        v.setBit(INT26_INDEX);
        endWrite_(outer, inner);
    }

    public final int int27() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT27_INDEX);
        int value = v != null ? v._int27 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int27(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int27 = value;
        v.setBit(INT27_INDEX);
        endWrite_(outer, inner);
    }

    public final int int28() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT28_INDEX);
        int value = v != null ? v._int28 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int28(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int28 = value;
        v.setBit(INT28_INDEX);
        endWrite_(outer, inner);
    }

    public final int int29() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT29_INDEX);
        int value = v != null ? v._int29 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int29(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int29 = value;
        v.setBit(INT29_INDEX);
        endWrite_(outer, inner);
    }

    public final int int30() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT30_INDEX);
        int value = v != null ? v._int30 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int30(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int30 = value;
        v.setBit(INT30_INDEX);
        endWrite_(outer, inner);
    }

    public final int int31() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT31_INDEX);
        int value = v != null ? v._int31 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int31(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int31 = value;
        v.setBit(INT31_INDEX);
        endWrite_(outer, inner);
    }

    public final int int32() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT32_INDEX);
        int value = v != null ? v._int32 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int32(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int32 = value;
        v.setBit(INT32_INDEX);
        endWrite_(outer, inner);
    }

    public final int int33() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT33_INDEX);
        int value = v != null ? v._int33 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int33(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int33 = value;
        v.setBit(INT33_INDEX);
        endWrite_(outer, inner);
    }

    public final int int34() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT34_INDEX);
        int value = v != null ? v._int34 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int34(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int34 = value;
        v.setBit(INT34_INDEX);
        endWrite_(outer, inner);
    }

    public final int int35() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT35_INDEX);
        int value = v != null ? v._int35 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int35(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int35 = value;
        v.setBit(INT35_INDEX);
        endWrite_(outer, inner);
    }

    public final int int36() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT36_INDEX);
        int value = v != null ? v._int36 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int36(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int36 = value;
        v.setBit(INT36_INDEX);
        endWrite_(outer, inner);
    }

    public final int int37() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT37_INDEX);
        int value = v != null ? v._int37 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int37(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int37 = value;
        v.setBit(INT37_INDEX);
        endWrite_(outer, inner);
    }

    public final int int38() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT38_INDEX);
        int value = v != null ? v._int38 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int38(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int38 = value;
        v.setBit(INT38_INDEX);
        endWrite_(outer, inner);
    }

    public final int int39() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT39_INDEX);
        int value = v != null ? v._int39 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int39(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int39 = value;
        v.setBit(INT39_INDEX);
        endWrite_(outer, inner);
    }

    public final int int40() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT40_INDEX);
        int value = v != null ? v._int40 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int40(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int40 = value;
        v.setBit(INT40_INDEX);
        endWrite_(outer, inner);
    }

    public final int int41() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT41_INDEX);
        int value = v != null ? v._int41 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int41(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int41 = value;
        v.setBit(INT41_INDEX);
        endWrite_(outer, inner);
    }

    public final int int42() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT42_INDEX);
        int value = v != null ? v._int42 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int42(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int42 = value;
        v.setBit(INT42_INDEX);
        endWrite_(outer, inner);
    }

    public final int int43() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT43_INDEX);
        int value = v != null ? v._int43 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int43(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int43 = value;
        v.setBit(INT43_INDEX);
        endWrite_(outer, inner);
    }

    public final int int44() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT44_INDEX);
        int value = v != null ? v._int44 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int44(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int44 = value;
        v.setBit(INT44_INDEX);
        endWrite_(outer, inner);
    }

    public final int int45() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT45_INDEX);
        int value = v != null ? v._int45 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int45(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int45 = value;
        v.setBit(INT45_INDEX);
        endWrite_(outer, inner);
    }

    public final int int46() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT46_INDEX);
        int value = v != null ? v._int46 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int46(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int46 = value;
        v.setBit(INT46_INDEX);
        endWrite_(outer, inner);
    }

    public final int int47() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT47_INDEX);
        int value = v != null ? v._int47 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int47(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int47 = value;
        v.setBit(INT47_INDEX);
        endWrite_(outer, inner);
    }

    public final int int48() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT48_INDEX);
        int value = v != null ? v._int48 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int48(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int48 = value;
        v.setBit(INT48_INDEX);
        endWrite_(outer, inner);
    }

    public final int int49() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT49_INDEX);
        int value = v != null ? v._int49 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int49(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int49 = value;
        v.setBit(INT49_INDEX);
        endWrite_(outer, inner);
    }

    public final int int50() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT50_INDEX);
        int value = v != null ? v._int50 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int50(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int50 = value;
        v.setBit(INT50_INDEX);
        endWrite_(outer, inner);
    }

    public final int int51() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT51_INDEX);
        int value = v != null ? v._int51 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int51(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int51 = value;
        v.setBit(INT51_INDEX);
        endWrite_(outer, inner);
    }

    public final int int52() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT52_INDEX);
        int value = v != null ? v._int52 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int52(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int52 = value;
        v.setBit(INT52_INDEX);
        endWrite_(outer, inner);
    }

    public final int int53() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT53_INDEX);
        int value = v != null ? v._int53 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int53(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int53 = value;
        v.setBit(INT53_INDEX);
        endWrite_(outer, inner);
    }

    public final int int54() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT54_INDEX);
        int value = v != null ? v._int54 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int54(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int54 = value;
        v.setBit(INT54_INDEX);
        endWrite_(outer, inner);
    }

    public final int int55() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT55_INDEX);
        int value = v != null ? v._int55 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int55(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int55 = value;
        v.setBit(INT55_INDEX);
        endWrite_(outer, inner);
    }

    public final int int56() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT56_INDEX);
        int value = v != null ? v._int56 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int56(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int56 = value;
        v.setBit(INT56_INDEX);
        endWrite_(outer, inner);
    }

    public final int int57() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT57_INDEX);
        int value = v != null ? v._int57 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int57(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int57 = value;
        v.setBit(INT57_INDEX);
        endWrite_(outer, inner);
    }

    public final int int58() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT58_INDEX);
        int value = v != null ? v._int58 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int58(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int58 = value;
        v.setBit(INT58_INDEX);
        endWrite_(outer, inner);
    }

    public final int int59() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT59_INDEX);
        int value = v != null ? v._int59 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int59(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int59 = value;
        v.setBit(INT59_INDEX);
        endWrite_(outer, inner);
    }

    public final int int60() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT60_INDEX);
        int value = v != null ? v._int60 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int60(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int60 = value;
        v.setBit(INT60_INDEX);
        endWrite_(outer, inner);
    }

    public final int int61() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT61_INDEX);
        int value = v != null ? v._int61 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int61(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int61 = value;
        v.setBit(INT61_INDEX);
        endWrite_(outer, inner);
    }

    public final int int62() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT62_INDEX);
        int value = v != null ? v._int62 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int62(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int62 = value;
        v.setBit(INT62_INDEX);
        endWrite_(outer, inner);
    }

    public final int int63() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT63_INDEX);
        int value = v != null ? v._int63 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int63(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int63 = value;
        v.setBit(INT63_INDEX);
        endWrite_(outer, inner);
    }

    public final int int64() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT64_INDEX);
        int value = v != null ? v._int64 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int64(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int64 = value;
        v.setBit(INT64_INDEX);
        endWrite_(outer, inner);
    }

    public final int int65() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT65_INDEX);
        int value = v != null ? v._int65 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int65(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int65 = value;
        v.setBit(INT65_INDEX);
        endWrite_(outer, inner);
    }

    public final int int66() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT66_INDEX);
        int value = v != null ? v._int66 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int66(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int66 = value;
        v.setBit(INT66_INDEX);
        endWrite_(outer, inner);
    }

    public final int int67() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT67_INDEX);
        int value = v != null ? v._int67 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int67(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int67 = value;
        v.setBit(INT67_INDEX);
        endWrite_(outer, inner);
    }

    public final int int68() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT68_INDEX);
        int value = v != null ? v._int68 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int68(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int68 = value;
        v.setBit(INT68_INDEX);
        endWrite_(outer, inner);
    }

    public final int int69() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT69_INDEX);
        int value = v != null ? v._int69 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int69(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int69 = value;
        v.setBit(INT69_INDEX);
        endWrite_(outer, inner);
    }

    public final int int70() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT70_INDEX);
        int value = v != null ? v._int70 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int70(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int70 = value;
        v.setBit(INT70_INDEX);
        endWrite_(outer, inner);
    }

    public final int int71() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT71_INDEX);
        int value = v != null ? v._int71 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int71(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int71 = value;
        v.setBit(INT71_INDEX);
        endWrite_(outer, inner);
    }

    public final int int72() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT72_INDEX);
        int value = v != null ? v._int72 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int72(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int72 = value;
        v.setBit(INT72_INDEX);
        endWrite_(outer, inner);
    }

    public final int int73() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT73_INDEX);
        int value = v != null ? v._int73 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int73(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int73 = value;
        v.setBit(INT73_INDEX);
        endWrite_(outer, inner);
    }

    public final int int74() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT74_INDEX);
        int value = v != null ? v._int74 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int74(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int74 = value;
        v.setBit(INT74_INDEX);
        endWrite_(outer, inner);
    }

    public final int int75() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT75_INDEX);
        int value = v != null ? v._int75 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int75(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int75 = value;
        v.setBit(INT75_INDEX);
        endWrite_(outer, inner);
    }

    public final int int76() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT76_INDEX);
        int value = v != null ? v._int76 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int76(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int76 = value;
        v.setBit(INT76_INDEX);
        endWrite_(outer, inner);
    }

    public final int int77() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT77_INDEX);
        int value = v != null ? v._int77 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int77(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int77 = value;
        v.setBit(INT77_INDEX);
        endWrite_(outer, inner);
    }

    public final int int78() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT78_INDEX);
        int value = v != null ? v._int78 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int78(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int78 = value;
        v.setBit(INT78_INDEX);
        endWrite_(outer, inner);
    }

    public final int int79() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT79_INDEX);
        int value = v != null ? v._int79 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int79(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int79 = value;
        v.setBit(INT79_INDEX);
        endWrite_(outer, inner);
    }

    public final int int80() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT80_INDEX);
        int value = v != null ? v._int80 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int80(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int80 = value;
        v.setBit(INT80_INDEX);
        endWrite_(outer, inner);
    }

    public final int int81() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT81_INDEX);
        int value = v != null ? v._int81 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int81(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int81 = value;
        v.setBit(INT81_INDEX);
        endWrite_(outer, inner);
    }

    public final int int82() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT82_INDEX);
        int value = v != null ? v._int82 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int82(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int82 = value;
        v.setBit(INT82_INDEX);
        endWrite_(outer, inner);
    }

    public final int int83() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT83_INDEX);
        int value = v != null ? v._int83 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int83(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int83 = value;
        v.setBit(INT83_INDEX);
        endWrite_(outer, inner);
    }

    public final int int84() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT84_INDEX);
        int value = v != null ? v._int84 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int84(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int84 = value;
        v.setBit(INT84_INDEX);
        endWrite_(outer, inner);
    }

    public final int int85() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT85_INDEX);
        int value = v != null ? v._int85 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int85(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int85 = value;
        v.setBit(INT85_INDEX);
        endWrite_(outer, inner);
    }

    public final int int86() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT86_INDEX);
        int value = v != null ? v._int86 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int86(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int86 = value;
        v.setBit(INT86_INDEX);
        endWrite_(outer, inner);
    }

    public final int int87() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT87_INDEX);
        int value = v != null ? v._int87 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int87(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int87 = value;
        v.setBit(INT87_INDEX);
        endWrite_(outer, inner);
    }

    public final int int88() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT88_INDEX);
        int value = v != null ? v._int88 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int88(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int88 = value;
        v.setBit(INT88_INDEX);
        endWrite_(outer, inner);
    }

    public final int int89() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT89_INDEX);
        int value = v != null ? v._int89 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int89(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int89 = value;
        v.setBit(INT89_INDEX);
        endWrite_(outer, inner);
    }

    public final int int90() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT90_INDEX);
        int value = v != null ? v._int90 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int90(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int90 = value;
        v.setBit(INT90_INDEX);
        endWrite_(outer, inner);
    }

    public final int int91() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT91_INDEX);
        int value = v != null ? v._int91 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int91(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int91 = value;
        v.setBit(INT91_INDEX);
        endWrite_(outer, inner);
    }

    public final int int92() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT92_INDEX);
        int value = v != null ? v._int92 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int92(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int92 = value;
        v.setBit(INT92_INDEX);
        endWrite_(outer, inner);
    }

    public final int int93() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT93_INDEX);
        int value = v != null ? v._int93 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int93(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int93 = value;
        v.setBit(INT93_INDEX);
        endWrite_(outer, inner);
    }

    public final int int94() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT94_INDEX);
        int value = v != null ? v._int94 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int94(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int94 = value;
        v.setBit(INT94_INDEX);
        endWrite_(outer, inner);
    }

    public final int int95() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT95_INDEX);
        int value = v != null ? v._int95 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int95(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int95 = value;
        v.setBit(INT95_INDEX);
        endWrite_(outer, inner);
    }

    public final int int96() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT96_INDEX);
        int value = v != null ? v._int96 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int96(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int96 = value;
        v.setBit(INT96_INDEX);
        endWrite_(outer, inner);
    }

    public final int int97() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT97_INDEX);
        int value = v != null ? v._int97 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int97(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int97 = value;
        v.setBit(INT97_INDEX);
        endWrite_(outer, inner);
    }

    public final int int98() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT98_INDEX);
        int value = v != null ? v._int98 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int98(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int98 = value;
        v.setBit(INT98_INDEX);
        endWrite_(outer, inner);
    }

    public final int int99() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT99_INDEX);
        int value = v != null ? v._int99 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int99(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int99 = value;
        v.setBit(INT99_INDEX);
        endWrite_(outer, inner);
    }

    public final int int100() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT100_INDEX);
        int value = v != null ? v._int100 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int100(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int100 = value;
        v.setBit(INT100_INDEX);
        endWrite_(outer, inner);
    }

    public final int int101() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT101_INDEX);
        int value = v != null ? v._int101 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int101(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int101 = value;
        v.setBit(INT101_INDEX);
        endWrite_(outer, inner);
    }

    public final int int102() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT102_INDEX);
        int value = v != null ? v._int102 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int102(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int102 = value;
        v.setBit(INT102_INDEX);
        endWrite_(outer, inner);
    }

    public final int int103() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT103_INDEX);
        int value = v != null ? v._int103 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int103(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int103 = value;
        v.setBit(INT103_INDEX);
        endWrite_(outer, inner);
    }

    public final int int104() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT104_INDEX);
        int value = v != null ? v._int104 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int104(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int104 = value;
        v.setBit(INT104_INDEX);
        endWrite_(outer, inner);
    }

    public final int int105() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT105_INDEX);
        int value = v != null ? v._int105 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int105(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int105 = value;
        v.setBit(INT105_INDEX);
        endWrite_(outer, inner);
    }

    public final int int106() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT106_INDEX);
        int value = v != null ? v._int106 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int106(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int106 = value;
        v.setBit(INT106_INDEX);
        endWrite_(outer, inner);
    }

    public final int int107() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT107_INDEX);
        int value = v != null ? v._int107 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int107(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int107 = value;
        v.setBit(INT107_INDEX);
        endWrite_(outer, inner);
    }

    public final int int108() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT108_INDEX);
        int value = v != null ? v._int108 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int108(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int108 = value;
        v.setBit(INT108_INDEX);
        endWrite_(outer, inner);
    }

    public final int int109() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT109_INDEX);
        int value = v != null ? v._int109 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int109(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int109 = value;
        v.setBit(INT109_INDEX);
        endWrite_(outer, inner);
    }

    public final int int110() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT110_INDEX);
        int value = v != null ? v._int110 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int110(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int110 = value;
        v.setBit(INT110_INDEX);
        endWrite_(outer, inner);
    }

    public final int int111() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT111_INDEX);
        int value = v != null ? v._int111 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int111(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int111 = value;
        v.setBit(INT111_INDEX);
        endWrite_(outer, inner);
    }

    public final int int112() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT112_INDEX);
        int value = v != null ? v._int112 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int112(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int112 = value;
        v.setBit(INT112_INDEX);
        endWrite_(outer, inner);
    }

    public final int int113() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT113_INDEX);
        int value = v != null ? v._int113 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int113(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int113 = value;
        v.setBit(INT113_INDEX);
        endWrite_(outer, inner);
    }

    public final int int114() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT114_INDEX);
        int value = v != null ? v._int114 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int114(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int114 = value;
        v.setBit(INT114_INDEX);
        endWrite_(outer, inner);
    }

    public final int int115() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT115_INDEX);
        int value = v != null ? v._int115 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int115(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int115 = value;
        v.setBit(INT115_INDEX);
        endWrite_(outer, inner);
    }

    public final int int116() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT116_INDEX);
        int value = v != null ? v._int116 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int116(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int116 = value;
        v.setBit(INT116_INDEX);
        endWrite_(outer, inner);
    }

    public final int int117() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT117_INDEX);
        int value = v != null ? v._int117 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int117(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int117 = value;
        v.setBit(INT117_INDEX);
        endWrite_(outer, inner);
    }

    public final int int118() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT118_INDEX);
        int value = v != null ? v._int118 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int118(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int118 = value;
        v.setBit(INT118_INDEX);
        endWrite_(outer, inner);
    }

    public final int int119() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT119_INDEX);
        int value = v != null ? v._int119 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int119(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int119 = value;
        v.setBit(INT119_INDEX);
        endWrite_(outer, inner);
    }

    public final int int120() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT120_INDEX);
        int value = v != null ? v._int120 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int120(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int120 = value;
        v.setBit(INT120_INDEX);
        endWrite_(outer, inner);
    }

    public final int int121() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT121_INDEX);
        int value = v != null ? v._int121 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int121(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int121 = value;
        v.setBit(INT121_INDEX);
        endWrite_(outer, inner);
    }

    public final int int122() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT122_INDEX);
        int value = v != null ? v._int122 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int122(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int122 = value;
        v.setBit(INT122_INDEX);
        endWrite_(outer, inner);
    }

    public final int int123() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT123_INDEX);
        int value = v != null ? v._int123 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int123(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int123 = value;
        v.setBit(INT123_INDEX);
        endWrite_(outer, inner);
    }

    public final int int124() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT124_INDEX);
        int value = v != null ? v._int124 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int124(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int124 = value;
        v.setBit(INT124_INDEX);
        endWrite_(outer, inner);
    }

    public final int int125() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT125_INDEX);
        int value = v != null ? v._int125 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int125(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int125 = value;
        v.setBit(INT125_INDEX);
        endWrite_(outer, inner);
    }

    public final int int126() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT126_INDEX);
        int value = v != null ? v._int126 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int126(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int126 = value;
        v.setBit(INT126_INDEX);
        endWrite_(outer, inner);
    }

    public final int int127() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT127_INDEX);
        int value = v != null ? v._int127 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int127(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int127 = value;
        v.setBit(INT127_INDEX);
        endWrite_(outer, inner);
    }

    public final int int128() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT128_INDEX);
        int value = v != null ? v._int128 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int128(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int128 = value;
        v.setBit(INT128_INDEX);
        endWrite_(outer, inner);
    }

    public final int int129() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT129_INDEX);
        int value = v != null ? v._int129 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int129(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int129 = value;
        v.setBit(INT129_INDEX);
        endWrite_(outer, inner);
    }

    public final int int130() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT130_INDEX);
        int value = v != null ? v._int130 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int130(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int130 = value;
        v.setBit(INT130_INDEX);
        endWrite_(outer, inner);
    }

    public final int int131() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT131_INDEX);
        int value = v != null ? v._int131 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int131(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int131 = value;
        v.setBit(INT131_INDEX);
        endWrite_(outer, inner);
    }

    public final int int132() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT132_INDEX);
        int value = v != null ? v._int132 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int132(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int132 = value;
        v.setBit(INT132_INDEX);
        endWrite_(outer, inner);
    }

    public final int int133() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT133_INDEX);
        int value = v != null ? v._int133 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int133(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int133 = value;
        v.setBit(INT133_INDEX);
        endWrite_(outer, inner);
    }

    public final int int134() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT134_INDEX);
        int value = v != null ? v._int134 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int134(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int134 = value;
        v.setBit(INT134_INDEX);
        endWrite_(outer, inner);
    }

    public final int int135() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT135_INDEX);
        int value = v != null ? v._int135 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int135(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int135 = value;
        v.setBit(INT135_INDEX);
        endWrite_(outer, inner);
    }

    public final int int136() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT136_INDEX);
        int value = v != null ? v._int136 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int136(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int136 = value;
        v.setBit(INT136_INDEX);
        endWrite_(outer, inner);
    }

    public final int int137() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT137_INDEX);
        int value = v != null ? v._int137 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int137(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int137 = value;
        v.setBit(INT137_INDEX);
        endWrite_(outer, inner);
    }

    public final int int138() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT138_INDEX);
        int value = v != null ? v._int138 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int138(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int138 = value;
        v.setBit(INT138_INDEX);
        endWrite_(outer, inner);
    }

    public final int int139() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT139_INDEX);
        int value = v != null ? v._int139 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int139(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int139 = value;
        v.setBit(INT139_INDEX);
        endWrite_(outer, inner);
    }

    public final int int140() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT140_INDEX);
        int value = v != null ? v._int140 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int140(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int140 = value;
        v.setBit(INT140_INDEX);
        endWrite_(outer, inner);
    }

    public final int int141() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT141_INDEX);
        int value = v != null ? v._int141 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int141(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int141 = value;
        v.setBit(INT141_INDEX);
        endWrite_(outer, inner);
    }

    public final int int142() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT142_INDEX);
        int value = v != null ? v._int142 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int142(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int142 = value;
        v.setBit(INT142_INDEX);
        endWrite_(outer, inner);
    }

    public final int int143() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT143_INDEX);
        int value = v != null ? v._int143 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int143(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int143 = value;
        v.setBit(INT143_INDEX);
        endWrite_(outer, inner);
    }

    public final int int144() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT144_INDEX);
        int value = v != null ? v._int144 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int144(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int144 = value;
        v.setBit(INT144_INDEX);
        endWrite_(outer, inner);
    }

    public final int int145() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT145_INDEX);
        int value = v != null ? v._int145 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int145(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int145 = value;
        v.setBit(INT145_INDEX);
        endWrite_(outer, inner);
    }

    public final int int146() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT146_INDEX);
        int value = v != null ? v._int146 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int146(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int146 = value;
        v.setBit(INT146_INDEX);
        endWrite_(outer, inner);
    }

    public final int int147() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT147_INDEX);
        int value = v != null ? v._int147 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int147(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int147 = value;
        v.setBit(INT147_INDEX);
        endWrite_(outer, inner);
    }

    public final int int148() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT148_INDEX);
        int value = v != null ? v._int148 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int148(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int148 = value;
        v.setBit(INT148_INDEX);
        endWrite_(outer, inner);
    }

    public final int int149() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT149_INDEX);
        int value = v != null ? v._int149 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int149(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int149 = value;
        v.setBit(INT149_INDEX);
        endWrite_(outer, inner);
    }

    public final int int150() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT150_INDEX);
        int value = v != null ? v._int150 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int150(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int150 = value;
        v.setBit(INT150_INDEX);
        endWrite_(outer, inner);
    }

    public final int int151() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT151_INDEX);
        int value = v != null ? v._int151 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int151(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int151 = value;
        v.setBit(INT151_INDEX);
        endWrite_(outer, inner);
    }

    public final int int152() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT152_INDEX);
        int value = v != null ? v._int152 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int152(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int152 = value;
        v.setBit(INT152_INDEX);
        endWrite_(outer, inner);
    }

    public final int int153() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT153_INDEX);
        int value = v != null ? v._int153 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int153(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int153 = value;
        v.setBit(INT153_INDEX);
        endWrite_(outer, inner);
    }

    public final int int154() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT154_INDEX);
        int value = v != null ? v._int154 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int154(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int154 = value;
        v.setBit(INT154_INDEX);
        endWrite_(outer, inner);
    }

    public final int int155() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT155_INDEX);
        int value = v != null ? v._int155 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int155(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int155 = value;
        v.setBit(INT155_INDEX);
        endWrite_(outer, inner);
    }

    public final int int156() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT156_INDEX);
        int value = v != null ? v._int156 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int156(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int156 = value;
        v.setBit(INT156_INDEX);
        endWrite_(outer, inner);
    }

    public final int int157() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT157_INDEX);
        int value = v != null ? v._int157 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int157(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int157 = value;
        v.setBit(INT157_INDEX);
        endWrite_(outer, inner);
    }

    public final int int158() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT158_INDEX);
        int value = v != null ? v._int158 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int158(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int158 = value;
        v.setBit(INT158_INDEX);
        endWrite_(outer, inner);
    }

    public final int int159() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT159_INDEX);
        int value = v != null ? v._int159 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int159(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int159 = value;
        v.setBit(INT159_INDEX);
        endWrite_(outer, inner);
    }

    public final int int160() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT160_INDEX);
        int value = v != null ? v._int160 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int160(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int160 = value;
        v.setBit(INT160_INDEX);
        endWrite_(outer, inner);
    }

    public final int int161() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT161_INDEX);
        int value = v != null ? v._int161 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int161(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int161 = value;
        v.setBit(INT161_INDEX);
        endWrite_(outer, inner);
    }

    public final int int162() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT162_INDEX);
        int value = v != null ? v._int162 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int162(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int162 = value;
        v.setBit(INT162_INDEX);
        endWrite_(outer, inner);
    }

    public final int int163() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT163_INDEX);
        int value = v != null ? v._int163 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int163(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int163 = value;
        v.setBit(INT163_INDEX);
        endWrite_(outer, inner);
    }

    public final int int164() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT164_INDEX);
        int value = v != null ? v._int164 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int164(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int164 = value;
        v.setBit(INT164_INDEX);
        endWrite_(outer, inner);
    }

    public final int int165() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT165_INDEX);
        int value = v != null ? v._int165 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int165(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int165 = value;
        v.setBit(INT165_INDEX);
        endWrite_(outer, inner);
    }

    public final int int166() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT166_INDEX);
        int value = v != null ? v._int166 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int166(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int166 = value;
        v.setBit(INT166_INDEX);
        endWrite_(outer, inner);
    }

    public final int int167() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT167_INDEX);
        int value = v != null ? v._int167 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int167(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int167 = value;
        v.setBit(INT167_INDEX);
        endWrite_(outer, inner);
    }

    public final int int168() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT168_INDEX);
        int value = v != null ? v._int168 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int168(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int168 = value;
        v.setBit(INT168_INDEX);
        endWrite_(outer, inner);
    }

    public final int int169() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT169_INDEX);
        int value = v != null ? v._int169 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int169(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int169 = value;
        v.setBit(INT169_INDEX);
        endWrite_(outer, inner);
    }

    public final int int170() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT170_INDEX);
        int value = v != null ? v._int170 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int170(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int170 = value;
        v.setBit(INT170_INDEX);
        endWrite_(outer, inner);
    }

    public final int int171() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT171_INDEX);
        int value = v != null ? v._int171 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int171(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int171 = value;
        v.setBit(INT171_INDEX);
        endWrite_(outer, inner);
    }

    public final int int172() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT172_INDEX);
        int value = v != null ? v._int172 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int172(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int172 = value;
        v.setBit(INT172_INDEX);
        endWrite_(outer, inner);
    }

    public final int int173() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT173_INDEX);
        int value = v != null ? v._int173 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int173(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int173 = value;
        v.setBit(INT173_INDEX);
        endWrite_(outer, inner);
    }

    public final int int174() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT174_INDEX);
        int value = v != null ? v._int174 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int174(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int174 = value;
        v.setBit(INT174_INDEX);
        endWrite_(outer, inner);
    }

    public final int int175() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT175_INDEX);
        int value = v != null ? v._int175 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int175(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int175 = value;
        v.setBit(INT175_INDEX);
        endWrite_(outer, inner);
    }

    public final int int176() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT176_INDEX);
        int value = v != null ? v._int176 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int176(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int176 = value;
        v.setBit(INT176_INDEX);
        endWrite_(outer, inner);
    }

    public final int int177() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT177_INDEX);
        int value = v != null ? v._int177 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int177(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int177 = value;
        v.setBit(INT177_INDEX);
        endWrite_(outer, inner);
    }

    public final int int178() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT178_INDEX);
        int value = v != null ? v._int178 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int178(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int178 = value;
        v.setBit(INT178_INDEX);
        endWrite_(outer, inner);
    }

    public final int int179() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT179_INDEX);
        int value = v != null ? v._int179 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int179(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int179 = value;
        v.setBit(INT179_INDEX);
        endWrite_(outer, inner);
    }

    public final int int180() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT180_INDEX);
        int value = v != null ? v._int180 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int180(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int180 = value;
        v.setBit(INT180_INDEX);
        endWrite_(outer, inner);
    }

    public final int int181() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT181_INDEX);
        int value = v != null ? v._int181 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int181(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int181 = value;
        v.setBit(INT181_INDEX);
        endWrite_(outer, inner);
    }

    public final int int182() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT182_INDEX);
        int value = v != null ? v._int182 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int182(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int182 = value;
        v.setBit(INT182_INDEX);
        endWrite_(outer, inner);
    }

    public final int int183() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT183_INDEX);
        int value = v != null ? v._int183 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int183(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int183 = value;
        v.setBit(INT183_INDEX);
        endWrite_(outer, inner);
    }

    public final int int184() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT184_INDEX);
        int value = v != null ? v._int184 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int184(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int184 = value;
        v.setBit(INT184_INDEX);
        endWrite_(outer, inner);
    }

    public final int int185() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT185_INDEX);
        int value = v != null ? v._int185 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int185(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int185 = value;
        v.setBit(INT185_INDEX);
        endWrite_(outer, inner);
    }

    public final int int186() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT186_INDEX);
        int value = v != null ? v._int186 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int186(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int186 = value;
        v.setBit(INT186_INDEX);
        endWrite_(outer, inner);
    }

    public final int int187() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT187_INDEX);
        int value = v != null ? v._int187 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int187(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int187 = value;
        v.setBit(INT187_INDEX);
        endWrite_(outer, inner);
    }

    public final int int188() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT188_INDEX);
        int value = v != null ? v._int188 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int188(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int188 = value;
        v.setBit(INT188_INDEX);
        endWrite_(outer, inner);
    }

    public final int int189() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT189_INDEX);
        int value = v != null ? v._int189 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int189(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int189 = value;
        v.setBit(INT189_INDEX);
        endWrite_(outer, inner);
    }

    public final int int190() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT190_INDEX);
        int value = v != null ? v._int190 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int190(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int190 = value;
        v.setBit(INT190_INDEX);
        endWrite_(outer, inner);
    }

    public final int int191() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT191_INDEX);
        int value = v != null ? v._int191 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int191(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int191 = value;
        v.setBit(INT191_INDEX);
        endWrite_(outer, inner);
    }

    public final int int192() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT192_INDEX);
        int value = v != null ? v._int192 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int192(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int192 = value;
        v.setBit(INT192_INDEX);
        endWrite_(outer, inner);
    }

    public final int int193() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT193_INDEX);
        int value = v != null ? v._int193 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int193(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int193 = value;
        v.setBit(INT193_INDEX);
        endWrite_(outer, inner);
    }

    public final int int194() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT194_INDEX);
        int value = v != null ? v._int194 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int194(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int194 = value;
        v.setBit(INT194_INDEX);
        endWrite_(outer, inner);
    }

    public final int int195() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT195_INDEX);
        int value = v != null ? v._int195 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int195(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int195 = value;
        v.setBit(INT195_INDEX);
        endWrite_(outer, inner);
    }

    public final int int196() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT196_INDEX);
        int value = v != null ? v._int196 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int196(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int196 = value;
        v.setBit(INT196_INDEX);
        endWrite_(outer, inner);
    }

    public final int int197() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT197_INDEX);
        int value = v != null ? v._int197 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int197(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int197 = value;
        v.setBit(INT197_INDEX);
        endWrite_(outer, inner);
    }

    public final int int198() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT198_INDEX);
        int value = v != null ? v._int198 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int198(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int198 = value;
        v.setBit(INT198_INDEX);
        endWrite_(outer, inner);
    }

    public final int int199() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT199_INDEX);
        int value = v != null ? v._int199 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int199(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int199 = value;
        v.setBit(INT199_INDEX);
        endWrite_(outer, inner);
    }

    public final int int200() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT200_INDEX);
        int value = v != null ? v._int200 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int200(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int200 = value;
        v.setBit(INT200_INDEX);
        endWrite_(outer, inner);
    }

    public final int int201() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT201_INDEX);
        int value = v != null ? v._int201 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int201(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int201 = value;
        v.setBit(INT201_INDEX);
        endWrite_(outer, inner);
    }

    public final int int202() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT202_INDEX);
        int value = v != null ? v._int202 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int202(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int202 = value;
        v.setBit(INT202_INDEX);
        endWrite_(outer, inner);
    }

    public final int int203() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT203_INDEX);
        int value = v != null ? v._int203 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int203(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int203 = value;
        v.setBit(INT203_INDEX);
        endWrite_(outer, inner);
    }

    public final int int204() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT204_INDEX);
        int value = v != null ? v._int204 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int204(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int204 = value;
        v.setBit(INT204_INDEX);
        endWrite_(outer, inner);
    }

    public final int int205() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT205_INDEX);
        int value = v != null ? v._int205 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int205(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int205 = value;
        v.setBit(INT205_INDEX);
        endWrite_(outer, inner);
    }

    public final int int206() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT206_INDEX);
        int value = v != null ? v._int206 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int206(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int206 = value;
        v.setBit(INT206_INDEX);
        endWrite_(outer, inner);
    }

    public final int int207() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT207_INDEX);
        int value = v != null ? v._int207 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int207(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int207 = value;
        v.setBit(INT207_INDEX);
        endWrite_(outer, inner);
    }

    public final int int208() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT208_INDEX);
        int value = v != null ? v._int208 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int208(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int208 = value;
        v.setBit(INT208_INDEX);
        endWrite_(outer, inner);
    }

    public final int int209() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT209_INDEX);
        int value = v != null ? v._int209 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int209(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int209 = value;
        v.setBit(INT209_INDEX);
        endWrite_(outer, inner);
    }

    public final int int210() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT210_INDEX);
        int value = v != null ? v._int210 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int210(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int210 = value;
        v.setBit(INT210_INDEX);
        endWrite_(outer, inner);
    }

    public final int int211() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT211_INDEX);
        int value = v != null ? v._int211 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int211(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int211 = value;
        v.setBit(INT211_INDEX);
        endWrite_(outer, inner);
    }

    public final int int212() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT212_INDEX);
        int value = v != null ? v._int212 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int212(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int212 = value;
        v.setBit(INT212_INDEX);
        endWrite_(outer, inner);
    }

    public final int int213() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT213_INDEX);
        int value = v != null ? v._int213 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int213(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int213 = value;
        v.setBit(INT213_INDEX);
        endWrite_(outer, inner);
    }

    public final int int214() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT214_INDEX);
        int value = v != null ? v._int214 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int214(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int214 = value;
        v.setBit(INT214_INDEX);
        endWrite_(outer, inner);
    }

    public final int int215() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT215_INDEX);
        int value = v != null ? v._int215 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int215(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int215 = value;
        v.setBit(INT215_INDEX);
        endWrite_(outer, inner);
    }

    public final int int216() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT216_INDEX);
        int value = v != null ? v._int216 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int216(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int216 = value;
        v.setBit(INT216_INDEX);
        endWrite_(outer, inner);
    }

    public final int int217() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT217_INDEX);
        int value = v != null ? v._int217 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int217(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int217 = value;
        v.setBit(INT217_INDEX);
        endWrite_(outer, inner);
    }

    public final int int218() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT218_INDEX);
        int value = v != null ? v._int218 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int218(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int218 = value;
        v.setBit(INT218_INDEX);
        endWrite_(outer, inner);
    }

    public final int int219() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT219_INDEX);
        int value = v != null ? v._int219 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int219(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int219 = value;
        v.setBit(INT219_INDEX);
        endWrite_(outer, inner);
    }

    public final int int220() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT220_INDEX);
        int value = v != null ? v._int220 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int220(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int220 = value;
        v.setBit(INT220_INDEX);
        endWrite_(outer, inner);
    }

    public final int int221() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT221_INDEX);
        int value = v != null ? v._int221 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int221(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int221 = value;
        v.setBit(INT221_INDEX);
        endWrite_(outer, inner);
    }

    public final int int222() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT222_INDEX);
        int value = v != null ? v._int222 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int222(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int222 = value;
        v.setBit(INT222_INDEX);
        endWrite_(outer, inner);
    }

    public final int int223() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT223_INDEX);
        int value = v != null ? v._int223 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int223(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int223 = value;
        v.setBit(INT223_INDEX);
        endWrite_(outer, inner);
    }

    public final int int224() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT224_INDEX);
        int value = v != null ? v._int224 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int224(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int224 = value;
        v.setBit(INT224_INDEX);
        endWrite_(outer, inner);
    }

    public final int int225() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT225_INDEX);
        int value = v != null ? v._int225 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int225(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int225 = value;
        v.setBit(INT225_INDEX);
        endWrite_(outer, inner);
    }

    public final int int226() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT226_INDEX);
        int value = v != null ? v._int226 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int226(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int226 = value;
        v.setBit(INT226_INDEX);
        endWrite_(outer, inner);
    }

    public final int int227() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT227_INDEX);
        int value = v != null ? v._int227 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int227(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int227 = value;
        v.setBit(INT227_INDEX);
        endWrite_(outer, inner);
    }

    public final int int228() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT228_INDEX);
        int value = v != null ? v._int228 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int228(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int228 = value;
        v.setBit(INT228_INDEX);
        endWrite_(outer, inner);
    }

    public final int int229() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT229_INDEX);
        int value = v != null ? v._int229 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int229(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int229 = value;
        v.setBit(INT229_INDEX);
        endWrite_(outer, inner);
    }

    public final int int230() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT230_INDEX);
        int value = v != null ? v._int230 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int230(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int230 = value;
        v.setBit(INT230_INDEX);
        endWrite_(outer, inner);
    }

    public final int int231() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT231_INDEX);
        int value = v != null ? v._int231 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int231(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int231 = value;
        v.setBit(INT231_INDEX);
        endWrite_(outer, inner);
    }

    public final int int232() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT232_INDEX);
        int value = v != null ? v._int232 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int232(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int232 = value;
        v.setBit(INT232_INDEX);
        endWrite_(outer, inner);
    }

    public final int int233() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT233_INDEX);
        int value = v != null ? v._int233 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int233(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int233 = value;
        v.setBit(INT233_INDEX);
        endWrite_(outer, inner);
    }

    public final int int234() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT234_INDEX);
        int value = v != null ? v._int234 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int234(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int234 = value;
        v.setBit(INT234_INDEX);
        endWrite_(outer, inner);
    }

    public final int int235() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT235_INDEX);
        int value = v != null ? v._int235 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int235(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int235 = value;
        v.setBit(INT235_INDEX);
        endWrite_(outer, inner);
    }

    public final int int236() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT236_INDEX);
        int value = v != null ? v._int236 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int236(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int236 = value;
        v.setBit(INT236_INDEX);
        endWrite_(outer, inner);
    }

    public final int int237() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT237_INDEX);
        int value = v != null ? v._int237 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int237(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int237 = value;
        v.setBit(INT237_INDEX);
        endWrite_(outer, inner);
    }

    public final int int238() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT238_INDEX);
        int value = v != null ? v._int238 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int238(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int238 = value;
        v.setBit(INT238_INDEX);
        endWrite_(outer, inner);
    }

    public final int int239() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT239_INDEX);
        int value = v != null ? v._int239 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int239(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int239 = value;
        v.setBit(INT239_INDEX);
        endWrite_(outer, inner);
    }

    public final int int240() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT240_INDEX);
        int value = v != null ? v._int240 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int240(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int240 = value;
        v.setBit(INT240_INDEX);
        endWrite_(outer, inner);
    }

    public final int int241() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT241_INDEX);
        int value = v != null ? v._int241 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int241(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int241 = value;
        v.setBit(INT241_INDEX);
        endWrite_(outer, inner);
    }

    public final int int242() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT242_INDEX);
        int value = v != null ? v._int242 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int242(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int242 = value;
        v.setBit(INT242_INDEX);
        endWrite_(outer, inner);
    }

    public final int int243() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT243_INDEX);
        int value = v != null ? v._int243 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int243(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int243 = value;
        v.setBit(INT243_INDEX);
        endWrite_(outer, inner);
    }

    public final int int244() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT244_INDEX);
        int value = v != null ? v._int244 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int244(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int244 = value;
        v.setBit(INT244_INDEX);
        endWrite_(outer, inner);
    }

    public final int int245() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT245_INDEX);
        int value = v != null ? v._int245 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int245(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int245 = value;
        v.setBit(INT245_INDEX);
        endWrite_(outer, inner);
    }

    public final int int246() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT246_INDEX);
        int value = v != null ? v._int246 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int246(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int246 = value;
        v.setBit(INT246_INDEX);
        endWrite_(outer, inner);
    }

    public final int int247() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT247_INDEX);
        int value = v != null ? v._int247 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int247(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int247 = value;
        v.setBit(INT247_INDEX);
        endWrite_(outer, inner);
    }

    public final int int248() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT248_INDEX);
        int value = v != null ? v._int248 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int248(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int248 = value;
        v.setBit(INT248_INDEX);
        endWrite_(outer, inner);
    }

    public final int int249() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT249_INDEX);
        int value = v != null ? v._int249 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int249(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int249 = value;
        v.setBit(INT249_INDEX);
        endWrite_(outer, inner);
    }

    public final int int250() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT250_INDEX);
        int value = v != null ? v._int250 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int250(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int250 = value;
        v.setBit(INT250_INDEX);
        endWrite_(outer, inner);
    }

    public final int int251() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT251_INDEX);
        int value = v != null ? v._int251 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int251(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int251 = value;
        v.setBit(INT251_INDEX);
        endWrite_(outer, inner);
    }

    public final int int252() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT252_INDEX);
        int value = v != null ? v._int252 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int252(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int252 = value;
        v.setBit(INT252_INDEX);
        endWrite_(outer, inner);
    }

    public final int int253() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT253_INDEX);
        int value = v != null ? v._int253 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int253(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int253 = value;
        v.setBit(INT253_INDEX);
        endWrite_(outer, inner);
    }

    public final int int254() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT254_INDEX);
        int value = v != null ? v._int254 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int254(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int254 = value;
        v.setBit(INT254_INDEX);
        endWrite_(outer, inner);
    }

    public final int int255() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT255_INDEX);
        int value = v != null ? v._int255 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int255(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int255 = value;
        v.setBit(INT255_INDEX);
        endWrite_(outer, inner);
    }

    public final int int256() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT256_INDEX);
        int value = v != null ? v._int256 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int256(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int256 = value;
        v.setBit(INT256_INDEX);
        endWrite_(outer, inner);
    }

    public final int int257() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT257_INDEX);
        int value = v != null ? v._int257 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int257(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int257 = value;
        v.setBit(INT257_INDEX);
        endWrite_(outer, inner);
    }

    public final int int258() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT258_INDEX);
        int value = v != null ? v._int258 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int258(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int258 = value;
        v.setBit(INT258_INDEX);
        endWrite_(outer, inner);
    }

    public final int int259() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT259_INDEX);
        int value = v != null ? v._int259 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int259(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int259 = value;
        v.setBit(INT259_INDEX);
        endWrite_(outer, inner);
    }

    public final int int260() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT260_INDEX);
        int value = v != null ? v._int260 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int260(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int260 = value;
        v.setBit(INT260_INDEX);
        endWrite_(outer, inner);
    }

    public final int int261() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT261_INDEX);
        int value = v != null ? v._int261 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int261(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int261 = value;
        v.setBit(INT261_INDEX);
        endWrite_(outer, inner);
    }

    public final int int262() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT262_INDEX);
        int value = v != null ? v._int262 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int262(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int262 = value;
        v.setBit(INT262_INDEX);
        endWrite_(outer, inner);
    }

    public final int int263() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT263_INDEX);
        int value = v != null ? v._int263 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int263(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int263 = value;
        v.setBit(INT263_INDEX);
        endWrite_(outer, inner);
    }

    public final int int264() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT264_INDEX);
        int value = v != null ? v._int264 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int264(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int264 = value;
        v.setBit(INT264_INDEX);
        endWrite_(outer, inner);
    }

    public final int int265() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT265_INDEX);
        int value = v != null ? v._int265 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int265(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int265 = value;
        v.setBit(INT265_INDEX);
        endWrite_(outer, inner);
    }

    public final int int266() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT266_INDEX);
        int value = v != null ? v._int266 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int266(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int266 = value;
        v.setBit(INT266_INDEX);
        endWrite_(outer, inner);
    }

    public final int int267() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT267_INDEX);
        int value = v != null ? v._int267 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int267(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int267 = value;
        v.setBit(INT267_INDEX);
        endWrite_(outer, inner);
    }

    public final int int268() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT268_INDEX);
        int value = v != null ? v._int268 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int268(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int268 = value;
        v.setBit(INT268_INDEX);
        endWrite_(outer, inner);
    }

    public final int int269() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT269_INDEX);
        int value = v != null ? v._int269 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int269(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int269 = value;
        v.setBit(INT269_INDEX);
        endWrite_(outer, inner);
    }

    public final int int270() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT270_INDEX);
        int value = v != null ? v._int270 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int270(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int270 = value;
        v.setBit(INT270_INDEX);
        endWrite_(outer, inner);
    }

    public final int int271() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT271_INDEX);
        int value = v != null ? v._int271 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int271(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int271 = value;
        v.setBit(INT271_INDEX);
        endWrite_(outer, inner);
    }

    public final int int272() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT272_INDEX);
        int value = v != null ? v._int272 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int272(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int272 = value;
        v.setBit(INT272_INDEX);
        endWrite_(outer, inner);
    }

    public final int int273() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT273_INDEX);
        int value = v != null ? v._int273 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int273(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int273 = value;
        v.setBit(INT273_INDEX);
        endWrite_(outer, inner);
    }

    public final int int274() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT274_INDEX);
        int value = v != null ? v._int274 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int274(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int274 = value;
        v.setBit(INT274_INDEX);
        endWrite_(outer, inner);
    }

    public final int int275() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT275_INDEX);
        int value = v != null ? v._int275 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int275(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int275 = value;
        v.setBit(INT275_INDEX);
        endWrite_(outer, inner);
    }

    public final int int276() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT276_INDEX);
        int value = v != null ? v._int276 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int276(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int276 = value;
        v.setBit(INT276_INDEX);
        endWrite_(outer, inner);
    }

    public final int int277() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT277_INDEX);
        int value = v != null ? v._int277 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int277(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int277 = value;
        v.setBit(INT277_INDEX);
        endWrite_(outer, inner);
    }

    public final int int278() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT278_INDEX);
        int value = v != null ? v._int278 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int278(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int278 = value;
        v.setBit(INT278_INDEX);
        endWrite_(outer, inner);
    }

    public final int int279() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT279_INDEX);
        int value = v != null ? v._int279 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int279(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int279 = value;
        v.setBit(INT279_INDEX);
        endWrite_(outer, inner);
    }

    public final int int280() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT280_INDEX);
        int value = v != null ? v._int280 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int280(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int280 = value;
        v.setBit(INT280_INDEX);
        endWrite_(outer, inner);
    }

    public final int int281() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT281_INDEX);
        int value = v != null ? v._int281 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int281(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int281 = value;
        v.setBit(INT281_INDEX);
        endWrite_(outer, inner);
    }

    public final int int282() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT282_INDEX);
        int value = v != null ? v._int282 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int282(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int282 = value;
        v.setBit(INT282_INDEX);
        endWrite_(outer, inner);
    }

    public final int int283() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT283_INDEX);
        int value = v != null ? v._int283 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int283(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int283 = value;
        v.setBit(INT283_INDEX);
        endWrite_(outer, inner);
    }

    public final int int284() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT284_INDEX);
        int value = v != null ? v._int284 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int284(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int284 = value;
        v.setBit(INT284_INDEX);
        endWrite_(outer, inner);
    }

    public final int int285() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT285_INDEX);
        int value = v != null ? v._int285 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int285(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int285 = value;
        v.setBit(INT285_INDEX);
        endWrite_(outer, inner);
    }

    public final int int286() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT286_INDEX);
        int value = v != null ? v._int286 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int286(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int286 = value;
        v.setBit(INT286_INDEX);
        endWrite_(outer, inner);
    }

    public final int int287() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT287_INDEX);
        int value = v != null ? v._int287 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int287(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int287 = value;
        v.setBit(INT287_INDEX);
        endWrite_(outer, inner);
    }

    public final int int288() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT288_INDEX);
        int value = v != null ? v._int288 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int288(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int288 = value;
        v.setBit(INT288_INDEX);
        endWrite_(outer, inner);
    }

    public final int int289() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT289_INDEX);
        int value = v != null ? v._int289 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int289(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int289 = value;
        v.setBit(INT289_INDEX);
        endWrite_(outer, inner);
    }

    public final int int290() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT290_INDEX);
        int value = v != null ? v._int290 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int290(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int290 = value;
        v.setBit(INT290_INDEX);
        endWrite_(outer, inner);
    }

    public final int int291() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT291_INDEX);
        int value = v != null ? v._int291 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int291(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int291 = value;
        v.setBit(INT291_INDEX);
        endWrite_(outer, inner);
    }

    public final int int292() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT292_INDEX);
        int value = v != null ? v._int292 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int292(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int292 = value;
        v.setBit(INT292_INDEX);
        endWrite_(outer, inner);
    }

    public final int int293() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT293_INDEX);
        int value = v != null ? v._int293 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int293(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int293 = value;
        v.setBit(INT293_INDEX);
        endWrite_(outer, inner);
    }

    public final int int294() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT294_INDEX);
        int value = v != null ? v._int294 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int294(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int294 = value;
        v.setBit(INT294_INDEX);
        endWrite_(outer, inner);
    }

    public final int int295() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT295_INDEX);
        int value = v != null ? v._int295 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int295(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int295 = value;
        v.setBit(INT295_INDEX);
        endWrite_(outer, inner);
    }

    public final int int296() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT296_INDEX);
        int value = v != null ? v._int296 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int296(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int296 = value;
        v.setBit(INT296_INDEX);
        endWrite_(outer, inner);
    }

    public final int int297() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT297_INDEX);
        int value = v != null ? v._int297 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int297(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int297 = value;
        v.setBit(INT297_INDEX);
        endWrite_(outer, inner);
    }

    public final int int298() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT298_INDEX);
        int value = v != null ? v._int298 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int298(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int298 = value;
        v.setBit(INT298_INDEX);
        endWrite_(outer, inner);
    }

    public final int int299() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersionN_(inner, INT299_INDEX);
        int value = v != null ? v._int299 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int299(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int299 = value;
        v.setBit(INT299_INDEX);
        endWrite_(outer, inner);
    }

    public static final int INT0_INDEX = 0;

    public static final java.lang.String INT0_NAME = "int0";

    public static final org.objectfabric.TType INT0_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT1_INDEX = 1;

    public static final java.lang.String INT1_NAME = "int1";

    public static final org.objectfabric.TType INT1_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT2_INDEX = 2;

    public static final java.lang.String INT2_NAME = "int2";

    public static final org.objectfabric.TType INT2_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT3_INDEX = 3;

    public static final java.lang.String INT3_NAME = "int3";

    public static final org.objectfabric.TType INT3_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT4_INDEX = 4;

    public static final java.lang.String INT4_NAME = "int4";

    public static final org.objectfabric.TType INT4_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT5_INDEX = 5;

    public static final java.lang.String INT5_NAME = "int5";

    public static final org.objectfabric.TType INT5_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT6_INDEX = 6;

    public static final java.lang.String INT6_NAME = "int6";

    public static final org.objectfabric.TType INT6_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT7_INDEX = 7;

    public static final java.lang.String INT7_NAME = "int7";

    public static final org.objectfabric.TType INT7_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT8_INDEX = 8;

    public static final java.lang.String INT8_NAME = "int8";

    public static final org.objectfabric.TType INT8_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT9_INDEX = 9;

    public static final java.lang.String INT9_NAME = "int9";

    public static final org.objectfabric.TType INT9_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT10_INDEX = 10;

    public static final java.lang.String INT10_NAME = "int10";

    public static final org.objectfabric.TType INT10_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT11_INDEX = 11;

    public static final java.lang.String INT11_NAME = "int11";

    public static final org.objectfabric.TType INT11_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT12_INDEX = 12;

    public static final java.lang.String INT12_NAME = "int12";

    public static final org.objectfabric.TType INT12_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT13_INDEX = 13;

    public static final java.lang.String INT13_NAME = "int13";

    public static final org.objectfabric.TType INT13_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT14_INDEX = 14;

    public static final java.lang.String INT14_NAME = "int14";

    public static final org.objectfabric.TType INT14_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT15_INDEX = 15;

    public static final java.lang.String INT15_NAME = "int15";

    public static final org.objectfabric.TType INT15_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT16_INDEX = 16;

    public static final java.lang.String INT16_NAME = "int16";

    public static final org.objectfabric.TType INT16_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT17_INDEX = 17;

    public static final java.lang.String INT17_NAME = "int17";

    public static final org.objectfabric.TType INT17_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT18_INDEX = 18;

    public static final java.lang.String INT18_NAME = "int18";

    public static final org.objectfabric.TType INT18_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT19_INDEX = 19;

    public static final java.lang.String INT19_NAME = "int19";

    public static final org.objectfabric.TType INT19_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT20_INDEX = 20;

    public static final java.lang.String INT20_NAME = "int20";

    public static final org.objectfabric.TType INT20_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT21_INDEX = 21;

    public static final java.lang.String INT21_NAME = "int21";

    public static final org.objectfabric.TType INT21_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT22_INDEX = 22;

    public static final java.lang.String INT22_NAME = "int22";

    public static final org.objectfabric.TType INT22_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT23_INDEX = 23;

    public static final java.lang.String INT23_NAME = "int23";

    public static final org.objectfabric.TType INT23_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT24_INDEX = 24;

    public static final java.lang.String INT24_NAME = "int24";

    public static final org.objectfabric.TType INT24_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT25_INDEX = 25;

    public static final java.lang.String INT25_NAME = "int25";

    public static final org.objectfabric.TType INT25_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT26_INDEX = 26;

    public static final java.lang.String INT26_NAME = "int26";

    public static final org.objectfabric.TType INT26_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT27_INDEX = 27;

    public static final java.lang.String INT27_NAME = "int27";

    public static final org.objectfabric.TType INT27_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT28_INDEX = 28;

    public static final java.lang.String INT28_NAME = "int28";

    public static final org.objectfabric.TType INT28_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT29_INDEX = 29;

    public static final java.lang.String INT29_NAME = "int29";

    public static final org.objectfabric.TType INT29_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT30_INDEX = 30;

    public static final java.lang.String INT30_NAME = "int30";

    public static final org.objectfabric.TType INT30_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT31_INDEX = 31;

    public static final java.lang.String INT31_NAME = "int31";

    public static final org.objectfabric.TType INT31_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT32_INDEX = 32;

    public static final java.lang.String INT32_NAME = "int32";

    public static final org.objectfabric.TType INT32_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT33_INDEX = 33;

    public static final java.lang.String INT33_NAME = "int33";

    public static final org.objectfabric.TType INT33_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT34_INDEX = 34;

    public static final java.lang.String INT34_NAME = "int34";

    public static final org.objectfabric.TType INT34_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT35_INDEX = 35;

    public static final java.lang.String INT35_NAME = "int35";

    public static final org.objectfabric.TType INT35_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT36_INDEX = 36;

    public static final java.lang.String INT36_NAME = "int36";

    public static final org.objectfabric.TType INT36_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT37_INDEX = 37;

    public static final java.lang.String INT37_NAME = "int37";

    public static final org.objectfabric.TType INT37_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT38_INDEX = 38;

    public static final java.lang.String INT38_NAME = "int38";

    public static final org.objectfabric.TType INT38_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT39_INDEX = 39;

    public static final java.lang.String INT39_NAME = "int39";

    public static final org.objectfabric.TType INT39_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT40_INDEX = 40;

    public static final java.lang.String INT40_NAME = "int40";

    public static final org.objectfabric.TType INT40_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT41_INDEX = 41;

    public static final java.lang.String INT41_NAME = "int41";

    public static final org.objectfabric.TType INT41_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT42_INDEX = 42;

    public static final java.lang.String INT42_NAME = "int42";

    public static final org.objectfabric.TType INT42_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT43_INDEX = 43;

    public static final java.lang.String INT43_NAME = "int43";

    public static final org.objectfabric.TType INT43_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT44_INDEX = 44;

    public static final java.lang.String INT44_NAME = "int44";

    public static final org.objectfabric.TType INT44_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT45_INDEX = 45;

    public static final java.lang.String INT45_NAME = "int45";

    public static final org.objectfabric.TType INT45_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT46_INDEX = 46;

    public static final java.lang.String INT46_NAME = "int46";

    public static final org.objectfabric.TType INT46_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT47_INDEX = 47;

    public static final java.lang.String INT47_NAME = "int47";

    public static final org.objectfabric.TType INT47_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT48_INDEX = 48;

    public static final java.lang.String INT48_NAME = "int48";

    public static final org.objectfabric.TType INT48_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT49_INDEX = 49;

    public static final java.lang.String INT49_NAME = "int49";

    public static final org.objectfabric.TType INT49_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT50_INDEX = 50;

    public static final java.lang.String INT50_NAME = "int50";

    public static final org.objectfabric.TType INT50_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT51_INDEX = 51;

    public static final java.lang.String INT51_NAME = "int51";

    public static final org.objectfabric.TType INT51_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT52_INDEX = 52;

    public static final java.lang.String INT52_NAME = "int52";

    public static final org.objectfabric.TType INT52_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT53_INDEX = 53;

    public static final java.lang.String INT53_NAME = "int53";

    public static final org.objectfabric.TType INT53_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT54_INDEX = 54;

    public static final java.lang.String INT54_NAME = "int54";

    public static final org.objectfabric.TType INT54_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT55_INDEX = 55;

    public static final java.lang.String INT55_NAME = "int55";

    public static final org.objectfabric.TType INT55_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT56_INDEX = 56;

    public static final java.lang.String INT56_NAME = "int56";

    public static final org.objectfabric.TType INT56_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT57_INDEX = 57;

    public static final java.lang.String INT57_NAME = "int57";

    public static final org.objectfabric.TType INT57_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT58_INDEX = 58;

    public static final java.lang.String INT58_NAME = "int58";

    public static final org.objectfabric.TType INT58_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT59_INDEX = 59;

    public static final java.lang.String INT59_NAME = "int59";

    public static final org.objectfabric.TType INT59_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT60_INDEX = 60;

    public static final java.lang.String INT60_NAME = "int60";

    public static final org.objectfabric.TType INT60_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT61_INDEX = 61;

    public static final java.lang.String INT61_NAME = "int61";

    public static final org.objectfabric.TType INT61_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT62_INDEX = 62;

    public static final java.lang.String INT62_NAME = "int62";

    public static final org.objectfabric.TType INT62_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT63_INDEX = 63;

    public static final java.lang.String INT63_NAME = "int63";

    public static final org.objectfabric.TType INT63_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT64_INDEX = 64;

    public static final java.lang.String INT64_NAME = "int64";

    public static final org.objectfabric.TType INT64_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT65_INDEX = 65;

    public static final java.lang.String INT65_NAME = "int65";

    public static final org.objectfabric.TType INT65_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT66_INDEX = 66;

    public static final java.lang.String INT66_NAME = "int66";

    public static final org.objectfabric.TType INT66_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT67_INDEX = 67;

    public static final java.lang.String INT67_NAME = "int67";

    public static final org.objectfabric.TType INT67_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT68_INDEX = 68;

    public static final java.lang.String INT68_NAME = "int68";

    public static final org.objectfabric.TType INT68_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT69_INDEX = 69;

    public static final java.lang.String INT69_NAME = "int69";

    public static final org.objectfabric.TType INT69_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT70_INDEX = 70;

    public static final java.lang.String INT70_NAME = "int70";

    public static final org.objectfabric.TType INT70_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT71_INDEX = 71;

    public static final java.lang.String INT71_NAME = "int71";

    public static final org.objectfabric.TType INT71_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT72_INDEX = 72;

    public static final java.lang.String INT72_NAME = "int72";

    public static final org.objectfabric.TType INT72_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT73_INDEX = 73;

    public static final java.lang.String INT73_NAME = "int73";

    public static final org.objectfabric.TType INT73_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT74_INDEX = 74;

    public static final java.lang.String INT74_NAME = "int74";

    public static final org.objectfabric.TType INT74_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT75_INDEX = 75;

    public static final java.lang.String INT75_NAME = "int75";

    public static final org.objectfabric.TType INT75_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT76_INDEX = 76;

    public static final java.lang.String INT76_NAME = "int76";

    public static final org.objectfabric.TType INT76_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT77_INDEX = 77;

    public static final java.lang.String INT77_NAME = "int77";

    public static final org.objectfabric.TType INT77_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT78_INDEX = 78;

    public static final java.lang.String INT78_NAME = "int78";

    public static final org.objectfabric.TType INT78_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT79_INDEX = 79;

    public static final java.lang.String INT79_NAME = "int79";

    public static final org.objectfabric.TType INT79_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT80_INDEX = 80;

    public static final java.lang.String INT80_NAME = "int80";

    public static final org.objectfabric.TType INT80_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT81_INDEX = 81;

    public static final java.lang.String INT81_NAME = "int81";

    public static final org.objectfabric.TType INT81_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT82_INDEX = 82;

    public static final java.lang.String INT82_NAME = "int82";

    public static final org.objectfabric.TType INT82_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT83_INDEX = 83;

    public static final java.lang.String INT83_NAME = "int83";

    public static final org.objectfabric.TType INT83_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT84_INDEX = 84;

    public static final java.lang.String INT84_NAME = "int84";

    public static final org.objectfabric.TType INT84_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT85_INDEX = 85;

    public static final java.lang.String INT85_NAME = "int85";

    public static final org.objectfabric.TType INT85_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT86_INDEX = 86;

    public static final java.lang.String INT86_NAME = "int86";

    public static final org.objectfabric.TType INT86_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT87_INDEX = 87;

    public static final java.lang.String INT87_NAME = "int87";

    public static final org.objectfabric.TType INT87_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT88_INDEX = 88;

    public static final java.lang.String INT88_NAME = "int88";

    public static final org.objectfabric.TType INT88_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT89_INDEX = 89;

    public static final java.lang.String INT89_NAME = "int89";

    public static final org.objectfabric.TType INT89_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT90_INDEX = 90;

    public static final java.lang.String INT90_NAME = "int90";

    public static final org.objectfabric.TType INT90_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT91_INDEX = 91;

    public static final java.lang.String INT91_NAME = "int91";

    public static final org.objectfabric.TType INT91_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT92_INDEX = 92;

    public static final java.lang.String INT92_NAME = "int92";

    public static final org.objectfabric.TType INT92_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT93_INDEX = 93;

    public static final java.lang.String INT93_NAME = "int93";

    public static final org.objectfabric.TType INT93_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT94_INDEX = 94;

    public static final java.lang.String INT94_NAME = "int94";

    public static final org.objectfabric.TType INT94_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT95_INDEX = 95;

    public static final java.lang.String INT95_NAME = "int95";

    public static final org.objectfabric.TType INT95_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT96_INDEX = 96;

    public static final java.lang.String INT96_NAME = "int96";

    public static final org.objectfabric.TType INT96_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT97_INDEX = 97;

    public static final java.lang.String INT97_NAME = "int97";

    public static final org.objectfabric.TType INT97_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT98_INDEX = 98;

    public static final java.lang.String INT98_NAME = "int98";

    public static final org.objectfabric.TType INT98_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT99_INDEX = 99;

    public static final java.lang.String INT99_NAME = "int99";

    public static final org.objectfabric.TType INT99_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT100_INDEX = 100;

    public static final java.lang.String INT100_NAME = "int100";

    public static final org.objectfabric.TType INT100_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT101_INDEX = 101;

    public static final java.lang.String INT101_NAME = "int101";

    public static final org.objectfabric.TType INT101_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT102_INDEX = 102;

    public static final java.lang.String INT102_NAME = "int102";

    public static final org.objectfabric.TType INT102_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT103_INDEX = 103;

    public static final java.lang.String INT103_NAME = "int103";

    public static final org.objectfabric.TType INT103_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT104_INDEX = 104;

    public static final java.lang.String INT104_NAME = "int104";

    public static final org.objectfabric.TType INT104_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT105_INDEX = 105;

    public static final java.lang.String INT105_NAME = "int105";

    public static final org.objectfabric.TType INT105_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT106_INDEX = 106;

    public static final java.lang.String INT106_NAME = "int106";

    public static final org.objectfabric.TType INT106_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT107_INDEX = 107;

    public static final java.lang.String INT107_NAME = "int107";

    public static final org.objectfabric.TType INT107_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT108_INDEX = 108;

    public static final java.lang.String INT108_NAME = "int108";

    public static final org.objectfabric.TType INT108_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT109_INDEX = 109;

    public static final java.lang.String INT109_NAME = "int109";

    public static final org.objectfabric.TType INT109_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT110_INDEX = 110;

    public static final java.lang.String INT110_NAME = "int110";

    public static final org.objectfabric.TType INT110_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT111_INDEX = 111;

    public static final java.lang.String INT111_NAME = "int111";

    public static final org.objectfabric.TType INT111_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT112_INDEX = 112;

    public static final java.lang.String INT112_NAME = "int112";

    public static final org.objectfabric.TType INT112_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT113_INDEX = 113;

    public static final java.lang.String INT113_NAME = "int113";

    public static final org.objectfabric.TType INT113_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT114_INDEX = 114;

    public static final java.lang.String INT114_NAME = "int114";

    public static final org.objectfabric.TType INT114_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT115_INDEX = 115;

    public static final java.lang.String INT115_NAME = "int115";

    public static final org.objectfabric.TType INT115_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT116_INDEX = 116;

    public static final java.lang.String INT116_NAME = "int116";

    public static final org.objectfabric.TType INT116_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT117_INDEX = 117;

    public static final java.lang.String INT117_NAME = "int117";

    public static final org.objectfabric.TType INT117_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT118_INDEX = 118;

    public static final java.lang.String INT118_NAME = "int118";

    public static final org.objectfabric.TType INT118_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT119_INDEX = 119;

    public static final java.lang.String INT119_NAME = "int119";

    public static final org.objectfabric.TType INT119_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT120_INDEX = 120;

    public static final java.lang.String INT120_NAME = "int120";

    public static final org.objectfabric.TType INT120_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT121_INDEX = 121;

    public static final java.lang.String INT121_NAME = "int121";

    public static final org.objectfabric.TType INT121_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT122_INDEX = 122;

    public static final java.lang.String INT122_NAME = "int122";

    public static final org.objectfabric.TType INT122_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT123_INDEX = 123;

    public static final java.lang.String INT123_NAME = "int123";

    public static final org.objectfabric.TType INT123_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT124_INDEX = 124;

    public static final java.lang.String INT124_NAME = "int124";

    public static final org.objectfabric.TType INT124_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT125_INDEX = 125;

    public static final java.lang.String INT125_NAME = "int125";

    public static final org.objectfabric.TType INT125_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT126_INDEX = 126;

    public static final java.lang.String INT126_NAME = "int126";

    public static final org.objectfabric.TType INT126_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT127_INDEX = 127;

    public static final java.lang.String INT127_NAME = "int127";

    public static final org.objectfabric.TType INT127_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT128_INDEX = 128;

    public static final java.lang.String INT128_NAME = "int128";

    public static final org.objectfabric.TType INT128_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT129_INDEX = 129;

    public static final java.lang.String INT129_NAME = "int129";

    public static final org.objectfabric.TType INT129_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT130_INDEX = 130;

    public static final java.lang.String INT130_NAME = "int130";

    public static final org.objectfabric.TType INT130_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT131_INDEX = 131;

    public static final java.lang.String INT131_NAME = "int131";

    public static final org.objectfabric.TType INT131_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT132_INDEX = 132;

    public static final java.lang.String INT132_NAME = "int132";

    public static final org.objectfabric.TType INT132_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT133_INDEX = 133;

    public static final java.lang.String INT133_NAME = "int133";

    public static final org.objectfabric.TType INT133_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT134_INDEX = 134;

    public static final java.lang.String INT134_NAME = "int134";

    public static final org.objectfabric.TType INT134_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT135_INDEX = 135;

    public static final java.lang.String INT135_NAME = "int135";

    public static final org.objectfabric.TType INT135_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT136_INDEX = 136;

    public static final java.lang.String INT136_NAME = "int136";

    public static final org.objectfabric.TType INT136_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT137_INDEX = 137;

    public static final java.lang.String INT137_NAME = "int137";

    public static final org.objectfabric.TType INT137_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT138_INDEX = 138;

    public static final java.lang.String INT138_NAME = "int138";

    public static final org.objectfabric.TType INT138_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT139_INDEX = 139;

    public static final java.lang.String INT139_NAME = "int139";

    public static final org.objectfabric.TType INT139_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT140_INDEX = 140;

    public static final java.lang.String INT140_NAME = "int140";

    public static final org.objectfabric.TType INT140_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT141_INDEX = 141;

    public static final java.lang.String INT141_NAME = "int141";

    public static final org.objectfabric.TType INT141_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT142_INDEX = 142;

    public static final java.lang.String INT142_NAME = "int142";

    public static final org.objectfabric.TType INT142_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT143_INDEX = 143;

    public static final java.lang.String INT143_NAME = "int143";

    public static final org.objectfabric.TType INT143_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT144_INDEX = 144;

    public static final java.lang.String INT144_NAME = "int144";

    public static final org.objectfabric.TType INT144_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT145_INDEX = 145;

    public static final java.lang.String INT145_NAME = "int145";

    public static final org.objectfabric.TType INT145_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT146_INDEX = 146;

    public static final java.lang.String INT146_NAME = "int146";

    public static final org.objectfabric.TType INT146_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT147_INDEX = 147;

    public static final java.lang.String INT147_NAME = "int147";

    public static final org.objectfabric.TType INT147_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT148_INDEX = 148;

    public static final java.lang.String INT148_NAME = "int148";

    public static final org.objectfabric.TType INT148_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT149_INDEX = 149;

    public static final java.lang.String INT149_NAME = "int149";

    public static final org.objectfabric.TType INT149_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT150_INDEX = 150;

    public static final java.lang.String INT150_NAME = "int150";

    public static final org.objectfabric.TType INT150_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT151_INDEX = 151;

    public static final java.lang.String INT151_NAME = "int151";

    public static final org.objectfabric.TType INT151_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT152_INDEX = 152;

    public static final java.lang.String INT152_NAME = "int152";

    public static final org.objectfabric.TType INT152_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT153_INDEX = 153;

    public static final java.lang.String INT153_NAME = "int153";

    public static final org.objectfabric.TType INT153_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT154_INDEX = 154;

    public static final java.lang.String INT154_NAME = "int154";

    public static final org.objectfabric.TType INT154_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT155_INDEX = 155;

    public static final java.lang.String INT155_NAME = "int155";

    public static final org.objectfabric.TType INT155_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT156_INDEX = 156;

    public static final java.lang.String INT156_NAME = "int156";

    public static final org.objectfabric.TType INT156_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT157_INDEX = 157;

    public static final java.lang.String INT157_NAME = "int157";

    public static final org.objectfabric.TType INT157_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT158_INDEX = 158;

    public static final java.lang.String INT158_NAME = "int158";

    public static final org.objectfabric.TType INT158_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT159_INDEX = 159;

    public static final java.lang.String INT159_NAME = "int159";

    public static final org.objectfabric.TType INT159_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT160_INDEX = 160;

    public static final java.lang.String INT160_NAME = "int160";

    public static final org.objectfabric.TType INT160_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT161_INDEX = 161;

    public static final java.lang.String INT161_NAME = "int161";

    public static final org.objectfabric.TType INT161_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT162_INDEX = 162;

    public static final java.lang.String INT162_NAME = "int162";

    public static final org.objectfabric.TType INT162_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT163_INDEX = 163;

    public static final java.lang.String INT163_NAME = "int163";

    public static final org.objectfabric.TType INT163_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT164_INDEX = 164;

    public static final java.lang.String INT164_NAME = "int164";

    public static final org.objectfabric.TType INT164_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT165_INDEX = 165;

    public static final java.lang.String INT165_NAME = "int165";

    public static final org.objectfabric.TType INT165_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT166_INDEX = 166;

    public static final java.lang.String INT166_NAME = "int166";

    public static final org.objectfabric.TType INT166_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT167_INDEX = 167;

    public static final java.lang.String INT167_NAME = "int167";

    public static final org.objectfabric.TType INT167_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT168_INDEX = 168;

    public static final java.lang.String INT168_NAME = "int168";

    public static final org.objectfabric.TType INT168_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT169_INDEX = 169;

    public static final java.lang.String INT169_NAME = "int169";

    public static final org.objectfabric.TType INT169_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT170_INDEX = 170;

    public static final java.lang.String INT170_NAME = "int170";

    public static final org.objectfabric.TType INT170_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT171_INDEX = 171;

    public static final java.lang.String INT171_NAME = "int171";

    public static final org.objectfabric.TType INT171_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT172_INDEX = 172;

    public static final java.lang.String INT172_NAME = "int172";

    public static final org.objectfabric.TType INT172_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT173_INDEX = 173;

    public static final java.lang.String INT173_NAME = "int173";

    public static final org.objectfabric.TType INT173_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT174_INDEX = 174;

    public static final java.lang.String INT174_NAME = "int174";

    public static final org.objectfabric.TType INT174_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT175_INDEX = 175;

    public static final java.lang.String INT175_NAME = "int175";

    public static final org.objectfabric.TType INT175_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT176_INDEX = 176;

    public static final java.lang.String INT176_NAME = "int176";

    public static final org.objectfabric.TType INT176_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT177_INDEX = 177;

    public static final java.lang.String INT177_NAME = "int177";

    public static final org.objectfabric.TType INT177_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT178_INDEX = 178;

    public static final java.lang.String INT178_NAME = "int178";

    public static final org.objectfabric.TType INT178_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT179_INDEX = 179;

    public static final java.lang.String INT179_NAME = "int179";

    public static final org.objectfabric.TType INT179_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT180_INDEX = 180;

    public static final java.lang.String INT180_NAME = "int180";

    public static final org.objectfabric.TType INT180_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT181_INDEX = 181;

    public static final java.lang.String INT181_NAME = "int181";

    public static final org.objectfabric.TType INT181_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT182_INDEX = 182;

    public static final java.lang.String INT182_NAME = "int182";

    public static final org.objectfabric.TType INT182_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT183_INDEX = 183;

    public static final java.lang.String INT183_NAME = "int183";

    public static final org.objectfabric.TType INT183_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT184_INDEX = 184;

    public static final java.lang.String INT184_NAME = "int184";

    public static final org.objectfabric.TType INT184_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT185_INDEX = 185;

    public static final java.lang.String INT185_NAME = "int185";

    public static final org.objectfabric.TType INT185_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT186_INDEX = 186;

    public static final java.lang.String INT186_NAME = "int186";

    public static final org.objectfabric.TType INT186_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT187_INDEX = 187;

    public static final java.lang.String INT187_NAME = "int187";

    public static final org.objectfabric.TType INT187_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT188_INDEX = 188;

    public static final java.lang.String INT188_NAME = "int188";

    public static final org.objectfabric.TType INT188_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT189_INDEX = 189;

    public static final java.lang.String INT189_NAME = "int189";

    public static final org.objectfabric.TType INT189_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT190_INDEX = 190;

    public static final java.lang.String INT190_NAME = "int190";

    public static final org.objectfabric.TType INT190_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT191_INDEX = 191;

    public static final java.lang.String INT191_NAME = "int191";

    public static final org.objectfabric.TType INT191_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT192_INDEX = 192;

    public static final java.lang.String INT192_NAME = "int192";

    public static final org.objectfabric.TType INT192_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT193_INDEX = 193;

    public static final java.lang.String INT193_NAME = "int193";

    public static final org.objectfabric.TType INT193_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT194_INDEX = 194;

    public static final java.lang.String INT194_NAME = "int194";

    public static final org.objectfabric.TType INT194_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT195_INDEX = 195;

    public static final java.lang.String INT195_NAME = "int195";

    public static final org.objectfabric.TType INT195_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT196_INDEX = 196;

    public static final java.lang.String INT196_NAME = "int196";

    public static final org.objectfabric.TType INT196_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT197_INDEX = 197;

    public static final java.lang.String INT197_NAME = "int197";

    public static final org.objectfabric.TType INT197_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT198_INDEX = 198;

    public static final java.lang.String INT198_NAME = "int198";

    public static final org.objectfabric.TType INT198_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT199_INDEX = 199;

    public static final java.lang.String INT199_NAME = "int199";

    public static final org.objectfabric.TType INT199_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT200_INDEX = 200;

    public static final java.lang.String INT200_NAME = "int200";

    public static final org.objectfabric.TType INT200_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT201_INDEX = 201;

    public static final java.lang.String INT201_NAME = "int201";

    public static final org.objectfabric.TType INT201_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT202_INDEX = 202;

    public static final java.lang.String INT202_NAME = "int202";

    public static final org.objectfabric.TType INT202_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT203_INDEX = 203;

    public static final java.lang.String INT203_NAME = "int203";

    public static final org.objectfabric.TType INT203_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT204_INDEX = 204;

    public static final java.lang.String INT204_NAME = "int204";

    public static final org.objectfabric.TType INT204_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT205_INDEX = 205;

    public static final java.lang.String INT205_NAME = "int205";

    public static final org.objectfabric.TType INT205_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT206_INDEX = 206;

    public static final java.lang.String INT206_NAME = "int206";

    public static final org.objectfabric.TType INT206_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT207_INDEX = 207;

    public static final java.lang.String INT207_NAME = "int207";

    public static final org.objectfabric.TType INT207_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT208_INDEX = 208;

    public static final java.lang.String INT208_NAME = "int208";

    public static final org.objectfabric.TType INT208_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT209_INDEX = 209;

    public static final java.lang.String INT209_NAME = "int209";

    public static final org.objectfabric.TType INT209_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT210_INDEX = 210;

    public static final java.lang.String INT210_NAME = "int210";

    public static final org.objectfabric.TType INT210_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT211_INDEX = 211;

    public static final java.lang.String INT211_NAME = "int211";

    public static final org.objectfabric.TType INT211_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT212_INDEX = 212;

    public static final java.lang.String INT212_NAME = "int212";

    public static final org.objectfabric.TType INT212_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT213_INDEX = 213;

    public static final java.lang.String INT213_NAME = "int213";

    public static final org.objectfabric.TType INT213_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT214_INDEX = 214;

    public static final java.lang.String INT214_NAME = "int214";

    public static final org.objectfabric.TType INT214_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT215_INDEX = 215;

    public static final java.lang.String INT215_NAME = "int215";

    public static final org.objectfabric.TType INT215_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT216_INDEX = 216;

    public static final java.lang.String INT216_NAME = "int216";

    public static final org.objectfabric.TType INT216_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT217_INDEX = 217;

    public static final java.lang.String INT217_NAME = "int217";

    public static final org.objectfabric.TType INT217_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT218_INDEX = 218;

    public static final java.lang.String INT218_NAME = "int218";

    public static final org.objectfabric.TType INT218_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT219_INDEX = 219;

    public static final java.lang.String INT219_NAME = "int219";

    public static final org.objectfabric.TType INT219_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT220_INDEX = 220;

    public static final java.lang.String INT220_NAME = "int220";

    public static final org.objectfabric.TType INT220_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT221_INDEX = 221;

    public static final java.lang.String INT221_NAME = "int221";

    public static final org.objectfabric.TType INT221_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT222_INDEX = 222;

    public static final java.lang.String INT222_NAME = "int222";

    public static final org.objectfabric.TType INT222_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT223_INDEX = 223;

    public static final java.lang.String INT223_NAME = "int223";

    public static final org.objectfabric.TType INT223_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT224_INDEX = 224;

    public static final java.lang.String INT224_NAME = "int224";

    public static final org.objectfabric.TType INT224_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT225_INDEX = 225;

    public static final java.lang.String INT225_NAME = "int225";

    public static final org.objectfabric.TType INT225_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT226_INDEX = 226;

    public static final java.lang.String INT226_NAME = "int226";

    public static final org.objectfabric.TType INT226_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT227_INDEX = 227;

    public static final java.lang.String INT227_NAME = "int227";

    public static final org.objectfabric.TType INT227_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT228_INDEX = 228;

    public static final java.lang.String INT228_NAME = "int228";

    public static final org.objectfabric.TType INT228_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT229_INDEX = 229;

    public static final java.lang.String INT229_NAME = "int229";

    public static final org.objectfabric.TType INT229_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT230_INDEX = 230;

    public static final java.lang.String INT230_NAME = "int230";

    public static final org.objectfabric.TType INT230_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT231_INDEX = 231;

    public static final java.lang.String INT231_NAME = "int231";

    public static final org.objectfabric.TType INT231_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT232_INDEX = 232;

    public static final java.lang.String INT232_NAME = "int232";

    public static final org.objectfabric.TType INT232_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT233_INDEX = 233;

    public static final java.lang.String INT233_NAME = "int233";

    public static final org.objectfabric.TType INT233_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT234_INDEX = 234;

    public static final java.lang.String INT234_NAME = "int234";

    public static final org.objectfabric.TType INT234_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT235_INDEX = 235;

    public static final java.lang.String INT235_NAME = "int235";

    public static final org.objectfabric.TType INT235_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT236_INDEX = 236;

    public static final java.lang.String INT236_NAME = "int236";

    public static final org.objectfabric.TType INT236_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT237_INDEX = 237;

    public static final java.lang.String INT237_NAME = "int237";

    public static final org.objectfabric.TType INT237_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT238_INDEX = 238;

    public static final java.lang.String INT238_NAME = "int238";

    public static final org.objectfabric.TType INT238_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT239_INDEX = 239;

    public static final java.lang.String INT239_NAME = "int239";

    public static final org.objectfabric.TType INT239_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT240_INDEX = 240;

    public static final java.lang.String INT240_NAME = "int240";

    public static final org.objectfabric.TType INT240_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT241_INDEX = 241;

    public static final java.lang.String INT241_NAME = "int241";

    public static final org.objectfabric.TType INT241_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT242_INDEX = 242;

    public static final java.lang.String INT242_NAME = "int242";

    public static final org.objectfabric.TType INT242_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT243_INDEX = 243;

    public static final java.lang.String INT243_NAME = "int243";

    public static final org.objectfabric.TType INT243_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT244_INDEX = 244;

    public static final java.lang.String INT244_NAME = "int244";

    public static final org.objectfabric.TType INT244_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT245_INDEX = 245;

    public static final java.lang.String INT245_NAME = "int245";

    public static final org.objectfabric.TType INT245_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT246_INDEX = 246;

    public static final java.lang.String INT246_NAME = "int246";

    public static final org.objectfabric.TType INT246_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT247_INDEX = 247;

    public static final java.lang.String INT247_NAME = "int247";

    public static final org.objectfabric.TType INT247_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT248_INDEX = 248;

    public static final java.lang.String INT248_NAME = "int248";

    public static final org.objectfabric.TType INT248_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT249_INDEX = 249;

    public static final java.lang.String INT249_NAME = "int249";

    public static final org.objectfabric.TType INT249_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT250_INDEX = 250;

    public static final java.lang.String INT250_NAME = "int250";

    public static final org.objectfabric.TType INT250_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT251_INDEX = 251;

    public static final java.lang.String INT251_NAME = "int251";

    public static final org.objectfabric.TType INT251_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT252_INDEX = 252;

    public static final java.lang.String INT252_NAME = "int252";

    public static final org.objectfabric.TType INT252_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT253_INDEX = 253;

    public static final java.lang.String INT253_NAME = "int253";

    public static final org.objectfabric.TType INT253_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT254_INDEX = 254;

    public static final java.lang.String INT254_NAME = "int254";

    public static final org.objectfabric.TType INT254_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT255_INDEX = 255;

    public static final java.lang.String INT255_NAME = "int255";

    public static final org.objectfabric.TType INT255_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT256_INDEX = 256;

    public static final java.lang.String INT256_NAME = "int256";

    public static final org.objectfabric.TType INT256_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT257_INDEX = 257;

    public static final java.lang.String INT257_NAME = "int257";

    public static final org.objectfabric.TType INT257_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT258_INDEX = 258;

    public static final java.lang.String INT258_NAME = "int258";

    public static final org.objectfabric.TType INT258_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT259_INDEX = 259;

    public static final java.lang.String INT259_NAME = "int259";

    public static final org.objectfabric.TType INT259_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT260_INDEX = 260;

    public static final java.lang.String INT260_NAME = "int260";

    public static final org.objectfabric.TType INT260_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT261_INDEX = 261;

    public static final java.lang.String INT261_NAME = "int261";

    public static final org.objectfabric.TType INT261_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT262_INDEX = 262;

    public static final java.lang.String INT262_NAME = "int262";

    public static final org.objectfabric.TType INT262_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT263_INDEX = 263;

    public static final java.lang.String INT263_NAME = "int263";

    public static final org.objectfabric.TType INT263_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT264_INDEX = 264;

    public static final java.lang.String INT264_NAME = "int264";

    public static final org.objectfabric.TType INT264_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT265_INDEX = 265;

    public static final java.lang.String INT265_NAME = "int265";

    public static final org.objectfabric.TType INT265_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT266_INDEX = 266;

    public static final java.lang.String INT266_NAME = "int266";

    public static final org.objectfabric.TType INT266_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT267_INDEX = 267;

    public static final java.lang.String INT267_NAME = "int267";

    public static final org.objectfabric.TType INT267_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT268_INDEX = 268;

    public static final java.lang.String INT268_NAME = "int268";

    public static final org.objectfabric.TType INT268_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT269_INDEX = 269;

    public static final java.lang.String INT269_NAME = "int269";

    public static final org.objectfabric.TType INT269_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT270_INDEX = 270;

    public static final java.lang.String INT270_NAME = "int270";

    public static final org.objectfabric.TType INT270_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT271_INDEX = 271;

    public static final java.lang.String INT271_NAME = "int271";

    public static final org.objectfabric.TType INT271_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT272_INDEX = 272;

    public static final java.lang.String INT272_NAME = "int272";

    public static final org.objectfabric.TType INT272_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT273_INDEX = 273;

    public static final java.lang.String INT273_NAME = "int273";

    public static final org.objectfabric.TType INT273_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT274_INDEX = 274;

    public static final java.lang.String INT274_NAME = "int274";

    public static final org.objectfabric.TType INT274_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT275_INDEX = 275;

    public static final java.lang.String INT275_NAME = "int275";

    public static final org.objectfabric.TType INT275_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT276_INDEX = 276;

    public static final java.lang.String INT276_NAME = "int276";

    public static final org.objectfabric.TType INT276_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT277_INDEX = 277;

    public static final java.lang.String INT277_NAME = "int277";

    public static final org.objectfabric.TType INT277_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT278_INDEX = 278;

    public static final java.lang.String INT278_NAME = "int278";

    public static final org.objectfabric.TType INT278_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT279_INDEX = 279;

    public static final java.lang.String INT279_NAME = "int279";

    public static final org.objectfabric.TType INT279_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT280_INDEX = 280;

    public static final java.lang.String INT280_NAME = "int280";

    public static final org.objectfabric.TType INT280_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT281_INDEX = 281;

    public static final java.lang.String INT281_NAME = "int281";

    public static final org.objectfabric.TType INT281_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT282_INDEX = 282;

    public static final java.lang.String INT282_NAME = "int282";

    public static final org.objectfabric.TType INT282_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT283_INDEX = 283;

    public static final java.lang.String INT283_NAME = "int283";

    public static final org.objectfabric.TType INT283_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT284_INDEX = 284;

    public static final java.lang.String INT284_NAME = "int284";

    public static final org.objectfabric.TType INT284_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT285_INDEX = 285;

    public static final java.lang.String INT285_NAME = "int285";

    public static final org.objectfabric.TType INT285_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT286_INDEX = 286;

    public static final java.lang.String INT286_NAME = "int286";

    public static final org.objectfabric.TType INT286_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT287_INDEX = 287;

    public static final java.lang.String INT287_NAME = "int287";

    public static final org.objectfabric.TType INT287_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT288_INDEX = 288;

    public static final java.lang.String INT288_NAME = "int288";

    public static final org.objectfabric.TType INT288_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT289_INDEX = 289;

    public static final java.lang.String INT289_NAME = "int289";

    public static final org.objectfabric.TType INT289_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT290_INDEX = 290;

    public static final java.lang.String INT290_NAME = "int290";

    public static final org.objectfabric.TType INT290_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT291_INDEX = 291;

    public static final java.lang.String INT291_NAME = "int291";

    public static final org.objectfabric.TType INT291_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT292_INDEX = 292;

    public static final java.lang.String INT292_NAME = "int292";

    public static final org.objectfabric.TType INT292_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT293_INDEX = 293;

    public static final java.lang.String INT293_NAME = "int293";

    public static final org.objectfabric.TType INT293_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT294_INDEX = 294;

    public static final java.lang.String INT294_NAME = "int294";

    public static final org.objectfabric.TType INT294_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT295_INDEX = 295;

    public static final java.lang.String INT295_NAME = "int295";

    public static final org.objectfabric.TType INT295_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT296_INDEX = 296;

    public static final java.lang.String INT296_NAME = "int296";

    public static final org.objectfabric.TType INT296_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT297_INDEX = 297;

    public static final java.lang.String INT297_NAME = "int297";

    public static final org.objectfabric.TType INT297_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT298_INDEX = 298;

    public static final java.lang.String INT298_NAME = "int298";

    public static final org.objectfabric.TType INT298_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT299_INDEX = 299;

    public static final java.lang.String INT299_NAME = "int299";

    public static final org.objectfabric.TType INT299_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int FIELD_COUNT = 300;

    public static java.lang.String fieldName(int index) {
        switch (index) {
            case INT0_INDEX:
                return INT0_NAME;
            case INT1_INDEX:
                return INT1_NAME;
            case INT2_INDEX:
                return INT2_NAME;
            case INT3_INDEX:
                return INT3_NAME;
            case INT4_INDEX:
                return INT4_NAME;
            case INT5_INDEX:
                return INT5_NAME;
            case INT6_INDEX:
                return INT6_NAME;
            case INT7_INDEX:
                return INT7_NAME;
            case INT8_INDEX:
                return INT8_NAME;
            case INT9_INDEX:
                return INT9_NAME;
            case INT10_INDEX:
                return INT10_NAME;
            case INT11_INDEX:
                return INT11_NAME;
            case INT12_INDEX:
                return INT12_NAME;
            case INT13_INDEX:
                return INT13_NAME;
            case INT14_INDEX:
                return INT14_NAME;
            case INT15_INDEX:
                return INT15_NAME;
            case INT16_INDEX:
                return INT16_NAME;
            case INT17_INDEX:
                return INT17_NAME;
            case INT18_INDEX:
                return INT18_NAME;
            case INT19_INDEX:
                return INT19_NAME;
            case INT20_INDEX:
                return INT20_NAME;
            case INT21_INDEX:
                return INT21_NAME;
            case INT22_INDEX:
                return INT22_NAME;
            case INT23_INDEX:
                return INT23_NAME;
            case INT24_INDEX:
                return INT24_NAME;
            case INT25_INDEX:
                return INT25_NAME;
            case INT26_INDEX:
                return INT26_NAME;
            case INT27_INDEX:
                return INT27_NAME;
            case INT28_INDEX:
                return INT28_NAME;
            case INT29_INDEX:
                return INT29_NAME;
            case INT30_INDEX:
                return INT30_NAME;
            case INT31_INDEX:
                return INT31_NAME;
            case INT32_INDEX:
                return INT32_NAME;
            case INT33_INDEX:
                return INT33_NAME;
            case INT34_INDEX:
                return INT34_NAME;
            case INT35_INDEX:
                return INT35_NAME;
            case INT36_INDEX:
                return INT36_NAME;
            case INT37_INDEX:
                return INT37_NAME;
            case INT38_INDEX:
                return INT38_NAME;
            case INT39_INDEX:
                return INT39_NAME;
            case INT40_INDEX:
                return INT40_NAME;
            case INT41_INDEX:
                return INT41_NAME;
            case INT42_INDEX:
                return INT42_NAME;
            case INT43_INDEX:
                return INT43_NAME;
            case INT44_INDEX:
                return INT44_NAME;
            case INT45_INDEX:
                return INT45_NAME;
            case INT46_INDEX:
                return INT46_NAME;
            case INT47_INDEX:
                return INT47_NAME;
            case INT48_INDEX:
                return INT48_NAME;
            case INT49_INDEX:
                return INT49_NAME;
            case INT50_INDEX:
                return INT50_NAME;
            case INT51_INDEX:
                return INT51_NAME;
            case INT52_INDEX:
                return INT52_NAME;
            case INT53_INDEX:
                return INT53_NAME;
            case INT54_INDEX:
                return INT54_NAME;
            case INT55_INDEX:
                return INT55_NAME;
            case INT56_INDEX:
                return INT56_NAME;
            case INT57_INDEX:
                return INT57_NAME;
            case INT58_INDEX:
                return INT58_NAME;
            case INT59_INDEX:
                return INT59_NAME;
            case INT60_INDEX:
                return INT60_NAME;
            case INT61_INDEX:
                return INT61_NAME;
            case INT62_INDEX:
                return INT62_NAME;
            case INT63_INDEX:
                return INT63_NAME;
            case INT64_INDEX:
                return INT64_NAME;
            case INT65_INDEX:
                return INT65_NAME;
            case INT66_INDEX:
                return INT66_NAME;
            case INT67_INDEX:
                return INT67_NAME;
            case INT68_INDEX:
                return INT68_NAME;
            case INT69_INDEX:
                return INT69_NAME;
            case INT70_INDEX:
                return INT70_NAME;
            case INT71_INDEX:
                return INT71_NAME;
            case INT72_INDEX:
                return INT72_NAME;
            case INT73_INDEX:
                return INT73_NAME;
            case INT74_INDEX:
                return INT74_NAME;
            case INT75_INDEX:
                return INT75_NAME;
            case INT76_INDEX:
                return INT76_NAME;
            case INT77_INDEX:
                return INT77_NAME;
            case INT78_INDEX:
                return INT78_NAME;
            case INT79_INDEX:
                return INT79_NAME;
            case INT80_INDEX:
                return INT80_NAME;
            case INT81_INDEX:
                return INT81_NAME;
            case INT82_INDEX:
                return INT82_NAME;
            case INT83_INDEX:
                return INT83_NAME;
            case INT84_INDEX:
                return INT84_NAME;
            case INT85_INDEX:
                return INT85_NAME;
            case INT86_INDEX:
                return INT86_NAME;
            case INT87_INDEX:
                return INT87_NAME;
            case INT88_INDEX:
                return INT88_NAME;
            case INT89_INDEX:
                return INT89_NAME;
            case INT90_INDEX:
                return INT90_NAME;
            case INT91_INDEX:
                return INT91_NAME;
            case INT92_INDEX:
                return INT92_NAME;
            case INT93_INDEX:
                return INT93_NAME;
            case INT94_INDEX:
                return INT94_NAME;
            case INT95_INDEX:
                return INT95_NAME;
            case INT96_INDEX:
                return INT96_NAME;
            case INT97_INDEX:
                return INT97_NAME;
            case INT98_INDEX:
                return INT98_NAME;
            case INT99_INDEX:
                return INT99_NAME;
            case INT100_INDEX:
                return INT100_NAME;
            case INT101_INDEX:
                return INT101_NAME;
            case INT102_INDEX:
                return INT102_NAME;
            case INT103_INDEX:
                return INT103_NAME;
            case INT104_INDEX:
                return INT104_NAME;
            case INT105_INDEX:
                return INT105_NAME;
            case INT106_INDEX:
                return INT106_NAME;
            case INT107_INDEX:
                return INT107_NAME;
            case INT108_INDEX:
                return INT108_NAME;
            case INT109_INDEX:
                return INT109_NAME;
            case INT110_INDEX:
                return INT110_NAME;
            case INT111_INDEX:
                return INT111_NAME;
            case INT112_INDEX:
                return INT112_NAME;
            case INT113_INDEX:
                return INT113_NAME;
            case INT114_INDEX:
                return INT114_NAME;
            case INT115_INDEX:
                return INT115_NAME;
            case INT116_INDEX:
                return INT116_NAME;
            case INT117_INDEX:
                return INT117_NAME;
            case INT118_INDEX:
                return INT118_NAME;
            case INT119_INDEX:
                return INT119_NAME;
            case INT120_INDEX:
                return INT120_NAME;
            case INT121_INDEX:
                return INT121_NAME;
            case INT122_INDEX:
                return INT122_NAME;
            case INT123_INDEX:
                return INT123_NAME;
            case INT124_INDEX:
                return INT124_NAME;
            case INT125_INDEX:
                return INT125_NAME;
            case INT126_INDEX:
                return INT126_NAME;
            case INT127_INDEX:
                return INT127_NAME;
            case INT128_INDEX:
                return INT128_NAME;
            case INT129_INDEX:
                return INT129_NAME;
            case INT130_INDEX:
                return INT130_NAME;
            case INT131_INDEX:
                return INT131_NAME;
            case INT132_INDEX:
                return INT132_NAME;
            case INT133_INDEX:
                return INT133_NAME;
            case INT134_INDEX:
                return INT134_NAME;
            case INT135_INDEX:
                return INT135_NAME;
            case INT136_INDEX:
                return INT136_NAME;
            case INT137_INDEX:
                return INT137_NAME;
            case INT138_INDEX:
                return INT138_NAME;
            case INT139_INDEX:
                return INT139_NAME;
            case INT140_INDEX:
                return INT140_NAME;
            case INT141_INDEX:
                return INT141_NAME;
            case INT142_INDEX:
                return INT142_NAME;
            case INT143_INDEX:
                return INT143_NAME;
            case INT144_INDEX:
                return INT144_NAME;
            case INT145_INDEX:
                return INT145_NAME;
            case INT146_INDEX:
                return INT146_NAME;
            case INT147_INDEX:
                return INT147_NAME;
            case INT148_INDEX:
                return INT148_NAME;
            case INT149_INDEX:
                return INT149_NAME;
            case INT150_INDEX:
                return INT150_NAME;
            case INT151_INDEX:
                return INT151_NAME;
            case INT152_INDEX:
                return INT152_NAME;
            case INT153_INDEX:
                return INT153_NAME;
            case INT154_INDEX:
                return INT154_NAME;
            case INT155_INDEX:
                return INT155_NAME;
            case INT156_INDEX:
                return INT156_NAME;
            case INT157_INDEX:
                return INT157_NAME;
            case INT158_INDEX:
                return INT158_NAME;
            case INT159_INDEX:
                return INT159_NAME;
            case INT160_INDEX:
                return INT160_NAME;
            case INT161_INDEX:
                return INT161_NAME;
            case INT162_INDEX:
                return INT162_NAME;
            case INT163_INDEX:
                return INT163_NAME;
            case INT164_INDEX:
                return INT164_NAME;
            case INT165_INDEX:
                return INT165_NAME;
            case INT166_INDEX:
                return INT166_NAME;
            case INT167_INDEX:
                return INT167_NAME;
            case INT168_INDEX:
                return INT168_NAME;
            case INT169_INDEX:
                return INT169_NAME;
            case INT170_INDEX:
                return INT170_NAME;
            case INT171_INDEX:
                return INT171_NAME;
            case INT172_INDEX:
                return INT172_NAME;
            case INT173_INDEX:
                return INT173_NAME;
            case INT174_INDEX:
                return INT174_NAME;
            case INT175_INDEX:
                return INT175_NAME;
            case INT176_INDEX:
                return INT176_NAME;
            case INT177_INDEX:
                return INT177_NAME;
            case INT178_INDEX:
                return INT178_NAME;
            case INT179_INDEX:
                return INT179_NAME;
            case INT180_INDEX:
                return INT180_NAME;
            case INT181_INDEX:
                return INT181_NAME;
            case INT182_INDEX:
                return INT182_NAME;
            case INT183_INDEX:
                return INT183_NAME;
            case INT184_INDEX:
                return INT184_NAME;
            case INT185_INDEX:
                return INT185_NAME;
            case INT186_INDEX:
                return INT186_NAME;
            case INT187_INDEX:
                return INT187_NAME;
            case INT188_INDEX:
                return INT188_NAME;
            case INT189_INDEX:
                return INT189_NAME;
            case INT190_INDEX:
                return INT190_NAME;
            case INT191_INDEX:
                return INT191_NAME;
            case INT192_INDEX:
                return INT192_NAME;
            case INT193_INDEX:
                return INT193_NAME;
            case INT194_INDEX:
                return INT194_NAME;
            case INT195_INDEX:
                return INT195_NAME;
            case INT196_INDEX:
                return INT196_NAME;
            case INT197_INDEX:
                return INT197_NAME;
            case INT198_INDEX:
                return INT198_NAME;
            case INT199_INDEX:
                return INT199_NAME;
            case INT200_INDEX:
                return INT200_NAME;
            case INT201_INDEX:
                return INT201_NAME;
            case INT202_INDEX:
                return INT202_NAME;
            case INT203_INDEX:
                return INT203_NAME;
            case INT204_INDEX:
                return INT204_NAME;
            case INT205_INDEX:
                return INT205_NAME;
            case INT206_INDEX:
                return INT206_NAME;
            case INT207_INDEX:
                return INT207_NAME;
            case INT208_INDEX:
                return INT208_NAME;
            case INT209_INDEX:
                return INT209_NAME;
            case INT210_INDEX:
                return INT210_NAME;
            case INT211_INDEX:
                return INT211_NAME;
            case INT212_INDEX:
                return INT212_NAME;
            case INT213_INDEX:
                return INT213_NAME;
            case INT214_INDEX:
                return INT214_NAME;
            case INT215_INDEX:
                return INT215_NAME;
            case INT216_INDEX:
                return INT216_NAME;
            case INT217_INDEX:
                return INT217_NAME;
            case INT218_INDEX:
                return INT218_NAME;
            case INT219_INDEX:
                return INT219_NAME;
            case INT220_INDEX:
                return INT220_NAME;
            case INT221_INDEX:
                return INT221_NAME;
            case INT222_INDEX:
                return INT222_NAME;
            case INT223_INDEX:
                return INT223_NAME;
            case INT224_INDEX:
                return INT224_NAME;
            case INT225_INDEX:
                return INT225_NAME;
            case INT226_INDEX:
                return INT226_NAME;
            case INT227_INDEX:
                return INT227_NAME;
            case INT228_INDEX:
                return INT228_NAME;
            case INT229_INDEX:
                return INT229_NAME;
            case INT230_INDEX:
                return INT230_NAME;
            case INT231_INDEX:
                return INT231_NAME;
            case INT232_INDEX:
                return INT232_NAME;
            case INT233_INDEX:
                return INT233_NAME;
            case INT234_INDEX:
                return INT234_NAME;
            case INT235_INDEX:
                return INT235_NAME;
            case INT236_INDEX:
                return INT236_NAME;
            case INT237_INDEX:
                return INT237_NAME;
            case INT238_INDEX:
                return INT238_NAME;
            case INT239_INDEX:
                return INT239_NAME;
            case INT240_INDEX:
                return INT240_NAME;
            case INT241_INDEX:
                return INT241_NAME;
            case INT242_INDEX:
                return INT242_NAME;
            case INT243_INDEX:
                return INT243_NAME;
            case INT244_INDEX:
                return INT244_NAME;
            case INT245_INDEX:
                return INT245_NAME;
            case INT246_INDEX:
                return INT246_NAME;
            case INT247_INDEX:
                return INT247_NAME;
            case INT248_INDEX:
                return INT248_NAME;
            case INT249_INDEX:
                return INT249_NAME;
            case INT250_INDEX:
                return INT250_NAME;
            case INT251_INDEX:
                return INT251_NAME;
            case INT252_INDEX:
                return INT252_NAME;
            case INT253_INDEX:
                return INT253_NAME;
            case INT254_INDEX:
                return INT254_NAME;
            case INT255_INDEX:
                return INT255_NAME;
            case INT256_INDEX:
                return INT256_NAME;
            case INT257_INDEX:
                return INT257_NAME;
            case INT258_INDEX:
                return INT258_NAME;
            case INT259_INDEX:
                return INT259_NAME;
            case INT260_INDEX:
                return INT260_NAME;
            case INT261_INDEX:
                return INT261_NAME;
            case INT262_INDEX:
                return INT262_NAME;
            case INT263_INDEX:
                return INT263_NAME;
            case INT264_INDEX:
                return INT264_NAME;
            case INT265_INDEX:
                return INT265_NAME;
            case INT266_INDEX:
                return INT266_NAME;
            case INT267_INDEX:
                return INT267_NAME;
            case INT268_INDEX:
                return INT268_NAME;
            case INT269_INDEX:
                return INT269_NAME;
            case INT270_INDEX:
                return INT270_NAME;
            case INT271_INDEX:
                return INT271_NAME;
            case INT272_INDEX:
                return INT272_NAME;
            case INT273_INDEX:
                return INT273_NAME;
            case INT274_INDEX:
                return INT274_NAME;
            case INT275_INDEX:
                return INT275_NAME;
            case INT276_INDEX:
                return INT276_NAME;
            case INT277_INDEX:
                return INT277_NAME;
            case INT278_INDEX:
                return INT278_NAME;
            case INT279_INDEX:
                return INT279_NAME;
            case INT280_INDEX:
                return INT280_NAME;
            case INT281_INDEX:
                return INT281_NAME;
            case INT282_INDEX:
                return INT282_NAME;
            case INT283_INDEX:
                return INT283_NAME;
            case INT284_INDEX:
                return INT284_NAME;
            case INT285_INDEX:
                return INT285_NAME;
            case INT286_INDEX:
                return INT286_NAME;
            case INT287_INDEX:
                return INT287_NAME;
            case INT288_INDEX:
                return INT288_NAME;
            case INT289_INDEX:
                return INT289_NAME;
            case INT290_INDEX:
                return INT290_NAME;
            case INT291_INDEX:
                return INT291_NAME;
            case INT292_INDEX:
                return INT292_NAME;
            case INT293_INDEX:
                return INT293_NAME;
            case INT294_INDEX:
                return INT294_NAME;
            case INT295_INDEX:
                return INT295_NAME;
            case INT296_INDEX:
                return INT296_NAME;
            case INT297_INDEX:
                return INT297_NAME;
            case INT298_INDEX:
                return INT298_NAME;
            case INT299_INDEX:
                return INT299_NAME;
            default:
                throw new IllegalArgumentException();
        }
    }

    public static org.objectfabric.TType fieldType(int index) {
        switch (index) {
            case INT0_INDEX:
                return INT0_TYPE;
            case INT1_INDEX:
                return INT1_TYPE;
            case INT2_INDEX:
                return INT2_TYPE;
            case INT3_INDEX:
                return INT3_TYPE;
            case INT4_INDEX:
                return INT4_TYPE;
            case INT5_INDEX:
                return INT5_TYPE;
            case INT6_INDEX:
                return INT6_TYPE;
            case INT7_INDEX:
                return INT7_TYPE;
            case INT8_INDEX:
                return INT8_TYPE;
            case INT9_INDEX:
                return INT9_TYPE;
            case INT10_INDEX:
                return INT10_TYPE;
            case INT11_INDEX:
                return INT11_TYPE;
            case INT12_INDEX:
                return INT12_TYPE;
            case INT13_INDEX:
                return INT13_TYPE;
            case INT14_INDEX:
                return INT14_TYPE;
            case INT15_INDEX:
                return INT15_TYPE;
            case INT16_INDEX:
                return INT16_TYPE;
            case INT17_INDEX:
                return INT17_TYPE;
            case INT18_INDEX:
                return INT18_TYPE;
            case INT19_INDEX:
                return INT19_TYPE;
            case INT20_INDEX:
                return INT20_TYPE;
            case INT21_INDEX:
                return INT21_TYPE;
            case INT22_INDEX:
                return INT22_TYPE;
            case INT23_INDEX:
                return INT23_TYPE;
            case INT24_INDEX:
                return INT24_TYPE;
            case INT25_INDEX:
                return INT25_TYPE;
            case INT26_INDEX:
                return INT26_TYPE;
            case INT27_INDEX:
                return INT27_TYPE;
            case INT28_INDEX:
                return INT28_TYPE;
            case INT29_INDEX:
                return INT29_TYPE;
            case INT30_INDEX:
                return INT30_TYPE;
            case INT31_INDEX:
                return INT31_TYPE;
            case INT32_INDEX:
                return INT32_TYPE;
            case INT33_INDEX:
                return INT33_TYPE;
            case INT34_INDEX:
                return INT34_TYPE;
            case INT35_INDEX:
                return INT35_TYPE;
            case INT36_INDEX:
                return INT36_TYPE;
            case INT37_INDEX:
                return INT37_TYPE;
            case INT38_INDEX:
                return INT38_TYPE;
            case INT39_INDEX:
                return INT39_TYPE;
            case INT40_INDEX:
                return INT40_TYPE;
            case INT41_INDEX:
                return INT41_TYPE;
            case INT42_INDEX:
                return INT42_TYPE;
            case INT43_INDEX:
                return INT43_TYPE;
            case INT44_INDEX:
                return INT44_TYPE;
            case INT45_INDEX:
                return INT45_TYPE;
            case INT46_INDEX:
                return INT46_TYPE;
            case INT47_INDEX:
                return INT47_TYPE;
            case INT48_INDEX:
                return INT48_TYPE;
            case INT49_INDEX:
                return INT49_TYPE;
            case INT50_INDEX:
                return INT50_TYPE;
            case INT51_INDEX:
                return INT51_TYPE;
            case INT52_INDEX:
                return INT52_TYPE;
            case INT53_INDEX:
                return INT53_TYPE;
            case INT54_INDEX:
                return INT54_TYPE;
            case INT55_INDEX:
                return INT55_TYPE;
            case INT56_INDEX:
                return INT56_TYPE;
            case INT57_INDEX:
                return INT57_TYPE;
            case INT58_INDEX:
                return INT58_TYPE;
            case INT59_INDEX:
                return INT59_TYPE;
            case INT60_INDEX:
                return INT60_TYPE;
            case INT61_INDEX:
                return INT61_TYPE;
            case INT62_INDEX:
                return INT62_TYPE;
            case INT63_INDEX:
                return INT63_TYPE;
            case INT64_INDEX:
                return INT64_TYPE;
            case INT65_INDEX:
                return INT65_TYPE;
            case INT66_INDEX:
                return INT66_TYPE;
            case INT67_INDEX:
                return INT67_TYPE;
            case INT68_INDEX:
                return INT68_TYPE;
            case INT69_INDEX:
                return INT69_TYPE;
            case INT70_INDEX:
                return INT70_TYPE;
            case INT71_INDEX:
                return INT71_TYPE;
            case INT72_INDEX:
                return INT72_TYPE;
            case INT73_INDEX:
                return INT73_TYPE;
            case INT74_INDEX:
                return INT74_TYPE;
            case INT75_INDEX:
                return INT75_TYPE;
            case INT76_INDEX:
                return INT76_TYPE;
            case INT77_INDEX:
                return INT77_TYPE;
            case INT78_INDEX:
                return INT78_TYPE;
            case INT79_INDEX:
                return INT79_TYPE;
            case INT80_INDEX:
                return INT80_TYPE;
            case INT81_INDEX:
                return INT81_TYPE;
            case INT82_INDEX:
                return INT82_TYPE;
            case INT83_INDEX:
                return INT83_TYPE;
            case INT84_INDEX:
                return INT84_TYPE;
            case INT85_INDEX:
                return INT85_TYPE;
            case INT86_INDEX:
                return INT86_TYPE;
            case INT87_INDEX:
                return INT87_TYPE;
            case INT88_INDEX:
                return INT88_TYPE;
            case INT89_INDEX:
                return INT89_TYPE;
            case INT90_INDEX:
                return INT90_TYPE;
            case INT91_INDEX:
                return INT91_TYPE;
            case INT92_INDEX:
                return INT92_TYPE;
            case INT93_INDEX:
                return INT93_TYPE;
            case INT94_INDEX:
                return INT94_TYPE;
            case INT95_INDEX:
                return INT95_TYPE;
            case INT96_INDEX:
                return INT96_TYPE;
            case INT97_INDEX:
                return INT97_TYPE;
            case INT98_INDEX:
                return INT98_TYPE;
            case INT99_INDEX:
                return INT99_TYPE;
            case INT100_INDEX:
                return INT100_TYPE;
            case INT101_INDEX:
                return INT101_TYPE;
            case INT102_INDEX:
                return INT102_TYPE;
            case INT103_INDEX:
                return INT103_TYPE;
            case INT104_INDEX:
                return INT104_TYPE;
            case INT105_INDEX:
                return INT105_TYPE;
            case INT106_INDEX:
                return INT106_TYPE;
            case INT107_INDEX:
                return INT107_TYPE;
            case INT108_INDEX:
                return INT108_TYPE;
            case INT109_INDEX:
                return INT109_TYPE;
            case INT110_INDEX:
                return INT110_TYPE;
            case INT111_INDEX:
                return INT111_TYPE;
            case INT112_INDEX:
                return INT112_TYPE;
            case INT113_INDEX:
                return INT113_TYPE;
            case INT114_INDEX:
                return INT114_TYPE;
            case INT115_INDEX:
                return INT115_TYPE;
            case INT116_INDEX:
                return INT116_TYPE;
            case INT117_INDEX:
                return INT117_TYPE;
            case INT118_INDEX:
                return INT118_TYPE;
            case INT119_INDEX:
                return INT119_TYPE;
            case INT120_INDEX:
                return INT120_TYPE;
            case INT121_INDEX:
                return INT121_TYPE;
            case INT122_INDEX:
                return INT122_TYPE;
            case INT123_INDEX:
                return INT123_TYPE;
            case INT124_INDEX:
                return INT124_TYPE;
            case INT125_INDEX:
                return INT125_TYPE;
            case INT126_INDEX:
                return INT126_TYPE;
            case INT127_INDEX:
                return INT127_TYPE;
            case INT128_INDEX:
                return INT128_TYPE;
            case INT129_INDEX:
                return INT129_TYPE;
            case INT130_INDEX:
                return INT130_TYPE;
            case INT131_INDEX:
                return INT131_TYPE;
            case INT132_INDEX:
                return INT132_TYPE;
            case INT133_INDEX:
                return INT133_TYPE;
            case INT134_INDEX:
                return INT134_TYPE;
            case INT135_INDEX:
                return INT135_TYPE;
            case INT136_INDEX:
                return INT136_TYPE;
            case INT137_INDEX:
                return INT137_TYPE;
            case INT138_INDEX:
                return INT138_TYPE;
            case INT139_INDEX:
                return INT139_TYPE;
            case INT140_INDEX:
                return INT140_TYPE;
            case INT141_INDEX:
                return INT141_TYPE;
            case INT142_INDEX:
                return INT142_TYPE;
            case INT143_INDEX:
                return INT143_TYPE;
            case INT144_INDEX:
                return INT144_TYPE;
            case INT145_INDEX:
                return INT145_TYPE;
            case INT146_INDEX:
                return INT146_TYPE;
            case INT147_INDEX:
                return INT147_TYPE;
            case INT148_INDEX:
                return INT148_TYPE;
            case INT149_INDEX:
                return INT149_TYPE;
            case INT150_INDEX:
                return INT150_TYPE;
            case INT151_INDEX:
                return INT151_TYPE;
            case INT152_INDEX:
                return INT152_TYPE;
            case INT153_INDEX:
                return INT153_TYPE;
            case INT154_INDEX:
                return INT154_TYPE;
            case INT155_INDEX:
                return INT155_TYPE;
            case INT156_INDEX:
                return INT156_TYPE;
            case INT157_INDEX:
                return INT157_TYPE;
            case INT158_INDEX:
                return INT158_TYPE;
            case INT159_INDEX:
                return INT159_TYPE;
            case INT160_INDEX:
                return INT160_TYPE;
            case INT161_INDEX:
                return INT161_TYPE;
            case INT162_INDEX:
                return INT162_TYPE;
            case INT163_INDEX:
                return INT163_TYPE;
            case INT164_INDEX:
                return INT164_TYPE;
            case INT165_INDEX:
                return INT165_TYPE;
            case INT166_INDEX:
                return INT166_TYPE;
            case INT167_INDEX:
                return INT167_TYPE;
            case INT168_INDEX:
                return INT168_TYPE;
            case INT169_INDEX:
                return INT169_TYPE;
            case INT170_INDEX:
                return INT170_TYPE;
            case INT171_INDEX:
                return INT171_TYPE;
            case INT172_INDEX:
                return INT172_TYPE;
            case INT173_INDEX:
                return INT173_TYPE;
            case INT174_INDEX:
                return INT174_TYPE;
            case INT175_INDEX:
                return INT175_TYPE;
            case INT176_INDEX:
                return INT176_TYPE;
            case INT177_INDEX:
                return INT177_TYPE;
            case INT178_INDEX:
                return INT178_TYPE;
            case INT179_INDEX:
                return INT179_TYPE;
            case INT180_INDEX:
                return INT180_TYPE;
            case INT181_INDEX:
                return INT181_TYPE;
            case INT182_INDEX:
                return INT182_TYPE;
            case INT183_INDEX:
                return INT183_TYPE;
            case INT184_INDEX:
                return INT184_TYPE;
            case INT185_INDEX:
                return INT185_TYPE;
            case INT186_INDEX:
                return INT186_TYPE;
            case INT187_INDEX:
                return INT187_TYPE;
            case INT188_INDEX:
                return INT188_TYPE;
            case INT189_INDEX:
                return INT189_TYPE;
            case INT190_INDEX:
                return INT190_TYPE;
            case INT191_INDEX:
                return INT191_TYPE;
            case INT192_INDEX:
                return INT192_TYPE;
            case INT193_INDEX:
                return INT193_TYPE;
            case INT194_INDEX:
                return INT194_TYPE;
            case INT195_INDEX:
                return INT195_TYPE;
            case INT196_INDEX:
                return INT196_TYPE;
            case INT197_INDEX:
                return INT197_TYPE;
            case INT198_INDEX:
                return INT198_TYPE;
            case INT199_INDEX:
                return INT199_TYPE;
            case INT200_INDEX:
                return INT200_TYPE;
            case INT201_INDEX:
                return INT201_TYPE;
            case INT202_INDEX:
                return INT202_TYPE;
            case INT203_INDEX:
                return INT203_TYPE;
            case INT204_INDEX:
                return INT204_TYPE;
            case INT205_INDEX:
                return INT205_TYPE;
            case INT206_INDEX:
                return INT206_TYPE;
            case INT207_INDEX:
                return INT207_TYPE;
            case INT208_INDEX:
                return INT208_TYPE;
            case INT209_INDEX:
                return INT209_TYPE;
            case INT210_INDEX:
                return INT210_TYPE;
            case INT211_INDEX:
                return INT211_TYPE;
            case INT212_INDEX:
                return INT212_TYPE;
            case INT213_INDEX:
                return INT213_TYPE;
            case INT214_INDEX:
                return INT214_TYPE;
            case INT215_INDEX:
                return INT215_TYPE;
            case INT216_INDEX:
                return INT216_TYPE;
            case INT217_INDEX:
                return INT217_TYPE;
            case INT218_INDEX:
                return INT218_TYPE;
            case INT219_INDEX:
                return INT219_TYPE;
            case INT220_INDEX:
                return INT220_TYPE;
            case INT221_INDEX:
                return INT221_TYPE;
            case INT222_INDEX:
                return INT222_TYPE;
            case INT223_INDEX:
                return INT223_TYPE;
            case INT224_INDEX:
                return INT224_TYPE;
            case INT225_INDEX:
                return INT225_TYPE;
            case INT226_INDEX:
                return INT226_TYPE;
            case INT227_INDEX:
                return INT227_TYPE;
            case INT228_INDEX:
                return INT228_TYPE;
            case INT229_INDEX:
                return INT229_TYPE;
            case INT230_INDEX:
                return INT230_TYPE;
            case INT231_INDEX:
                return INT231_TYPE;
            case INT232_INDEX:
                return INT232_TYPE;
            case INT233_INDEX:
                return INT233_TYPE;
            case INT234_INDEX:
                return INT234_TYPE;
            case INT235_INDEX:
                return INT235_TYPE;
            case INT236_INDEX:
                return INT236_TYPE;
            case INT237_INDEX:
                return INT237_TYPE;
            case INT238_INDEX:
                return INT238_TYPE;
            case INT239_INDEX:
                return INT239_TYPE;
            case INT240_INDEX:
                return INT240_TYPE;
            case INT241_INDEX:
                return INT241_TYPE;
            case INT242_INDEX:
                return INT242_TYPE;
            case INT243_INDEX:
                return INT243_TYPE;
            case INT244_INDEX:
                return INT244_TYPE;
            case INT245_INDEX:
                return INT245_TYPE;
            case INT246_INDEX:
                return INT246_TYPE;
            case INT247_INDEX:
                return INT247_TYPE;
            case INT248_INDEX:
                return INT248_TYPE;
            case INT249_INDEX:
                return INT249_TYPE;
            case INT250_INDEX:
                return INT250_TYPE;
            case INT251_INDEX:
                return INT251_TYPE;
            case INT252_INDEX:
                return INT252_TYPE;
            case INT253_INDEX:
                return INT253_TYPE;
            case INT254_INDEX:
                return INT254_TYPE;
            case INT255_INDEX:
                return INT255_TYPE;
            case INT256_INDEX:
                return INT256_TYPE;
            case INT257_INDEX:
                return INT257_TYPE;
            case INT258_INDEX:
                return INT258_TYPE;
            case INT259_INDEX:
                return INT259_TYPE;
            case INT260_INDEX:
                return INT260_TYPE;
            case INT261_INDEX:
                return INT261_TYPE;
            case INT262_INDEX:
                return INT262_TYPE;
            case INT263_INDEX:
                return INT263_TYPE;
            case INT264_INDEX:
                return INT264_TYPE;
            case INT265_INDEX:
                return INT265_TYPE;
            case INT266_INDEX:
                return INT266_TYPE;
            case INT267_INDEX:
                return INT267_TYPE;
            case INT268_INDEX:
                return INT268_TYPE;
            case INT269_INDEX:
                return INT269_TYPE;
            case INT270_INDEX:
                return INT270_TYPE;
            case INT271_INDEX:
                return INT271_TYPE;
            case INT272_INDEX:
                return INT272_TYPE;
            case INT273_INDEX:
                return INT273_TYPE;
            case INT274_INDEX:
                return INT274_TYPE;
            case INT275_INDEX:
                return INT275_TYPE;
            case INT276_INDEX:
                return INT276_TYPE;
            case INT277_INDEX:
                return INT277_TYPE;
            case INT278_INDEX:
                return INT278_TYPE;
            case INT279_INDEX:
                return INT279_TYPE;
            case INT280_INDEX:
                return INT280_TYPE;
            case INT281_INDEX:
                return INT281_TYPE;
            case INT282_INDEX:
                return INT282_TYPE;
            case INT283_INDEX:
                return INT283_TYPE;
            case INT284_INDEX:
                return INT284_TYPE;
            case INT285_INDEX:
                return INT285_TYPE;
            case INT286_INDEX:
                return INT286_TYPE;
            case INT287_INDEX:
                return INT287_TYPE;
            case INT288_INDEX:
                return INT288_TYPE;
            case INT289_INDEX:
                return INT289_TYPE;
            case INT290_INDEX:
                return INT290_TYPE;
            case INT291_INDEX:
                return INT291_TYPE;
            case INT292_INDEX:
                return INT292_TYPE;
            case INT293_INDEX:
                return INT293_TYPE;
            case INT294_INDEX:
                return INT294_TYPE;
            case INT295_INDEX:
                return INT295_TYPE;
            case INT296_INDEX:
                return INT296_TYPE;
            case INT297_INDEX:
                return INT297_TYPE;
            case INT298_INDEX:
                return INT298_TYPE;
            case INT299_INDEX:
                return INT299_TYPE;
            default:
                throw new IllegalArgumentException();
        }
    }

    @Override
    protected org.objectfabric.TObject.Version createVersion_() {
        Version version = new Version(0);
        version.setObject(this);
        return version;
    }

    @Override
    protected int classId_() {
        return org.objectfabric.generated.LimitsObjectModel.ORG_OBJECTFABRIC_GENERATED_LIMITN_CLASS_ID;
    }

    @Override
    protected org.objectfabric.ObjectModel objectModel_() {
        return org.objectfabric.generated.LimitsObjectModel.instance();
    }

    protected static class Version extends org.objectfabric.TIndexed.VersionN {

        public int _int0;

        public int _int1;

        public int _int2;

        public int _int3;

        public int _int4;

        public int _int5;

        public int _int6;

        public int _int7;

        public int _int8;

        public int _int9;

        public int _int10;

        public int _int11;

        public int _int12;

        public int _int13;

        public int _int14;

        public int _int15;

        public int _int16;

        public int _int17;

        public int _int18;

        public int _int19;

        public int _int20;

        public int _int21;

        public int _int22;

        public int _int23;

        public int _int24;

        public int _int25;

        public int _int26;

        public int _int27;

        public int _int28;

        public int _int29;

        public int _int30;

        public int _int31;

        public int _int32;

        public int _int33;

        public int _int34;

        public int _int35;

        public int _int36;

        public int _int37;

        public int _int38;

        public int _int39;

        public int _int40;

        public int _int41;

        public int _int42;

        public int _int43;

        public int _int44;

        public int _int45;

        public int _int46;

        public int _int47;

        public int _int48;

        public int _int49;

        public int _int50;

        public int _int51;

        public int _int52;

        public int _int53;

        public int _int54;

        public int _int55;

        public int _int56;

        public int _int57;

        public int _int58;

        public int _int59;

        public int _int60;

        public int _int61;

        public int _int62;

        public int _int63;

        public int _int64;

        public int _int65;

        public int _int66;

        public int _int67;

        public int _int68;

        public int _int69;

        public int _int70;

        public int _int71;

        public int _int72;

        public int _int73;

        public int _int74;

        public int _int75;

        public int _int76;

        public int _int77;

        public int _int78;

        public int _int79;

        public int _int80;

        public int _int81;

        public int _int82;

        public int _int83;

        public int _int84;

        public int _int85;

        public int _int86;

        public int _int87;

        public int _int88;

        public int _int89;

        public int _int90;

        public int _int91;

        public int _int92;

        public int _int93;

        public int _int94;

        public int _int95;

        public int _int96;

        public int _int97;

        public int _int98;

        public int _int99;

        public int _int100;

        public int _int101;

        public int _int102;

        public int _int103;

        public int _int104;

        public int _int105;

        public int _int106;

        public int _int107;

        public int _int108;

        public int _int109;

        public int _int110;

        public int _int111;

        public int _int112;

        public int _int113;

        public int _int114;

        public int _int115;

        public int _int116;

        public int _int117;

        public int _int118;

        public int _int119;

        public int _int120;

        public int _int121;

        public int _int122;

        public int _int123;

        public int _int124;

        public int _int125;

        public int _int126;

        public int _int127;

        public int _int128;

        public int _int129;

        public int _int130;

        public int _int131;

        public int _int132;

        public int _int133;

        public int _int134;

        public int _int135;

        public int _int136;

        public int _int137;

        public int _int138;

        public int _int139;

        public int _int140;

        public int _int141;

        public int _int142;

        public int _int143;

        public int _int144;

        public int _int145;

        public int _int146;

        public int _int147;

        public int _int148;

        public int _int149;

        public int _int150;

        public int _int151;

        public int _int152;

        public int _int153;

        public int _int154;

        public int _int155;

        public int _int156;

        public int _int157;

        public int _int158;

        public int _int159;

        public int _int160;

        public int _int161;

        public int _int162;

        public int _int163;

        public int _int164;

        public int _int165;

        public int _int166;

        public int _int167;

        public int _int168;

        public int _int169;

        public int _int170;

        public int _int171;

        public int _int172;

        public int _int173;

        public int _int174;

        public int _int175;

        public int _int176;

        public int _int177;

        public int _int178;

        public int _int179;

        public int _int180;

        public int _int181;

        public int _int182;

        public int _int183;

        public int _int184;

        public int _int185;

        public int _int186;

        public int _int187;

        public int _int188;

        public int _int189;

        public int _int190;

        public int _int191;

        public int _int192;

        public int _int193;

        public int _int194;

        public int _int195;

        public int _int196;

        public int _int197;

        public int _int198;

        public int _int199;

        public int _int200;

        public int _int201;

        public int _int202;

        public int _int203;

        public int _int204;

        public int _int205;

        public int _int206;

        public int _int207;

        public int _int208;

        public int _int209;

        public int _int210;

        public int _int211;

        public int _int212;

        public int _int213;

        public int _int214;

        public int _int215;

        public int _int216;

        public int _int217;

        public int _int218;

        public int _int219;

        public int _int220;

        public int _int221;

        public int _int222;

        public int _int223;

        public int _int224;

        public int _int225;

        public int _int226;

        public int _int227;

        public int _int228;

        public int _int229;

        public int _int230;

        public int _int231;

        public int _int232;

        public int _int233;

        public int _int234;

        public int _int235;

        public int _int236;

        public int _int237;

        public int _int238;

        public int _int239;

        public int _int240;

        public int _int241;

        public int _int242;

        public int _int243;

        public int _int244;

        public int _int245;

        public int _int246;

        public int _int247;

        public int _int248;

        public int _int249;

        public int _int250;

        public int _int251;

        public int _int252;

        public int _int253;

        public int _int254;

        public int _int255;

        public int _int256;

        public int _int257;

        public int _int258;

        public int _int259;

        public int _int260;

        public int _int261;

        public int _int262;

        public int _int263;

        public int _int264;

        public int _int265;

        public int _int266;

        public int _int267;

        public int _int268;

        public int _int269;

        public int _int270;

        public int _int271;

        public int _int272;

        public int _int273;

        public int _int274;

        public int _int275;

        public int _int276;

        public int _int277;

        public int _int278;

        public int _int279;

        public int _int280;

        public int _int281;

        public int _int282;

        public int _int283;

        public int _int284;

        public int _int285;

        public int _int286;

        public int _int287;

        public int _int288;

        public int _int289;

        public int _int290;

        public int _int291;

        public int _int292;

        public int _int293;

        public int _int294;

        public int _int295;

        public int _int296;

        public int _int297;

        public int _int298;

        public int _int299;

        static {
        }

        public Version(int length) {
            super(length);
        }

        @Override
        public java.lang.String getFieldName(int index) {
            return fieldName(index);
        }

        @Override
        public org.objectfabric.TType getFieldType(int index) {
            return fieldType(index);
        }

        @Override
        public java.lang.Object getAsObject(int index) {
            switch (index) {
                case INT0_INDEX:
                    return _int0;
                case INT1_INDEX:
                    return _int1;
                case INT2_INDEX:
                    return _int2;
                case INT3_INDEX:
                    return _int3;
                case INT4_INDEX:
                    return _int4;
                case INT5_INDEX:
                    return _int5;
                case INT6_INDEX:
                    return _int6;
                case INT7_INDEX:
                    return _int7;
                case INT8_INDEX:
                    return _int8;
                case INT9_INDEX:
                    return _int9;
                case INT10_INDEX:
                    return _int10;
                case INT11_INDEX:
                    return _int11;
                case INT12_INDEX:
                    return _int12;
                case INT13_INDEX:
                    return _int13;
                case INT14_INDEX:
                    return _int14;
                case INT15_INDEX:
                    return _int15;
                case INT16_INDEX:
                    return _int16;
                case INT17_INDEX:
                    return _int17;
                case INT18_INDEX:
                    return _int18;
                case INT19_INDEX:
                    return _int19;
                case INT20_INDEX:
                    return _int20;
                case INT21_INDEX:
                    return _int21;
                case INT22_INDEX:
                    return _int22;
                case INT23_INDEX:
                    return _int23;
                case INT24_INDEX:
                    return _int24;
                case INT25_INDEX:
                    return _int25;
                case INT26_INDEX:
                    return _int26;
                case INT27_INDEX:
                    return _int27;
                case INT28_INDEX:
                    return _int28;
                case INT29_INDEX:
                    return _int29;
                case INT30_INDEX:
                    return _int30;
                case INT31_INDEX:
                    return _int31;
                case INT32_INDEX:
                    return _int32;
                case INT33_INDEX:
                    return _int33;
                case INT34_INDEX:
                    return _int34;
                case INT35_INDEX:
                    return _int35;
                case INT36_INDEX:
                    return _int36;
                case INT37_INDEX:
                    return _int37;
                case INT38_INDEX:
                    return _int38;
                case INT39_INDEX:
                    return _int39;
                case INT40_INDEX:
                    return _int40;
                case INT41_INDEX:
                    return _int41;
                case INT42_INDEX:
                    return _int42;
                case INT43_INDEX:
                    return _int43;
                case INT44_INDEX:
                    return _int44;
                case INT45_INDEX:
                    return _int45;
                case INT46_INDEX:
                    return _int46;
                case INT47_INDEX:
                    return _int47;
                case INT48_INDEX:
                    return _int48;
                case INT49_INDEX:
                    return _int49;
                case INT50_INDEX:
                    return _int50;
                case INT51_INDEX:
                    return _int51;
                case INT52_INDEX:
                    return _int52;
                case INT53_INDEX:
                    return _int53;
                case INT54_INDEX:
                    return _int54;
                case INT55_INDEX:
                    return _int55;
                case INT56_INDEX:
                    return _int56;
                case INT57_INDEX:
                    return _int57;
                case INT58_INDEX:
                    return _int58;
                case INT59_INDEX:
                    return _int59;
                case INT60_INDEX:
                    return _int60;
                case INT61_INDEX:
                    return _int61;
                case INT62_INDEX:
                    return _int62;
                case INT63_INDEX:
                    return _int63;
                case INT64_INDEX:
                    return _int64;
                case INT65_INDEX:
                    return _int65;
                case INT66_INDEX:
                    return _int66;
                case INT67_INDEX:
                    return _int67;
                case INT68_INDEX:
                    return _int68;
                case INT69_INDEX:
                    return _int69;
                case INT70_INDEX:
                    return _int70;
                case INT71_INDEX:
                    return _int71;
                case INT72_INDEX:
                    return _int72;
                case INT73_INDEX:
                    return _int73;
                case INT74_INDEX:
                    return _int74;
                case INT75_INDEX:
                    return _int75;
                case INT76_INDEX:
                    return _int76;
                case INT77_INDEX:
                    return _int77;
                case INT78_INDEX:
                    return _int78;
                case INT79_INDEX:
                    return _int79;
                case INT80_INDEX:
                    return _int80;
                case INT81_INDEX:
                    return _int81;
                case INT82_INDEX:
                    return _int82;
                case INT83_INDEX:
                    return _int83;
                case INT84_INDEX:
                    return _int84;
                case INT85_INDEX:
                    return _int85;
                case INT86_INDEX:
                    return _int86;
                case INT87_INDEX:
                    return _int87;
                case INT88_INDEX:
                    return _int88;
                case INT89_INDEX:
                    return _int89;
                case INT90_INDEX:
                    return _int90;
                case INT91_INDEX:
                    return _int91;
                case INT92_INDEX:
                    return _int92;
                case INT93_INDEX:
                    return _int93;
                case INT94_INDEX:
                    return _int94;
                case INT95_INDEX:
                    return _int95;
                case INT96_INDEX:
                    return _int96;
                case INT97_INDEX:
                    return _int97;
                case INT98_INDEX:
                    return _int98;
                case INT99_INDEX:
                    return _int99;
                case INT100_INDEX:
                    return _int100;
                case INT101_INDEX:
                    return _int101;
                case INT102_INDEX:
                    return _int102;
                case INT103_INDEX:
                    return _int103;
                case INT104_INDEX:
                    return _int104;
                case INT105_INDEX:
                    return _int105;
                case INT106_INDEX:
                    return _int106;
                case INT107_INDEX:
                    return _int107;
                case INT108_INDEX:
                    return _int108;
                case INT109_INDEX:
                    return _int109;
                case INT110_INDEX:
                    return _int110;
                case INT111_INDEX:
                    return _int111;
                case INT112_INDEX:
                    return _int112;
                case INT113_INDEX:
                    return _int113;
                case INT114_INDEX:
                    return _int114;
                case INT115_INDEX:
                    return _int115;
                case INT116_INDEX:
                    return _int116;
                case INT117_INDEX:
                    return _int117;
                case INT118_INDEX:
                    return _int118;
                case INT119_INDEX:
                    return _int119;
                case INT120_INDEX:
                    return _int120;
                case INT121_INDEX:
                    return _int121;
                case INT122_INDEX:
                    return _int122;
                case INT123_INDEX:
                    return _int123;
                case INT124_INDEX:
                    return _int124;
                case INT125_INDEX:
                    return _int125;
                case INT126_INDEX:
                    return _int126;
                case INT127_INDEX:
                    return _int127;
                case INT128_INDEX:
                    return _int128;
                case INT129_INDEX:
                    return _int129;
                case INT130_INDEX:
                    return _int130;
                case INT131_INDEX:
                    return _int131;
                case INT132_INDEX:
                    return _int132;
                case INT133_INDEX:
                    return _int133;
                case INT134_INDEX:
                    return _int134;
                case INT135_INDEX:
                    return _int135;
                case INT136_INDEX:
                    return _int136;
                case INT137_INDEX:
                    return _int137;
                case INT138_INDEX:
                    return _int138;
                case INT139_INDEX:
                    return _int139;
                case INT140_INDEX:
                    return _int140;
                case INT141_INDEX:
                    return _int141;
                case INT142_INDEX:
                    return _int142;
                case INT143_INDEX:
                    return _int143;
                case INT144_INDEX:
                    return _int144;
                case INT145_INDEX:
                    return _int145;
                case INT146_INDEX:
                    return _int146;
                case INT147_INDEX:
                    return _int147;
                case INT148_INDEX:
                    return _int148;
                case INT149_INDEX:
                    return _int149;
                case INT150_INDEX:
                    return _int150;
                case INT151_INDEX:
                    return _int151;
                case INT152_INDEX:
                    return _int152;
                case INT153_INDEX:
                    return _int153;
                case INT154_INDEX:
                    return _int154;
                case INT155_INDEX:
                    return _int155;
                case INT156_INDEX:
                    return _int156;
                case INT157_INDEX:
                    return _int157;
                case INT158_INDEX:
                    return _int158;
                case INT159_INDEX:
                    return _int159;
                case INT160_INDEX:
                    return _int160;
                case INT161_INDEX:
                    return _int161;
                case INT162_INDEX:
                    return _int162;
                case INT163_INDEX:
                    return _int163;
                case INT164_INDEX:
                    return _int164;
                case INT165_INDEX:
                    return _int165;
                case INT166_INDEX:
                    return _int166;
                case INT167_INDEX:
                    return _int167;
                case INT168_INDEX:
                    return _int168;
                case INT169_INDEX:
                    return _int169;
                case INT170_INDEX:
                    return _int170;
                case INT171_INDEX:
                    return _int171;
                case INT172_INDEX:
                    return _int172;
                case INT173_INDEX:
                    return _int173;
                case INT174_INDEX:
                    return _int174;
                case INT175_INDEX:
                    return _int175;
                case INT176_INDEX:
                    return _int176;
                case INT177_INDEX:
                    return _int177;
                case INT178_INDEX:
                    return _int178;
                case INT179_INDEX:
                    return _int179;
                case INT180_INDEX:
                    return _int180;
                case INT181_INDEX:
                    return _int181;
                case INT182_INDEX:
                    return _int182;
                case INT183_INDEX:
                    return _int183;
                case INT184_INDEX:
                    return _int184;
                case INT185_INDEX:
                    return _int185;
                case INT186_INDEX:
                    return _int186;
                case INT187_INDEX:
                    return _int187;
                case INT188_INDEX:
                    return _int188;
                case INT189_INDEX:
                    return _int189;
                case INT190_INDEX:
                    return _int190;
                case INT191_INDEX:
                    return _int191;
                case INT192_INDEX:
                    return _int192;
                case INT193_INDEX:
                    return _int193;
                case INT194_INDEX:
                    return _int194;
                case INT195_INDEX:
                    return _int195;
                case INT196_INDEX:
                    return _int196;
                case INT197_INDEX:
                    return _int197;
                case INT198_INDEX:
                    return _int198;
                case INT199_INDEX:
                    return _int199;
                case INT200_INDEX:
                    return _int200;
                case INT201_INDEX:
                    return _int201;
                case INT202_INDEX:
                    return _int202;
                case INT203_INDEX:
                    return _int203;
                case INT204_INDEX:
                    return _int204;
                case INT205_INDEX:
                    return _int205;
                case INT206_INDEX:
                    return _int206;
                case INT207_INDEX:
                    return _int207;
                case INT208_INDEX:
                    return _int208;
                case INT209_INDEX:
                    return _int209;
                case INT210_INDEX:
                    return _int210;
                case INT211_INDEX:
                    return _int211;
                case INT212_INDEX:
                    return _int212;
                case INT213_INDEX:
                    return _int213;
                case INT214_INDEX:
                    return _int214;
                case INT215_INDEX:
                    return _int215;
                case INT216_INDEX:
                    return _int216;
                case INT217_INDEX:
                    return _int217;
                case INT218_INDEX:
                    return _int218;
                case INT219_INDEX:
                    return _int219;
                case INT220_INDEX:
                    return _int220;
                case INT221_INDEX:
                    return _int221;
                case INT222_INDEX:
                    return _int222;
                case INT223_INDEX:
                    return _int223;
                case INT224_INDEX:
                    return _int224;
                case INT225_INDEX:
                    return _int225;
                case INT226_INDEX:
                    return _int226;
                case INT227_INDEX:
                    return _int227;
                case INT228_INDEX:
                    return _int228;
                case INT229_INDEX:
                    return _int229;
                case INT230_INDEX:
                    return _int230;
                case INT231_INDEX:
                    return _int231;
                case INT232_INDEX:
                    return _int232;
                case INT233_INDEX:
                    return _int233;
                case INT234_INDEX:
                    return _int234;
                case INT235_INDEX:
                    return _int235;
                case INT236_INDEX:
                    return _int236;
                case INT237_INDEX:
                    return _int237;
                case INT238_INDEX:
                    return _int238;
                case INT239_INDEX:
                    return _int239;
                case INT240_INDEX:
                    return _int240;
                case INT241_INDEX:
                    return _int241;
                case INT242_INDEX:
                    return _int242;
                case INT243_INDEX:
                    return _int243;
                case INT244_INDEX:
                    return _int244;
                case INT245_INDEX:
                    return _int245;
                case INT246_INDEX:
                    return _int246;
                case INT247_INDEX:
                    return _int247;
                case INT248_INDEX:
                    return _int248;
                case INT249_INDEX:
                    return _int249;
                case INT250_INDEX:
                    return _int250;
                case INT251_INDEX:
                    return _int251;
                case INT252_INDEX:
                    return _int252;
                case INT253_INDEX:
                    return _int253;
                case INT254_INDEX:
                    return _int254;
                case INT255_INDEX:
                    return _int255;
                case INT256_INDEX:
                    return _int256;
                case INT257_INDEX:
                    return _int257;
                case INT258_INDEX:
                    return _int258;
                case INT259_INDEX:
                    return _int259;
                case INT260_INDEX:
                    return _int260;
                case INT261_INDEX:
                    return _int261;
                case INT262_INDEX:
                    return _int262;
                case INT263_INDEX:
                    return _int263;
                case INT264_INDEX:
                    return _int264;
                case INT265_INDEX:
                    return _int265;
                case INT266_INDEX:
                    return _int266;
                case INT267_INDEX:
                    return _int267;
                case INT268_INDEX:
                    return _int268;
                case INT269_INDEX:
                    return _int269;
                case INT270_INDEX:
                    return _int270;
                case INT271_INDEX:
                    return _int271;
                case INT272_INDEX:
                    return _int272;
                case INT273_INDEX:
                    return _int273;
                case INT274_INDEX:
                    return _int274;
                case INT275_INDEX:
                    return _int275;
                case INT276_INDEX:
                    return _int276;
                case INT277_INDEX:
                    return _int277;
                case INT278_INDEX:
                    return _int278;
                case INT279_INDEX:
                    return _int279;
                case INT280_INDEX:
                    return _int280;
                case INT281_INDEX:
                    return _int281;
                case INT282_INDEX:
                    return _int282;
                case INT283_INDEX:
                    return _int283;
                case INT284_INDEX:
                    return _int284;
                case INT285_INDEX:
                    return _int285;
                case INT286_INDEX:
                    return _int286;
                case INT287_INDEX:
                    return _int287;
                case INT288_INDEX:
                    return _int288;
                case INT289_INDEX:
                    return _int289;
                case INT290_INDEX:
                    return _int290;
                case INT291_INDEX:
                    return _int291;
                case INT292_INDEX:
                    return _int292;
                case INT293_INDEX:
                    return _int293;
                case INT294_INDEX:
                    return _int294;
                case INT295_INDEX:
                    return _int295;
                case INT296_INDEX:
                    return _int296;
                case INT297_INDEX:
                    return _int297;
                case INT298_INDEX:
                    return _int298;
                case INT299_INDEX:
                    return _int299;
                default:
                    return super.getAsObject(index);
            }
        }

        @Override
        public void setAsObject(int index, java.lang.Object value) {
            switch (index) {
                case INT0_INDEX:
                    _int0 = ((java.lang.Integer) value).intValue();
                    break;
                case INT1_INDEX:
                    _int1 = ((java.lang.Integer) value).intValue();
                    break;
                case INT2_INDEX:
                    _int2 = ((java.lang.Integer) value).intValue();
                    break;
                case INT3_INDEX:
                    _int3 = ((java.lang.Integer) value).intValue();
                    break;
                case INT4_INDEX:
                    _int4 = ((java.lang.Integer) value).intValue();
                    break;
                case INT5_INDEX:
                    _int5 = ((java.lang.Integer) value).intValue();
                    break;
                case INT6_INDEX:
                    _int6 = ((java.lang.Integer) value).intValue();
                    break;
                case INT7_INDEX:
                    _int7 = ((java.lang.Integer) value).intValue();
                    break;
                case INT8_INDEX:
                    _int8 = ((java.lang.Integer) value).intValue();
                    break;
                case INT9_INDEX:
                    _int9 = ((java.lang.Integer) value).intValue();
                    break;
                case INT10_INDEX:
                    _int10 = ((java.lang.Integer) value).intValue();
                    break;
                case INT11_INDEX:
                    _int11 = ((java.lang.Integer) value).intValue();
                    break;
                case INT12_INDEX:
                    _int12 = ((java.lang.Integer) value).intValue();
                    break;
                case INT13_INDEX:
                    _int13 = ((java.lang.Integer) value).intValue();
                    break;
                case INT14_INDEX:
                    _int14 = ((java.lang.Integer) value).intValue();
                    break;
                case INT15_INDEX:
                    _int15 = ((java.lang.Integer) value).intValue();
                    break;
                case INT16_INDEX:
                    _int16 = ((java.lang.Integer) value).intValue();
                    break;
                case INT17_INDEX:
                    _int17 = ((java.lang.Integer) value).intValue();
                    break;
                case INT18_INDEX:
                    _int18 = ((java.lang.Integer) value).intValue();
                    break;
                case INT19_INDEX:
                    _int19 = ((java.lang.Integer) value).intValue();
                    break;
                case INT20_INDEX:
                    _int20 = ((java.lang.Integer) value).intValue();
                    break;
                case INT21_INDEX:
                    _int21 = ((java.lang.Integer) value).intValue();
                    break;
                case INT22_INDEX:
                    _int22 = ((java.lang.Integer) value).intValue();
                    break;
                case INT23_INDEX:
                    _int23 = ((java.lang.Integer) value).intValue();
                    break;
                case INT24_INDEX:
                    _int24 = ((java.lang.Integer) value).intValue();
                    break;
                case INT25_INDEX:
                    _int25 = ((java.lang.Integer) value).intValue();
                    break;
                case INT26_INDEX:
                    _int26 = ((java.lang.Integer) value).intValue();
                    break;
                case INT27_INDEX:
                    _int27 = ((java.lang.Integer) value).intValue();
                    break;
                case INT28_INDEX:
                    _int28 = ((java.lang.Integer) value).intValue();
                    break;
                case INT29_INDEX:
                    _int29 = ((java.lang.Integer) value).intValue();
                    break;
                case INT30_INDEX:
                    _int30 = ((java.lang.Integer) value).intValue();
                    break;
                case INT31_INDEX:
                    _int31 = ((java.lang.Integer) value).intValue();
                    break;
                case INT32_INDEX:
                    _int32 = ((java.lang.Integer) value).intValue();
                    break;
                case INT33_INDEX:
                    _int33 = ((java.lang.Integer) value).intValue();
                    break;
                case INT34_INDEX:
                    _int34 = ((java.lang.Integer) value).intValue();
                    break;
                case INT35_INDEX:
                    _int35 = ((java.lang.Integer) value).intValue();
                    break;
                case INT36_INDEX:
                    _int36 = ((java.lang.Integer) value).intValue();
                    break;
                case INT37_INDEX:
                    _int37 = ((java.lang.Integer) value).intValue();
                    break;
                case INT38_INDEX:
                    _int38 = ((java.lang.Integer) value).intValue();
                    break;
                case INT39_INDEX:
                    _int39 = ((java.lang.Integer) value).intValue();
                    break;
                case INT40_INDEX:
                    _int40 = ((java.lang.Integer) value).intValue();
                    break;
                case INT41_INDEX:
                    _int41 = ((java.lang.Integer) value).intValue();
                    break;
                case INT42_INDEX:
                    _int42 = ((java.lang.Integer) value).intValue();
                    break;
                case INT43_INDEX:
                    _int43 = ((java.lang.Integer) value).intValue();
                    break;
                case INT44_INDEX:
                    _int44 = ((java.lang.Integer) value).intValue();
                    break;
                case INT45_INDEX:
                    _int45 = ((java.lang.Integer) value).intValue();
                    break;
                case INT46_INDEX:
                    _int46 = ((java.lang.Integer) value).intValue();
                    break;
                case INT47_INDEX:
                    _int47 = ((java.lang.Integer) value).intValue();
                    break;
                case INT48_INDEX:
                    _int48 = ((java.lang.Integer) value).intValue();
                    break;
                case INT49_INDEX:
                    _int49 = ((java.lang.Integer) value).intValue();
                    break;
                case INT50_INDEX:
                    _int50 = ((java.lang.Integer) value).intValue();
                    break;
                case INT51_INDEX:
                    _int51 = ((java.lang.Integer) value).intValue();
                    break;
                case INT52_INDEX:
                    _int52 = ((java.lang.Integer) value).intValue();
                    break;
                case INT53_INDEX:
                    _int53 = ((java.lang.Integer) value).intValue();
                    break;
                case INT54_INDEX:
                    _int54 = ((java.lang.Integer) value).intValue();
                    break;
                case INT55_INDEX:
                    _int55 = ((java.lang.Integer) value).intValue();
                    break;
                case INT56_INDEX:
                    _int56 = ((java.lang.Integer) value).intValue();
                    break;
                case INT57_INDEX:
                    _int57 = ((java.lang.Integer) value).intValue();
                    break;
                case INT58_INDEX:
                    _int58 = ((java.lang.Integer) value).intValue();
                    break;
                case INT59_INDEX:
                    _int59 = ((java.lang.Integer) value).intValue();
                    break;
                case INT60_INDEX:
                    _int60 = ((java.lang.Integer) value).intValue();
                    break;
                case INT61_INDEX:
                    _int61 = ((java.lang.Integer) value).intValue();
                    break;
                case INT62_INDEX:
                    _int62 = ((java.lang.Integer) value).intValue();
                    break;
                case INT63_INDEX:
                    _int63 = ((java.lang.Integer) value).intValue();
                    break;
                case INT64_INDEX:
                    _int64 = ((java.lang.Integer) value).intValue();
                    break;
                case INT65_INDEX:
                    _int65 = ((java.lang.Integer) value).intValue();
                    break;
                case INT66_INDEX:
                    _int66 = ((java.lang.Integer) value).intValue();
                    break;
                case INT67_INDEX:
                    _int67 = ((java.lang.Integer) value).intValue();
                    break;
                case INT68_INDEX:
                    _int68 = ((java.lang.Integer) value).intValue();
                    break;
                case INT69_INDEX:
                    _int69 = ((java.lang.Integer) value).intValue();
                    break;
                case INT70_INDEX:
                    _int70 = ((java.lang.Integer) value).intValue();
                    break;
                case INT71_INDEX:
                    _int71 = ((java.lang.Integer) value).intValue();
                    break;
                case INT72_INDEX:
                    _int72 = ((java.lang.Integer) value).intValue();
                    break;
                case INT73_INDEX:
                    _int73 = ((java.lang.Integer) value).intValue();
                    break;
                case INT74_INDEX:
                    _int74 = ((java.lang.Integer) value).intValue();
                    break;
                case INT75_INDEX:
                    _int75 = ((java.lang.Integer) value).intValue();
                    break;
                case INT76_INDEX:
                    _int76 = ((java.lang.Integer) value).intValue();
                    break;
                case INT77_INDEX:
                    _int77 = ((java.lang.Integer) value).intValue();
                    break;
                case INT78_INDEX:
                    _int78 = ((java.lang.Integer) value).intValue();
                    break;
                case INT79_INDEX:
                    _int79 = ((java.lang.Integer) value).intValue();
                    break;
                case INT80_INDEX:
                    _int80 = ((java.lang.Integer) value).intValue();
                    break;
                case INT81_INDEX:
                    _int81 = ((java.lang.Integer) value).intValue();
                    break;
                case INT82_INDEX:
                    _int82 = ((java.lang.Integer) value).intValue();
                    break;
                case INT83_INDEX:
                    _int83 = ((java.lang.Integer) value).intValue();
                    break;
                case INT84_INDEX:
                    _int84 = ((java.lang.Integer) value).intValue();
                    break;
                case INT85_INDEX:
                    _int85 = ((java.lang.Integer) value).intValue();
                    break;
                case INT86_INDEX:
                    _int86 = ((java.lang.Integer) value).intValue();
                    break;
                case INT87_INDEX:
                    _int87 = ((java.lang.Integer) value).intValue();
                    break;
                case INT88_INDEX:
                    _int88 = ((java.lang.Integer) value).intValue();
                    break;
                case INT89_INDEX:
                    _int89 = ((java.lang.Integer) value).intValue();
                    break;
                case INT90_INDEX:
                    _int90 = ((java.lang.Integer) value).intValue();
                    break;
                case INT91_INDEX:
                    _int91 = ((java.lang.Integer) value).intValue();
                    break;
                case INT92_INDEX:
                    _int92 = ((java.lang.Integer) value).intValue();
                    break;
                case INT93_INDEX:
                    _int93 = ((java.lang.Integer) value).intValue();
                    break;
                case INT94_INDEX:
                    _int94 = ((java.lang.Integer) value).intValue();
                    break;
                case INT95_INDEX:
                    _int95 = ((java.lang.Integer) value).intValue();
                    break;
                case INT96_INDEX:
                    _int96 = ((java.lang.Integer) value).intValue();
                    break;
                case INT97_INDEX:
                    _int97 = ((java.lang.Integer) value).intValue();
                    break;
                case INT98_INDEX:
                    _int98 = ((java.lang.Integer) value).intValue();
                    break;
                case INT99_INDEX:
                    _int99 = ((java.lang.Integer) value).intValue();
                    break;
                case INT100_INDEX:
                    _int100 = ((java.lang.Integer) value).intValue();
                    break;
                case INT101_INDEX:
                    _int101 = ((java.lang.Integer) value).intValue();
                    break;
                case INT102_INDEX:
                    _int102 = ((java.lang.Integer) value).intValue();
                    break;
                case INT103_INDEX:
                    _int103 = ((java.lang.Integer) value).intValue();
                    break;
                case INT104_INDEX:
                    _int104 = ((java.lang.Integer) value).intValue();
                    break;
                case INT105_INDEX:
                    _int105 = ((java.lang.Integer) value).intValue();
                    break;
                case INT106_INDEX:
                    _int106 = ((java.lang.Integer) value).intValue();
                    break;
                case INT107_INDEX:
                    _int107 = ((java.lang.Integer) value).intValue();
                    break;
                case INT108_INDEX:
                    _int108 = ((java.lang.Integer) value).intValue();
                    break;
                case INT109_INDEX:
                    _int109 = ((java.lang.Integer) value).intValue();
                    break;
                case INT110_INDEX:
                    _int110 = ((java.lang.Integer) value).intValue();
                    break;
                case INT111_INDEX:
                    _int111 = ((java.lang.Integer) value).intValue();
                    break;
                case INT112_INDEX:
                    _int112 = ((java.lang.Integer) value).intValue();
                    break;
                case INT113_INDEX:
                    _int113 = ((java.lang.Integer) value).intValue();
                    break;
                case INT114_INDEX:
                    _int114 = ((java.lang.Integer) value).intValue();
                    break;
                case INT115_INDEX:
                    _int115 = ((java.lang.Integer) value).intValue();
                    break;
                case INT116_INDEX:
                    _int116 = ((java.lang.Integer) value).intValue();
                    break;
                case INT117_INDEX:
                    _int117 = ((java.lang.Integer) value).intValue();
                    break;
                case INT118_INDEX:
                    _int118 = ((java.lang.Integer) value).intValue();
                    break;
                case INT119_INDEX:
                    _int119 = ((java.lang.Integer) value).intValue();
                    break;
                case INT120_INDEX:
                    _int120 = ((java.lang.Integer) value).intValue();
                    break;
                case INT121_INDEX:
                    _int121 = ((java.lang.Integer) value).intValue();
                    break;
                case INT122_INDEX:
                    _int122 = ((java.lang.Integer) value).intValue();
                    break;
                case INT123_INDEX:
                    _int123 = ((java.lang.Integer) value).intValue();
                    break;
                case INT124_INDEX:
                    _int124 = ((java.lang.Integer) value).intValue();
                    break;
                case INT125_INDEX:
                    _int125 = ((java.lang.Integer) value).intValue();
                    break;
                case INT126_INDEX:
                    _int126 = ((java.lang.Integer) value).intValue();
                    break;
                case INT127_INDEX:
                    _int127 = ((java.lang.Integer) value).intValue();
                    break;
                case INT128_INDEX:
                    _int128 = ((java.lang.Integer) value).intValue();
                    break;
                case INT129_INDEX:
                    _int129 = ((java.lang.Integer) value).intValue();
                    break;
                case INT130_INDEX:
                    _int130 = ((java.lang.Integer) value).intValue();
                    break;
                case INT131_INDEX:
                    _int131 = ((java.lang.Integer) value).intValue();
                    break;
                case INT132_INDEX:
                    _int132 = ((java.lang.Integer) value).intValue();
                    break;
                case INT133_INDEX:
                    _int133 = ((java.lang.Integer) value).intValue();
                    break;
                case INT134_INDEX:
                    _int134 = ((java.lang.Integer) value).intValue();
                    break;
                case INT135_INDEX:
                    _int135 = ((java.lang.Integer) value).intValue();
                    break;
                case INT136_INDEX:
                    _int136 = ((java.lang.Integer) value).intValue();
                    break;
                case INT137_INDEX:
                    _int137 = ((java.lang.Integer) value).intValue();
                    break;
                case INT138_INDEX:
                    _int138 = ((java.lang.Integer) value).intValue();
                    break;
                case INT139_INDEX:
                    _int139 = ((java.lang.Integer) value).intValue();
                    break;
                case INT140_INDEX:
                    _int140 = ((java.lang.Integer) value).intValue();
                    break;
                case INT141_INDEX:
                    _int141 = ((java.lang.Integer) value).intValue();
                    break;
                case INT142_INDEX:
                    _int142 = ((java.lang.Integer) value).intValue();
                    break;
                case INT143_INDEX:
                    _int143 = ((java.lang.Integer) value).intValue();
                    break;
                case INT144_INDEX:
                    _int144 = ((java.lang.Integer) value).intValue();
                    break;
                case INT145_INDEX:
                    _int145 = ((java.lang.Integer) value).intValue();
                    break;
                case INT146_INDEX:
                    _int146 = ((java.lang.Integer) value).intValue();
                    break;
                case INT147_INDEX:
                    _int147 = ((java.lang.Integer) value).intValue();
                    break;
                case INT148_INDEX:
                    _int148 = ((java.lang.Integer) value).intValue();
                    break;
                case INT149_INDEX:
                    _int149 = ((java.lang.Integer) value).intValue();
                    break;
                case INT150_INDEX:
                    _int150 = ((java.lang.Integer) value).intValue();
                    break;
                case INT151_INDEX:
                    _int151 = ((java.lang.Integer) value).intValue();
                    break;
                case INT152_INDEX:
                    _int152 = ((java.lang.Integer) value).intValue();
                    break;
                case INT153_INDEX:
                    _int153 = ((java.lang.Integer) value).intValue();
                    break;
                case INT154_INDEX:
                    _int154 = ((java.lang.Integer) value).intValue();
                    break;
                case INT155_INDEX:
                    _int155 = ((java.lang.Integer) value).intValue();
                    break;
                case INT156_INDEX:
                    _int156 = ((java.lang.Integer) value).intValue();
                    break;
                case INT157_INDEX:
                    _int157 = ((java.lang.Integer) value).intValue();
                    break;
                case INT158_INDEX:
                    _int158 = ((java.lang.Integer) value).intValue();
                    break;
                case INT159_INDEX:
                    _int159 = ((java.lang.Integer) value).intValue();
                    break;
                case INT160_INDEX:
                    _int160 = ((java.lang.Integer) value).intValue();
                    break;
                case INT161_INDEX:
                    _int161 = ((java.lang.Integer) value).intValue();
                    break;
                case INT162_INDEX:
                    _int162 = ((java.lang.Integer) value).intValue();
                    break;
                case INT163_INDEX:
                    _int163 = ((java.lang.Integer) value).intValue();
                    break;
                case INT164_INDEX:
                    _int164 = ((java.lang.Integer) value).intValue();
                    break;
                case INT165_INDEX:
                    _int165 = ((java.lang.Integer) value).intValue();
                    break;
                case INT166_INDEX:
                    _int166 = ((java.lang.Integer) value).intValue();
                    break;
                case INT167_INDEX:
                    _int167 = ((java.lang.Integer) value).intValue();
                    break;
                case INT168_INDEX:
                    _int168 = ((java.lang.Integer) value).intValue();
                    break;
                case INT169_INDEX:
                    _int169 = ((java.lang.Integer) value).intValue();
                    break;
                case INT170_INDEX:
                    _int170 = ((java.lang.Integer) value).intValue();
                    break;
                case INT171_INDEX:
                    _int171 = ((java.lang.Integer) value).intValue();
                    break;
                case INT172_INDEX:
                    _int172 = ((java.lang.Integer) value).intValue();
                    break;
                case INT173_INDEX:
                    _int173 = ((java.lang.Integer) value).intValue();
                    break;
                case INT174_INDEX:
                    _int174 = ((java.lang.Integer) value).intValue();
                    break;
                case INT175_INDEX:
                    _int175 = ((java.lang.Integer) value).intValue();
                    break;
                case INT176_INDEX:
                    _int176 = ((java.lang.Integer) value).intValue();
                    break;
                case INT177_INDEX:
                    _int177 = ((java.lang.Integer) value).intValue();
                    break;
                case INT178_INDEX:
                    _int178 = ((java.lang.Integer) value).intValue();
                    break;
                case INT179_INDEX:
                    _int179 = ((java.lang.Integer) value).intValue();
                    break;
                case INT180_INDEX:
                    _int180 = ((java.lang.Integer) value).intValue();
                    break;
                case INT181_INDEX:
                    _int181 = ((java.lang.Integer) value).intValue();
                    break;
                case INT182_INDEX:
                    _int182 = ((java.lang.Integer) value).intValue();
                    break;
                case INT183_INDEX:
                    _int183 = ((java.lang.Integer) value).intValue();
                    break;
                case INT184_INDEX:
                    _int184 = ((java.lang.Integer) value).intValue();
                    break;
                case INT185_INDEX:
                    _int185 = ((java.lang.Integer) value).intValue();
                    break;
                case INT186_INDEX:
                    _int186 = ((java.lang.Integer) value).intValue();
                    break;
                case INT187_INDEX:
                    _int187 = ((java.lang.Integer) value).intValue();
                    break;
                case INT188_INDEX:
                    _int188 = ((java.lang.Integer) value).intValue();
                    break;
                case INT189_INDEX:
                    _int189 = ((java.lang.Integer) value).intValue();
                    break;
                case INT190_INDEX:
                    _int190 = ((java.lang.Integer) value).intValue();
                    break;
                case INT191_INDEX:
                    _int191 = ((java.lang.Integer) value).intValue();
                    break;
                case INT192_INDEX:
                    _int192 = ((java.lang.Integer) value).intValue();
                    break;
                case INT193_INDEX:
                    _int193 = ((java.lang.Integer) value).intValue();
                    break;
                case INT194_INDEX:
                    _int194 = ((java.lang.Integer) value).intValue();
                    break;
                case INT195_INDEX:
                    _int195 = ((java.lang.Integer) value).intValue();
                    break;
                case INT196_INDEX:
                    _int196 = ((java.lang.Integer) value).intValue();
                    break;
                case INT197_INDEX:
                    _int197 = ((java.lang.Integer) value).intValue();
                    break;
                case INT198_INDEX:
                    _int198 = ((java.lang.Integer) value).intValue();
                    break;
                case INT199_INDEX:
                    _int199 = ((java.lang.Integer) value).intValue();
                    break;
                case INT200_INDEX:
                    _int200 = ((java.lang.Integer) value).intValue();
                    break;
                case INT201_INDEX:
                    _int201 = ((java.lang.Integer) value).intValue();
                    break;
                case INT202_INDEX:
                    _int202 = ((java.lang.Integer) value).intValue();
                    break;
                case INT203_INDEX:
                    _int203 = ((java.lang.Integer) value).intValue();
                    break;
                case INT204_INDEX:
                    _int204 = ((java.lang.Integer) value).intValue();
                    break;
                case INT205_INDEX:
                    _int205 = ((java.lang.Integer) value).intValue();
                    break;
                case INT206_INDEX:
                    _int206 = ((java.lang.Integer) value).intValue();
                    break;
                case INT207_INDEX:
                    _int207 = ((java.lang.Integer) value).intValue();
                    break;
                case INT208_INDEX:
                    _int208 = ((java.lang.Integer) value).intValue();
                    break;
                case INT209_INDEX:
                    _int209 = ((java.lang.Integer) value).intValue();
                    break;
                case INT210_INDEX:
                    _int210 = ((java.lang.Integer) value).intValue();
                    break;
                case INT211_INDEX:
                    _int211 = ((java.lang.Integer) value).intValue();
                    break;
                case INT212_INDEX:
                    _int212 = ((java.lang.Integer) value).intValue();
                    break;
                case INT213_INDEX:
                    _int213 = ((java.lang.Integer) value).intValue();
                    break;
                case INT214_INDEX:
                    _int214 = ((java.lang.Integer) value).intValue();
                    break;
                case INT215_INDEX:
                    _int215 = ((java.lang.Integer) value).intValue();
                    break;
                case INT216_INDEX:
                    _int216 = ((java.lang.Integer) value).intValue();
                    break;
                case INT217_INDEX:
                    _int217 = ((java.lang.Integer) value).intValue();
                    break;
                case INT218_INDEX:
                    _int218 = ((java.lang.Integer) value).intValue();
                    break;
                case INT219_INDEX:
                    _int219 = ((java.lang.Integer) value).intValue();
                    break;
                case INT220_INDEX:
                    _int220 = ((java.lang.Integer) value).intValue();
                    break;
                case INT221_INDEX:
                    _int221 = ((java.lang.Integer) value).intValue();
                    break;
                case INT222_INDEX:
                    _int222 = ((java.lang.Integer) value).intValue();
                    break;
                case INT223_INDEX:
                    _int223 = ((java.lang.Integer) value).intValue();
                    break;
                case INT224_INDEX:
                    _int224 = ((java.lang.Integer) value).intValue();
                    break;
                case INT225_INDEX:
                    _int225 = ((java.lang.Integer) value).intValue();
                    break;
                case INT226_INDEX:
                    _int226 = ((java.lang.Integer) value).intValue();
                    break;
                case INT227_INDEX:
                    _int227 = ((java.lang.Integer) value).intValue();
                    break;
                case INT228_INDEX:
                    _int228 = ((java.lang.Integer) value).intValue();
                    break;
                case INT229_INDEX:
                    _int229 = ((java.lang.Integer) value).intValue();
                    break;
                case INT230_INDEX:
                    _int230 = ((java.lang.Integer) value).intValue();
                    break;
                case INT231_INDEX:
                    _int231 = ((java.lang.Integer) value).intValue();
                    break;
                case INT232_INDEX:
                    _int232 = ((java.lang.Integer) value).intValue();
                    break;
                case INT233_INDEX:
                    _int233 = ((java.lang.Integer) value).intValue();
                    break;
                case INT234_INDEX:
                    _int234 = ((java.lang.Integer) value).intValue();
                    break;
                case INT235_INDEX:
                    _int235 = ((java.lang.Integer) value).intValue();
                    break;
                case INT236_INDEX:
                    _int236 = ((java.lang.Integer) value).intValue();
                    break;
                case INT237_INDEX:
                    _int237 = ((java.lang.Integer) value).intValue();
                    break;
                case INT238_INDEX:
                    _int238 = ((java.lang.Integer) value).intValue();
                    break;
                case INT239_INDEX:
                    _int239 = ((java.lang.Integer) value).intValue();
                    break;
                case INT240_INDEX:
                    _int240 = ((java.lang.Integer) value).intValue();
                    break;
                case INT241_INDEX:
                    _int241 = ((java.lang.Integer) value).intValue();
                    break;
                case INT242_INDEX:
                    _int242 = ((java.lang.Integer) value).intValue();
                    break;
                case INT243_INDEX:
                    _int243 = ((java.lang.Integer) value).intValue();
                    break;
                case INT244_INDEX:
                    _int244 = ((java.lang.Integer) value).intValue();
                    break;
                case INT245_INDEX:
                    _int245 = ((java.lang.Integer) value).intValue();
                    break;
                case INT246_INDEX:
                    _int246 = ((java.lang.Integer) value).intValue();
                    break;
                case INT247_INDEX:
                    _int247 = ((java.lang.Integer) value).intValue();
                    break;
                case INT248_INDEX:
                    _int248 = ((java.lang.Integer) value).intValue();
                    break;
                case INT249_INDEX:
                    _int249 = ((java.lang.Integer) value).intValue();
                    break;
                case INT250_INDEX:
                    _int250 = ((java.lang.Integer) value).intValue();
                    break;
                case INT251_INDEX:
                    _int251 = ((java.lang.Integer) value).intValue();
                    break;
                case INT252_INDEX:
                    _int252 = ((java.lang.Integer) value).intValue();
                    break;
                case INT253_INDEX:
                    _int253 = ((java.lang.Integer) value).intValue();
                    break;
                case INT254_INDEX:
                    _int254 = ((java.lang.Integer) value).intValue();
                    break;
                case INT255_INDEX:
                    _int255 = ((java.lang.Integer) value).intValue();
                    break;
                case INT256_INDEX:
                    _int256 = ((java.lang.Integer) value).intValue();
                    break;
                case INT257_INDEX:
                    _int257 = ((java.lang.Integer) value).intValue();
                    break;
                case INT258_INDEX:
                    _int258 = ((java.lang.Integer) value).intValue();
                    break;
                case INT259_INDEX:
                    _int259 = ((java.lang.Integer) value).intValue();
                    break;
                case INT260_INDEX:
                    _int260 = ((java.lang.Integer) value).intValue();
                    break;
                case INT261_INDEX:
                    _int261 = ((java.lang.Integer) value).intValue();
                    break;
                case INT262_INDEX:
                    _int262 = ((java.lang.Integer) value).intValue();
                    break;
                case INT263_INDEX:
                    _int263 = ((java.lang.Integer) value).intValue();
                    break;
                case INT264_INDEX:
                    _int264 = ((java.lang.Integer) value).intValue();
                    break;
                case INT265_INDEX:
                    _int265 = ((java.lang.Integer) value).intValue();
                    break;
                case INT266_INDEX:
                    _int266 = ((java.lang.Integer) value).intValue();
                    break;
                case INT267_INDEX:
                    _int267 = ((java.lang.Integer) value).intValue();
                    break;
                case INT268_INDEX:
                    _int268 = ((java.lang.Integer) value).intValue();
                    break;
                case INT269_INDEX:
                    _int269 = ((java.lang.Integer) value).intValue();
                    break;
                case INT270_INDEX:
                    _int270 = ((java.lang.Integer) value).intValue();
                    break;
                case INT271_INDEX:
                    _int271 = ((java.lang.Integer) value).intValue();
                    break;
                case INT272_INDEX:
                    _int272 = ((java.lang.Integer) value).intValue();
                    break;
                case INT273_INDEX:
                    _int273 = ((java.lang.Integer) value).intValue();
                    break;
                case INT274_INDEX:
                    _int274 = ((java.lang.Integer) value).intValue();
                    break;
                case INT275_INDEX:
                    _int275 = ((java.lang.Integer) value).intValue();
                    break;
                case INT276_INDEX:
                    _int276 = ((java.lang.Integer) value).intValue();
                    break;
                case INT277_INDEX:
                    _int277 = ((java.lang.Integer) value).intValue();
                    break;
                case INT278_INDEX:
                    _int278 = ((java.lang.Integer) value).intValue();
                    break;
                case INT279_INDEX:
                    _int279 = ((java.lang.Integer) value).intValue();
                    break;
                case INT280_INDEX:
                    _int280 = ((java.lang.Integer) value).intValue();
                    break;
                case INT281_INDEX:
                    _int281 = ((java.lang.Integer) value).intValue();
                    break;
                case INT282_INDEX:
                    _int282 = ((java.lang.Integer) value).intValue();
                    break;
                case INT283_INDEX:
                    _int283 = ((java.lang.Integer) value).intValue();
                    break;
                case INT284_INDEX:
                    _int284 = ((java.lang.Integer) value).intValue();
                    break;
                case INT285_INDEX:
                    _int285 = ((java.lang.Integer) value).intValue();
                    break;
                case INT286_INDEX:
                    _int286 = ((java.lang.Integer) value).intValue();
                    break;
                case INT287_INDEX:
                    _int287 = ((java.lang.Integer) value).intValue();
                    break;
                case INT288_INDEX:
                    _int288 = ((java.lang.Integer) value).intValue();
                    break;
                case INT289_INDEX:
                    _int289 = ((java.lang.Integer) value).intValue();
                    break;
                case INT290_INDEX:
                    _int290 = ((java.lang.Integer) value).intValue();
                    break;
                case INT291_INDEX:
                    _int291 = ((java.lang.Integer) value).intValue();
                    break;
                case INT292_INDEX:
                    _int292 = ((java.lang.Integer) value).intValue();
                    break;
                case INT293_INDEX:
                    _int293 = ((java.lang.Integer) value).intValue();
                    break;
                case INT294_INDEX:
                    _int294 = ((java.lang.Integer) value).intValue();
                    break;
                case INT295_INDEX:
                    _int295 = ((java.lang.Integer) value).intValue();
                    break;
                case INT296_INDEX:
                    _int296 = ((java.lang.Integer) value).intValue();
                    break;
                case INT297_INDEX:
                    _int297 = ((java.lang.Integer) value).intValue();
                    break;
                case INT298_INDEX:
                    _int298 = ((java.lang.Integer) value).intValue();
                    break;
                case INT299_INDEX:
                    _int299 = ((java.lang.Integer) value).intValue();
                    break;
                default:
                    super.setAsObject(index, value);
                    break;
            }
        }

        @Override
        public void merge(org.objectfabric.TObject.Version next) {
            LimitN.Version source = (LimitN.Version) next;

            if (source.hasBits()) {
                if (source.getBit(INT0_INDEX))
                    _int0 = source._int0;

                if (source.getBit(INT1_INDEX))
                    _int1 = source._int1;

                if (source.getBit(INT2_INDEX))
                    _int2 = source._int2;

                if (source.getBit(INT3_INDEX))
                    _int3 = source._int3;

                if (source.getBit(INT4_INDEX))
                    _int4 = source._int4;

                if (source.getBit(INT5_INDEX))
                    _int5 = source._int5;

                if (source.getBit(INT6_INDEX))
                    _int6 = source._int6;

                if (source.getBit(INT7_INDEX))
                    _int7 = source._int7;

                if (source.getBit(INT8_INDEX))
                    _int8 = source._int8;

                if (source.getBit(INT9_INDEX))
                    _int9 = source._int9;

                if (source.getBit(INT10_INDEX))
                    _int10 = source._int10;

                if (source.getBit(INT11_INDEX))
                    _int11 = source._int11;

                if (source.getBit(INT12_INDEX))
                    _int12 = source._int12;

                if (source.getBit(INT13_INDEX))
                    _int13 = source._int13;

                if (source.getBit(INT14_INDEX))
                    _int14 = source._int14;

                if (source.getBit(INT15_INDEX))
                    _int15 = source._int15;

                if (source.getBit(INT16_INDEX))
                    _int16 = source._int16;

                if (source.getBit(INT17_INDEX))
                    _int17 = source._int17;

                if (source.getBit(INT18_INDEX))
                    _int18 = source._int18;

                if (source.getBit(INT19_INDEX))
                    _int19 = source._int19;

                if (source.getBit(INT20_INDEX))
                    _int20 = source._int20;

                if (source.getBit(INT21_INDEX))
                    _int21 = source._int21;

                if (source.getBit(INT22_INDEX))
                    _int22 = source._int22;

                if (source.getBit(INT23_INDEX))
                    _int23 = source._int23;

                if (source.getBit(INT24_INDEX))
                    _int24 = source._int24;

                if (source.getBit(INT25_INDEX))
                    _int25 = source._int25;

                if (source.getBit(INT26_INDEX))
                    _int26 = source._int26;

                if (source.getBit(INT27_INDEX))
                    _int27 = source._int27;

                if (source.getBit(INT28_INDEX))
                    _int28 = source._int28;

                if (source.getBit(INT29_INDEX))
                    _int29 = source._int29;

                if (source.getBit(INT30_INDEX))
                    _int30 = source._int30;

                if (source.getBit(INT31_INDEX))
                    _int31 = source._int31;

                if (source.getBit(INT32_INDEX))
                    _int32 = source._int32;

                if (source.getBit(INT33_INDEX))
                    _int33 = source._int33;

                if (source.getBit(INT34_INDEX))
                    _int34 = source._int34;

                if (source.getBit(INT35_INDEX))
                    _int35 = source._int35;

                if (source.getBit(INT36_INDEX))
                    _int36 = source._int36;

                if (source.getBit(INT37_INDEX))
                    _int37 = source._int37;

                if (source.getBit(INT38_INDEX))
                    _int38 = source._int38;

                if (source.getBit(INT39_INDEX))
                    _int39 = source._int39;

                if (source.getBit(INT40_INDEX))
                    _int40 = source._int40;

                if (source.getBit(INT41_INDEX))
                    _int41 = source._int41;

                if (source.getBit(INT42_INDEX))
                    _int42 = source._int42;

                if (source.getBit(INT43_INDEX))
                    _int43 = source._int43;

                if (source.getBit(INT44_INDEX))
                    _int44 = source._int44;

                if (source.getBit(INT45_INDEX))
                    _int45 = source._int45;

                if (source.getBit(INT46_INDEX))
                    _int46 = source._int46;

                if (source.getBit(INT47_INDEX))
                    _int47 = source._int47;

                if (source.getBit(INT48_INDEX))
                    _int48 = source._int48;

                if (source.getBit(INT49_INDEX))
                    _int49 = source._int49;

                if (source.getBit(INT50_INDEX))
                    _int50 = source._int50;

                if (source.getBit(INT51_INDEX))
                    _int51 = source._int51;

                if (source.getBit(INT52_INDEX))
                    _int52 = source._int52;

                if (source.getBit(INT53_INDEX))
                    _int53 = source._int53;

                if (source.getBit(INT54_INDEX))
                    _int54 = source._int54;

                if (source.getBit(INT55_INDEX))
                    _int55 = source._int55;

                if (source.getBit(INT56_INDEX))
                    _int56 = source._int56;

                if (source.getBit(INT57_INDEX))
                    _int57 = source._int57;

                if (source.getBit(INT58_INDEX))
                    _int58 = source._int58;

                if (source.getBit(INT59_INDEX))
                    _int59 = source._int59;

                if (source.getBit(INT60_INDEX))
                    _int60 = source._int60;

                if (source.getBit(INT61_INDEX))
                    _int61 = source._int61;

                if (source.getBit(INT62_INDEX))
                    _int62 = source._int62;

                if (source.getBit(INT63_INDEX))
                    _int63 = source._int63;

                if (source.getBit(INT64_INDEX))
                    _int64 = source._int64;

                if (source.getBit(INT65_INDEX))
                    _int65 = source._int65;

                if (source.getBit(INT66_INDEX))
                    _int66 = source._int66;

                if (source.getBit(INT67_INDEX))
                    _int67 = source._int67;

                if (source.getBit(INT68_INDEX))
                    _int68 = source._int68;

                if (source.getBit(INT69_INDEX))
                    _int69 = source._int69;

                if (source.getBit(INT70_INDEX))
                    _int70 = source._int70;

                if (source.getBit(INT71_INDEX))
                    _int71 = source._int71;

                if (source.getBit(INT72_INDEX))
                    _int72 = source._int72;

                if (source.getBit(INT73_INDEX))
                    _int73 = source._int73;

                if (source.getBit(INT74_INDEX))
                    _int74 = source._int74;

                if (source.getBit(INT75_INDEX))
                    _int75 = source._int75;

                if (source.getBit(INT76_INDEX))
                    _int76 = source._int76;

                if (source.getBit(INT77_INDEX))
                    _int77 = source._int77;

                if (source.getBit(INT78_INDEX))
                    _int78 = source._int78;

                if (source.getBit(INT79_INDEX))
                    _int79 = source._int79;

                if (source.getBit(INT80_INDEX))
                    _int80 = source._int80;

                if (source.getBit(INT81_INDEX))
                    _int81 = source._int81;

                if (source.getBit(INT82_INDEX))
                    _int82 = source._int82;

                if (source.getBit(INT83_INDEX))
                    _int83 = source._int83;

                if (source.getBit(INT84_INDEX))
                    _int84 = source._int84;

                if (source.getBit(INT85_INDEX))
                    _int85 = source._int85;

                if (source.getBit(INT86_INDEX))
                    _int86 = source._int86;

                if (source.getBit(INT87_INDEX))
                    _int87 = source._int87;

                if (source.getBit(INT88_INDEX))
                    _int88 = source._int88;

                if (source.getBit(INT89_INDEX))
                    _int89 = source._int89;

                if (source.getBit(INT90_INDEX))
                    _int90 = source._int90;

                if (source.getBit(INT91_INDEX))
                    _int91 = source._int91;

                if (source.getBit(INT92_INDEX))
                    _int92 = source._int92;

                if (source.getBit(INT93_INDEX))
                    _int93 = source._int93;

                if (source.getBit(INT94_INDEX))
                    _int94 = source._int94;

                if (source.getBit(INT95_INDEX))
                    _int95 = source._int95;

                if (source.getBit(INT96_INDEX))
                    _int96 = source._int96;

                if (source.getBit(INT97_INDEX))
                    _int97 = source._int97;

                if (source.getBit(INT98_INDEX))
                    _int98 = source._int98;

                if (source.getBit(INT99_INDEX))
                    _int99 = source._int99;

                if (source.getBit(INT100_INDEX))
                    _int100 = source._int100;

                if (source.getBit(INT101_INDEX))
                    _int101 = source._int101;

                if (source.getBit(INT102_INDEX))
                    _int102 = source._int102;

                if (source.getBit(INT103_INDEX))
                    _int103 = source._int103;

                if (source.getBit(INT104_INDEX))
                    _int104 = source._int104;

                if (source.getBit(INT105_INDEX))
                    _int105 = source._int105;

                if (source.getBit(INT106_INDEX))
                    _int106 = source._int106;

                if (source.getBit(INT107_INDEX))
                    _int107 = source._int107;

                if (source.getBit(INT108_INDEX))
                    _int108 = source._int108;

                if (source.getBit(INT109_INDEX))
                    _int109 = source._int109;

                if (source.getBit(INT110_INDEX))
                    _int110 = source._int110;

                if (source.getBit(INT111_INDEX))
                    _int111 = source._int111;

                if (source.getBit(INT112_INDEX))
                    _int112 = source._int112;

                if (source.getBit(INT113_INDEX))
                    _int113 = source._int113;

                if (source.getBit(INT114_INDEX))
                    _int114 = source._int114;

                if (source.getBit(INT115_INDEX))
                    _int115 = source._int115;

                if (source.getBit(INT116_INDEX))
                    _int116 = source._int116;

                if (source.getBit(INT117_INDEX))
                    _int117 = source._int117;

                if (source.getBit(INT118_INDEX))
                    _int118 = source._int118;

                if (source.getBit(INT119_INDEX))
                    _int119 = source._int119;

                if (source.getBit(INT120_INDEX))
                    _int120 = source._int120;

                if (source.getBit(INT121_INDEX))
                    _int121 = source._int121;

                if (source.getBit(INT122_INDEX))
                    _int122 = source._int122;

                if (source.getBit(INT123_INDEX))
                    _int123 = source._int123;

                if (source.getBit(INT124_INDEX))
                    _int124 = source._int124;

                if (source.getBit(INT125_INDEX))
                    _int125 = source._int125;

                if (source.getBit(INT126_INDEX))
                    _int126 = source._int126;

                if (source.getBit(INT127_INDEX))
                    _int127 = source._int127;

                if (source.getBit(INT128_INDEX))
                    _int128 = source._int128;

                if (source.getBit(INT129_INDEX))
                    _int129 = source._int129;

                if (source.getBit(INT130_INDEX))
                    _int130 = source._int130;

                if (source.getBit(INT131_INDEX))
                    _int131 = source._int131;

                if (source.getBit(INT132_INDEX))
                    _int132 = source._int132;

                if (source.getBit(INT133_INDEX))
                    _int133 = source._int133;

                if (source.getBit(INT134_INDEX))
                    _int134 = source._int134;

                if (source.getBit(INT135_INDEX))
                    _int135 = source._int135;

                if (source.getBit(INT136_INDEX))
                    _int136 = source._int136;

                if (source.getBit(INT137_INDEX))
                    _int137 = source._int137;

                if (source.getBit(INT138_INDEX))
                    _int138 = source._int138;

                if (source.getBit(INT139_INDEX))
                    _int139 = source._int139;

                if (source.getBit(INT140_INDEX))
                    _int140 = source._int140;

                if (source.getBit(INT141_INDEX))
                    _int141 = source._int141;

                if (source.getBit(INT142_INDEX))
                    _int142 = source._int142;

                if (source.getBit(INT143_INDEX))
                    _int143 = source._int143;

                if (source.getBit(INT144_INDEX))
                    _int144 = source._int144;

                if (source.getBit(INT145_INDEX))
                    _int145 = source._int145;

                if (source.getBit(INT146_INDEX))
                    _int146 = source._int146;

                if (source.getBit(INT147_INDEX))
                    _int147 = source._int147;

                if (source.getBit(INT148_INDEX))
                    _int148 = source._int148;

                if (source.getBit(INT149_INDEX))
                    _int149 = source._int149;

                if (source.getBit(INT150_INDEX))
                    _int150 = source._int150;

                if (source.getBit(INT151_INDEX))
                    _int151 = source._int151;

                if (source.getBit(INT152_INDEX))
                    _int152 = source._int152;

                if (source.getBit(INT153_INDEX))
                    _int153 = source._int153;

                if (source.getBit(INT154_INDEX))
                    _int154 = source._int154;

                if (source.getBit(INT155_INDEX))
                    _int155 = source._int155;

                if (source.getBit(INT156_INDEX))
                    _int156 = source._int156;

                if (source.getBit(INT157_INDEX))
                    _int157 = source._int157;

                if (source.getBit(INT158_INDEX))
                    _int158 = source._int158;

                if (source.getBit(INT159_INDEX))
                    _int159 = source._int159;

                if (source.getBit(INT160_INDEX))
                    _int160 = source._int160;

                if (source.getBit(INT161_INDEX))
                    _int161 = source._int161;

                if (source.getBit(INT162_INDEX))
                    _int162 = source._int162;

                if (source.getBit(INT163_INDEX))
                    _int163 = source._int163;

                if (source.getBit(INT164_INDEX))
                    _int164 = source._int164;

                if (source.getBit(INT165_INDEX))
                    _int165 = source._int165;

                if (source.getBit(INT166_INDEX))
                    _int166 = source._int166;

                if (source.getBit(INT167_INDEX))
                    _int167 = source._int167;

                if (source.getBit(INT168_INDEX))
                    _int168 = source._int168;

                if (source.getBit(INT169_INDEX))
                    _int169 = source._int169;

                if (source.getBit(INT170_INDEX))
                    _int170 = source._int170;

                if (source.getBit(INT171_INDEX))
                    _int171 = source._int171;

                if (source.getBit(INT172_INDEX))
                    _int172 = source._int172;

                if (source.getBit(INT173_INDEX))
                    _int173 = source._int173;

                if (source.getBit(INT174_INDEX))
                    _int174 = source._int174;

                if (source.getBit(INT175_INDEX))
                    _int175 = source._int175;

                if (source.getBit(INT176_INDEX))
                    _int176 = source._int176;

                if (source.getBit(INT177_INDEX))
                    _int177 = source._int177;

                if (source.getBit(INT178_INDEX))
                    _int178 = source._int178;

                if (source.getBit(INT179_INDEX))
                    _int179 = source._int179;

                if (source.getBit(INT180_INDEX))
                    _int180 = source._int180;

                if (source.getBit(INT181_INDEX))
                    _int181 = source._int181;

                if (source.getBit(INT182_INDEX))
                    _int182 = source._int182;

                if (source.getBit(INT183_INDEX))
                    _int183 = source._int183;

                if (source.getBit(INT184_INDEX))
                    _int184 = source._int184;

                if (source.getBit(INT185_INDEX))
                    _int185 = source._int185;

                if (source.getBit(INT186_INDEX))
                    _int186 = source._int186;

                if (source.getBit(INT187_INDEX))
                    _int187 = source._int187;

                if (source.getBit(INT188_INDEX))
                    _int188 = source._int188;

                if (source.getBit(INT189_INDEX))
                    _int189 = source._int189;

                if (source.getBit(INT190_INDEX))
                    _int190 = source._int190;

                if (source.getBit(INT191_INDEX))
                    _int191 = source._int191;

                if (source.getBit(INT192_INDEX))
                    _int192 = source._int192;

                if (source.getBit(INT193_INDEX))
                    _int193 = source._int193;

                if (source.getBit(INT194_INDEX))
                    _int194 = source._int194;

                if (source.getBit(INT195_INDEX))
                    _int195 = source._int195;

                if (source.getBit(INT196_INDEX))
                    _int196 = source._int196;

                if (source.getBit(INT197_INDEX))
                    _int197 = source._int197;

                if (source.getBit(INT198_INDEX))
                    _int198 = source._int198;

                if (source.getBit(INT199_INDEX))
                    _int199 = source._int199;

                if (source.getBit(INT200_INDEX))
                    _int200 = source._int200;

                if (source.getBit(INT201_INDEX))
                    _int201 = source._int201;

                if (source.getBit(INT202_INDEX))
                    _int202 = source._int202;

                if (source.getBit(INT203_INDEX))
                    _int203 = source._int203;

                if (source.getBit(INT204_INDEX))
                    _int204 = source._int204;

                if (source.getBit(INT205_INDEX))
                    _int205 = source._int205;

                if (source.getBit(INT206_INDEX))
                    _int206 = source._int206;

                if (source.getBit(INT207_INDEX))
                    _int207 = source._int207;

                if (source.getBit(INT208_INDEX))
                    _int208 = source._int208;

                if (source.getBit(INT209_INDEX))
                    _int209 = source._int209;

                if (source.getBit(INT210_INDEX))
                    _int210 = source._int210;

                if (source.getBit(INT211_INDEX))
                    _int211 = source._int211;

                if (source.getBit(INT212_INDEX))
                    _int212 = source._int212;

                if (source.getBit(INT213_INDEX))
                    _int213 = source._int213;

                if (source.getBit(INT214_INDEX))
                    _int214 = source._int214;

                if (source.getBit(INT215_INDEX))
                    _int215 = source._int215;

                if (source.getBit(INT216_INDEX))
                    _int216 = source._int216;

                if (source.getBit(INT217_INDEX))
                    _int217 = source._int217;

                if (source.getBit(INT218_INDEX))
                    _int218 = source._int218;

                if (source.getBit(INT219_INDEX))
                    _int219 = source._int219;

                if (source.getBit(INT220_INDEX))
                    _int220 = source._int220;

                if (source.getBit(INT221_INDEX))
                    _int221 = source._int221;

                if (source.getBit(INT222_INDEX))
                    _int222 = source._int222;

                if (source.getBit(INT223_INDEX))
                    _int223 = source._int223;

                if (source.getBit(INT224_INDEX))
                    _int224 = source._int224;

                if (source.getBit(INT225_INDEX))
                    _int225 = source._int225;

                if (source.getBit(INT226_INDEX))
                    _int226 = source._int226;

                if (source.getBit(INT227_INDEX))
                    _int227 = source._int227;

                if (source.getBit(INT228_INDEX))
                    _int228 = source._int228;

                if (source.getBit(INT229_INDEX))
                    _int229 = source._int229;

                if (source.getBit(INT230_INDEX))
                    _int230 = source._int230;

                if (source.getBit(INT231_INDEX))
                    _int231 = source._int231;

                if (source.getBit(INT232_INDEX))
                    _int232 = source._int232;

                if (source.getBit(INT233_INDEX))
                    _int233 = source._int233;

                if (source.getBit(INT234_INDEX))
                    _int234 = source._int234;

                if (source.getBit(INT235_INDEX))
                    _int235 = source._int235;

                if (source.getBit(INT236_INDEX))
                    _int236 = source._int236;

                if (source.getBit(INT237_INDEX))
                    _int237 = source._int237;

                if (source.getBit(INT238_INDEX))
                    _int238 = source._int238;

                if (source.getBit(INT239_INDEX))
                    _int239 = source._int239;

                if (source.getBit(INT240_INDEX))
                    _int240 = source._int240;

                if (source.getBit(INT241_INDEX))
                    _int241 = source._int241;

                if (source.getBit(INT242_INDEX))
                    _int242 = source._int242;

                if (source.getBit(INT243_INDEX))
                    _int243 = source._int243;

                if (source.getBit(INT244_INDEX))
                    _int244 = source._int244;

                if (source.getBit(INT245_INDEX))
                    _int245 = source._int245;

                if (source.getBit(INT246_INDEX))
                    _int246 = source._int246;

                if (source.getBit(INT247_INDEX))
                    _int247 = source._int247;

                if (source.getBit(INT248_INDEX))
                    _int248 = source._int248;

                if (source.getBit(INT249_INDEX))
                    _int249 = source._int249;

                if (source.getBit(INT250_INDEX))
                    _int250 = source._int250;

                if (source.getBit(INT251_INDEX))
                    _int251 = source._int251;

                if (source.getBit(INT252_INDEX))
                    _int252 = source._int252;

                if (source.getBit(INT253_INDEX))
                    _int253 = source._int253;

                if (source.getBit(INT254_INDEX))
                    _int254 = source._int254;

                if (source.getBit(INT255_INDEX))
                    _int255 = source._int255;

                if (source.getBit(INT256_INDEX))
                    _int256 = source._int256;

                if (source.getBit(INT257_INDEX))
                    _int257 = source._int257;

                if (source.getBit(INT258_INDEX))
                    _int258 = source._int258;

                if (source.getBit(INT259_INDEX))
                    _int259 = source._int259;

                if (source.getBit(INT260_INDEX))
                    _int260 = source._int260;

                if (source.getBit(INT261_INDEX))
                    _int261 = source._int261;

                if (source.getBit(INT262_INDEX))
                    _int262 = source._int262;

                if (source.getBit(INT263_INDEX))
                    _int263 = source._int263;

                if (source.getBit(INT264_INDEX))
                    _int264 = source._int264;

                if (source.getBit(INT265_INDEX))
                    _int265 = source._int265;

                if (source.getBit(INT266_INDEX))
                    _int266 = source._int266;

                if (source.getBit(INT267_INDEX))
                    _int267 = source._int267;

                if (source.getBit(INT268_INDEX))
                    _int268 = source._int268;

                if (source.getBit(INT269_INDEX))
                    _int269 = source._int269;

                if (source.getBit(INT270_INDEX))
                    _int270 = source._int270;

                if (source.getBit(INT271_INDEX))
                    _int271 = source._int271;

                if (source.getBit(INT272_INDEX))
                    _int272 = source._int272;

                if (source.getBit(INT273_INDEX))
                    _int273 = source._int273;

                if (source.getBit(INT274_INDEX))
                    _int274 = source._int274;

                if (source.getBit(INT275_INDEX))
                    _int275 = source._int275;

                if (source.getBit(INT276_INDEX))
                    _int276 = source._int276;

                if (source.getBit(INT277_INDEX))
                    _int277 = source._int277;

                if (source.getBit(INT278_INDEX))
                    _int278 = source._int278;

                if (source.getBit(INT279_INDEX))
                    _int279 = source._int279;

                if (source.getBit(INT280_INDEX))
                    _int280 = source._int280;

                if (source.getBit(INT281_INDEX))
                    _int281 = source._int281;

                if (source.getBit(INT282_INDEX))
                    _int282 = source._int282;

                if (source.getBit(INT283_INDEX))
                    _int283 = source._int283;

                if (source.getBit(INT284_INDEX))
                    _int284 = source._int284;

                if (source.getBit(INT285_INDEX))
                    _int285 = source._int285;

                if (source.getBit(INT286_INDEX))
                    _int286 = source._int286;

                if (source.getBit(INT287_INDEX))
                    _int287 = source._int287;

                if (source.getBit(INT288_INDEX))
                    _int288 = source._int288;

                if (source.getBit(INT289_INDEX))
                    _int289 = source._int289;

                if (source.getBit(INT290_INDEX))
                    _int290 = source._int290;

                if (source.getBit(INT291_INDEX))
                    _int291 = source._int291;

                if (source.getBit(INT292_INDEX))
                    _int292 = source._int292;

                if (source.getBit(INT293_INDEX))
                    _int293 = source._int293;

                if (source.getBit(INT294_INDEX))
                    _int294 = source._int294;

                if (source.getBit(INT295_INDEX))
                    _int295 = source._int295;

                if (source.getBit(INT296_INDEX))
                    _int296 = source._int296;

                if (source.getBit(INT297_INDEX))
                    _int297 = source._int297;

                if (source.getBit(INT298_INDEX))
                    _int298 = source._int298;

                if (source.getBit(INT299_INDEX))
                    _int299 = source._int299;
            }

            super.merge(next);
        }

        @Override
        public void writeWrite(org.objectfabric.Writer writer, int index) {
            if (writer.interrupted())
                writer.resume();

            switch (index) {
                case INT0_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int0);
                    break;
                }
                case INT1_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int1);
                    break;
                }
                case INT2_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int2);
                    break;
                }
                case INT3_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int3);
                    break;
                }
                case INT4_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int4);
                    break;
                }
                case INT5_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int5);
                    break;
                }
                case INT6_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int6);
                    break;
                }
                case INT7_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int7);
                    break;
                }
                case INT8_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int8);
                    break;
                }
                case INT9_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int9);
                    break;
                }
                case INT10_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int10);
                    break;
                }
                case INT11_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int11);
                    break;
                }
                case INT12_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int12);
                    break;
                }
                case INT13_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int13);
                    break;
                }
                case INT14_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int14);
                    break;
                }
                case INT15_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int15);
                    break;
                }
                case INT16_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int16);
                    break;
                }
                case INT17_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int17);
                    break;
                }
                case INT18_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int18);
                    break;
                }
                case INT19_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int19);
                    break;
                }
                case INT20_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int20);
                    break;
                }
                case INT21_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int21);
                    break;
                }
                case INT22_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int22);
                    break;
                }
                case INT23_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int23);
                    break;
                }
                case INT24_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int24);
                    break;
                }
                case INT25_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int25);
                    break;
                }
                case INT26_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int26);
                    break;
                }
                case INT27_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int27);
                    break;
                }
                case INT28_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int28);
                    break;
                }
                case INT29_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int29);
                    break;
                }
                case INT30_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int30);
                    break;
                }
                case INT31_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int31);
                    break;
                }
                case INT32_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int32);
                    break;
                }
                case INT33_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int33);
                    break;
                }
                case INT34_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int34);
                    break;
                }
                case INT35_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int35);
                    break;
                }
                case INT36_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int36);
                    break;
                }
                case INT37_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int37);
                    break;
                }
                case INT38_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int38);
                    break;
                }
                case INT39_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int39);
                    break;
                }
                case INT40_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int40);
                    break;
                }
                case INT41_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int41);
                    break;
                }
                case INT42_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int42);
                    break;
                }
                case INT43_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int43);
                    break;
                }
                case INT44_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int44);
                    break;
                }
                case INT45_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int45);
                    break;
                }
                case INT46_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int46);
                    break;
                }
                case INT47_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int47);
                    break;
                }
                case INT48_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int48);
                    break;
                }
                case INT49_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int49);
                    break;
                }
                case INT50_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int50);
                    break;
                }
                case INT51_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int51);
                    break;
                }
                case INT52_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int52);
                    break;
                }
                case INT53_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int53);
                    break;
                }
                case INT54_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int54);
                    break;
                }
                case INT55_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int55);
                    break;
                }
                case INT56_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int56);
                    break;
                }
                case INT57_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int57);
                    break;
                }
                case INT58_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int58);
                    break;
                }
                case INT59_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int59);
                    break;
                }
                case INT60_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int60);
                    break;
                }
                case INT61_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int61);
                    break;
                }
                case INT62_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int62);
                    break;
                }
                case INT63_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int63);
                    break;
                }
                case INT64_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int64);
                    break;
                }
                case INT65_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int65);
                    break;
                }
                case INT66_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int66);
                    break;
                }
                case INT67_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int67);
                    break;
                }
                case INT68_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int68);
                    break;
                }
                case INT69_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int69);
                    break;
                }
                case INT70_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int70);
                    break;
                }
                case INT71_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int71);
                    break;
                }
                case INT72_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int72);
                    break;
                }
                case INT73_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int73);
                    break;
                }
                case INT74_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int74);
                    break;
                }
                case INT75_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int75);
                    break;
                }
                case INT76_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int76);
                    break;
                }
                case INT77_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int77);
                    break;
                }
                case INT78_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int78);
                    break;
                }
                case INT79_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int79);
                    break;
                }
                case INT80_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int80);
                    break;
                }
                case INT81_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int81);
                    break;
                }
                case INT82_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int82);
                    break;
                }
                case INT83_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int83);
                    break;
                }
                case INT84_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int84);
                    break;
                }
                case INT85_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int85);
                    break;
                }
                case INT86_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int86);
                    break;
                }
                case INT87_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int87);
                    break;
                }
                case INT88_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int88);
                    break;
                }
                case INT89_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int89);
                    break;
                }
                case INT90_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int90);
                    break;
                }
                case INT91_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int91);
                    break;
                }
                case INT92_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int92);
                    break;
                }
                case INT93_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int93);
                    break;
                }
                case INT94_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int94);
                    break;
                }
                case INT95_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int95);
                    break;
                }
                case INT96_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int96);
                    break;
                }
                case INT97_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int97);
                    break;
                }
                case INT98_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int98);
                    break;
                }
                case INT99_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int99);
                    break;
                }
                case INT100_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int100);
                    break;
                }
                case INT101_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int101);
                    break;
                }
                case INT102_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int102);
                    break;
                }
                case INT103_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int103);
                    break;
                }
                case INT104_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int104);
                    break;
                }
                case INT105_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int105);
                    break;
                }
                case INT106_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int106);
                    break;
                }
                case INT107_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int107);
                    break;
                }
                case INT108_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int108);
                    break;
                }
                case INT109_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int109);
                    break;
                }
                case INT110_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int110);
                    break;
                }
                case INT111_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int111);
                    break;
                }
                case INT112_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int112);
                    break;
                }
                case INT113_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int113);
                    break;
                }
                case INT114_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int114);
                    break;
                }
                case INT115_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int115);
                    break;
                }
                case INT116_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int116);
                    break;
                }
                case INT117_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int117);
                    break;
                }
                case INT118_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int118);
                    break;
                }
                case INT119_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int119);
                    break;
                }
                case INT120_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int120);
                    break;
                }
                case INT121_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int121);
                    break;
                }
                case INT122_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int122);
                    break;
                }
                case INT123_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int123);
                    break;
                }
                case INT124_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int124);
                    break;
                }
                case INT125_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int125);
                    break;
                }
                case INT126_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int126);
                    break;
                }
                case INT127_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int127);
                    break;
                }
                case INT128_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int128);
                    break;
                }
                case INT129_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int129);
                    break;
                }
                case INT130_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int130);
                    break;
                }
                case INT131_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int131);
                    break;
                }
                case INT132_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int132);
                    break;
                }
                case INT133_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int133);
                    break;
                }
                case INT134_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int134);
                    break;
                }
                case INT135_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int135);
                    break;
                }
                case INT136_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int136);
                    break;
                }
                case INT137_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int137);
                    break;
                }
                case INT138_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int138);
                    break;
                }
                case INT139_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int139);
                    break;
                }
                case INT140_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int140);
                    break;
                }
                case INT141_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int141);
                    break;
                }
                case INT142_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int142);
                    break;
                }
                case INT143_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int143);
                    break;
                }
                case INT144_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int144);
                    break;
                }
                case INT145_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int145);
                    break;
                }
                case INT146_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int146);
                    break;
                }
                case INT147_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int147);
                    break;
                }
                case INT148_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int148);
                    break;
                }
                case INT149_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int149);
                    break;
                }
                case INT150_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int150);
                    break;
                }
                case INT151_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int151);
                    break;
                }
                case INT152_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int152);
                    break;
                }
                case INT153_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int153);
                    break;
                }
                case INT154_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int154);
                    break;
                }
                case INT155_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int155);
                    break;
                }
                case INT156_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int156);
                    break;
                }
                case INT157_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int157);
                    break;
                }
                case INT158_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int158);
                    break;
                }
                case INT159_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int159);
                    break;
                }
                case INT160_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int160);
                    break;
                }
                case INT161_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int161);
                    break;
                }
                case INT162_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int162);
                    break;
                }
                case INT163_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int163);
                    break;
                }
                case INT164_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int164);
                    break;
                }
                case INT165_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int165);
                    break;
                }
                case INT166_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int166);
                    break;
                }
                case INT167_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int167);
                    break;
                }
                case INT168_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int168);
                    break;
                }
                case INT169_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int169);
                    break;
                }
                case INT170_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int170);
                    break;
                }
                case INT171_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int171);
                    break;
                }
                case INT172_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int172);
                    break;
                }
                case INT173_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int173);
                    break;
                }
                case INT174_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int174);
                    break;
                }
                case INT175_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int175);
                    break;
                }
                case INT176_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int176);
                    break;
                }
                case INT177_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int177);
                    break;
                }
                case INT178_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int178);
                    break;
                }
                case INT179_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int179);
                    break;
                }
                case INT180_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int180);
                    break;
                }
                case INT181_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int181);
                    break;
                }
                case INT182_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int182);
                    break;
                }
                case INT183_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int183);
                    break;
                }
                case INT184_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int184);
                    break;
                }
                case INT185_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int185);
                    break;
                }
                case INT186_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int186);
                    break;
                }
                case INT187_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int187);
                    break;
                }
                case INT188_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int188);
                    break;
                }
                case INT189_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int189);
                    break;
                }
                case INT190_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int190);
                    break;
                }
                case INT191_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int191);
                    break;
                }
                case INT192_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int192);
                    break;
                }
                case INT193_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int193);
                    break;
                }
                case INT194_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int194);
                    break;
                }
                case INT195_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int195);
                    break;
                }
                case INT196_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int196);
                    break;
                }
                case INT197_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int197);
                    break;
                }
                case INT198_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int198);
                    break;
                }
                case INT199_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int199);
                    break;
                }
                case INT200_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int200);
                    break;
                }
                case INT201_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int201);
                    break;
                }
                case INT202_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int202);
                    break;
                }
                case INT203_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int203);
                    break;
                }
                case INT204_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int204);
                    break;
                }
                case INT205_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int205);
                    break;
                }
                case INT206_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int206);
                    break;
                }
                case INT207_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int207);
                    break;
                }
                case INT208_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int208);
                    break;
                }
                case INT209_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int209);
                    break;
                }
                case INT210_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int210);
                    break;
                }
                case INT211_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int211);
                    break;
                }
                case INT212_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int212);
                    break;
                }
                case INT213_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int213);
                    break;
                }
                case INT214_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int214);
                    break;
                }
                case INT215_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int215);
                    break;
                }
                case INT216_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int216);
                    break;
                }
                case INT217_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int217);
                    break;
                }
                case INT218_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int218);
                    break;
                }
                case INT219_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int219);
                    break;
                }
                case INT220_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int220);
                    break;
                }
                case INT221_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int221);
                    break;
                }
                case INT222_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int222);
                    break;
                }
                case INT223_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int223);
                    break;
                }
                case INT224_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int224);
                    break;
                }
                case INT225_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int225);
                    break;
                }
                case INT226_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int226);
                    break;
                }
                case INT227_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int227);
                    break;
                }
                case INT228_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int228);
                    break;
                }
                case INT229_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int229);
                    break;
                }
                case INT230_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int230);
                    break;
                }
                case INT231_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int231);
                    break;
                }
                case INT232_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int232);
                    break;
                }
                case INT233_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int233);
                    break;
                }
                case INT234_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int234);
                    break;
                }
                case INT235_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int235);
                    break;
                }
                case INT236_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int236);
                    break;
                }
                case INT237_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int237);
                    break;
                }
                case INT238_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int238);
                    break;
                }
                case INT239_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int239);
                    break;
                }
                case INT240_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int240);
                    break;
                }
                case INT241_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int241);
                    break;
                }
                case INT242_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int242);
                    break;
                }
                case INT243_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int243);
                    break;
                }
                case INT244_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int244);
                    break;
                }
                case INT245_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int245);
                    break;
                }
                case INT246_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int246);
                    break;
                }
                case INT247_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int247);
                    break;
                }
                case INT248_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int248);
                    break;
                }
                case INT249_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int249);
                    break;
                }
                case INT250_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int250);
                    break;
                }
                case INT251_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int251);
                    break;
                }
                case INT252_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int252);
                    break;
                }
                case INT253_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int253);
                    break;
                }
                case INT254_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int254);
                    break;
                }
                case INT255_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int255);
                    break;
                }
                case INT256_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int256);
                    break;
                }
                case INT257_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int257);
                    break;
                }
                case INT258_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int258);
                    break;
                }
                case INT259_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int259);
                    break;
                }
                case INT260_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int260);
                    break;
                }
                case INT261_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int261);
                    break;
                }
                case INT262_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int262);
                    break;
                }
                case INT263_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int263);
                    break;
                }
                case INT264_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int264);
                    break;
                }
                case INT265_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int265);
                    break;
                }
                case INT266_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int266);
                    break;
                }
                case INT267_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int267);
                    break;
                }
                case INT268_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int268);
                    break;
                }
                case INT269_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int269);
                    break;
                }
                case INT270_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int270);
                    break;
                }
                case INT271_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int271);
                    break;
                }
                case INT272_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int272);
                    break;
                }
                case INT273_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int273);
                    break;
                }
                case INT274_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int274);
                    break;
                }
                case INT275_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int275);
                    break;
                }
                case INT276_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int276);
                    break;
                }
                case INT277_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int277);
                    break;
                }
                case INT278_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int278);
                    break;
                }
                case INT279_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int279);
                    break;
                }
                case INT280_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int280);
                    break;
                }
                case INT281_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int281);
                    break;
                }
                case INT282_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int282);
                    break;
                }
                case INT283_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int283);
                    break;
                }
                case INT284_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int284);
                    break;
                }
                case INT285_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int285);
                    break;
                }
                case INT286_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int286);
                    break;
                }
                case INT287_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int287);
                    break;
                }
                case INT288_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int288);
                    break;
                }
                case INT289_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int289);
                    break;
                }
                case INT290_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int290);
                    break;
                }
                case INT291_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int291);
                    break;
                }
                case INT292_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int292);
                    break;
                }
                case INT293_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int293);
                    break;
                }
                case INT294_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int294);
                    break;
                }
                case INT295_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int295);
                    break;
                }
                case INT296_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int296);
                    break;
                }
                case INT297_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int297);
                    break;
                }
                case INT298_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int298);
                    break;
                }
                case INT299_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int299);
                    break;
                }
                default: {
                    super.writeWrite(writer, index);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }

        @Override
        public void readWrite(org.objectfabric.Reader reader, int index, java.lang.Object[] versions) {
            if (reader.interrupted())
                reader.resume();

            switch (index) {
                case INT0_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int0 = value;

                    break;
                }
                case INT1_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int1 = value;

                    break;
                }
                case INT2_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int2 = value;

                    break;
                }
                case INT3_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int3 = value;

                    break;
                }
                case INT4_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int4 = value;

                    break;
                }
                case INT5_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int5 = value;

                    break;
                }
                case INT6_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int6 = value;

                    break;
                }
                case INT7_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int7 = value;

                    break;
                }
                case INT8_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int8 = value;

                    break;
                }
                case INT9_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int9 = value;

                    break;
                }
                case INT10_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int10 = value;

                    break;
                }
                case INT11_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int11 = value;

                    break;
                }
                case INT12_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int12 = value;

                    break;
                }
                case INT13_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int13 = value;

                    break;
                }
                case INT14_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int14 = value;

                    break;
                }
                case INT15_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int15 = value;

                    break;
                }
                case INT16_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int16 = value;

                    break;
                }
                case INT17_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int17 = value;

                    break;
                }
                case INT18_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int18 = value;

                    break;
                }
                case INT19_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int19 = value;

                    break;
                }
                case INT20_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int20 = value;

                    break;
                }
                case INT21_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int21 = value;

                    break;
                }
                case INT22_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int22 = value;

                    break;
                }
                case INT23_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int23 = value;

                    break;
                }
                case INT24_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int24 = value;

                    break;
                }
                case INT25_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int25 = value;

                    break;
                }
                case INT26_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int26 = value;

                    break;
                }
                case INT27_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int27 = value;

                    break;
                }
                case INT28_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int28 = value;

                    break;
                }
                case INT29_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int29 = value;

                    break;
                }
                case INT30_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int30 = value;

                    break;
                }
                case INT31_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int31 = value;

                    break;
                }
                case INT32_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int32 = value;

                    break;
                }
                case INT33_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int33 = value;

                    break;
                }
                case INT34_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int34 = value;

                    break;
                }
                case INT35_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int35 = value;

                    break;
                }
                case INT36_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int36 = value;

                    break;
                }
                case INT37_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int37 = value;

                    break;
                }
                case INT38_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int38 = value;

                    break;
                }
                case INT39_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int39 = value;

                    break;
                }
                case INT40_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int40 = value;

                    break;
                }
                case INT41_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int41 = value;

                    break;
                }
                case INT42_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int42 = value;

                    break;
                }
                case INT43_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int43 = value;

                    break;
                }
                case INT44_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int44 = value;

                    break;
                }
                case INT45_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int45 = value;

                    break;
                }
                case INT46_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int46 = value;

                    break;
                }
                case INT47_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int47 = value;

                    break;
                }
                case INT48_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int48 = value;

                    break;
                }
                case INT49_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int49 = value;

                    break;
                }
                case INT50_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int50 = value;

                    break;
                }
                case INT51_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int51 = value;

                    break;
                }
                case INT52_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int52 = value;

                    break;
                }
                case INT53_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int53 = value;

                    break;
                }
                case INT54_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int54 = value;

                    break;
                }
                case INT55_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int55 = value;

                    break;
                }
                case INT56_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int56 = value;

                    break;
                }
                case INT57_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int57 = value;

                    break;
                }
                case INT58_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int58 = value;

                    break;
                }
                case INT59_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int59 = value;

                    break;
                }
                case INT60_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int60 = value;

                    break;
                }
                case INT61_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int61 = value;

                    break;
                }
                case INT62_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int62 = value;

                    break;
                }
                case INT63_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int63 = value;

                    break;
                }
                case INT64_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int64 = value;

                    break;
                }
                case INT65_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int65 = value;

                    break;
                }
                case INT66_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int66 = value;

                    break;
                }
                case INT67_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int67 = value;

                    break;
                }
                case INT68_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int68 = value;

                    break;
                }
                case INT69_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int69 = value;

                    break;
                }
                case INT70_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int70 = value;

                    break;
                }
                case INT71_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int71 = value;

                    break;
                }
                case INT72_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int72 = value;

                    break;
                }
                case INT73_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int73 = value;

                    break;
                }
                case INT74_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int74 = value;

                    break;
                }
                case INT75_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int75 = value;

                    break;
                }
                case INT76_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int76 = value;

                    break;
                }
                case INT77_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int77 = value;

                    break;
                }
                case INT78_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int78 = value;

                    break;
                }
                case INT79_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int79 = value;

                    break;
                }
                case INT80_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int80 = value;

                    break;
                }
                case INT81_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int81 = value;

                    break;
                }
                case INT82_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int82 = value;

                    break;
                }
                case INT83_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int83 = value;

                    break;
                }
                case INT84_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int84 = value;

                    break;
                }
                case INT85_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int85 = value;

                    break;
                }
                case INT86_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int86 = value;

                    break;
                }
                case INT87_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int87 = value;

                    break;
                }
                case INT88_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int88 = value;

                    break;
                }
                case INT89_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int89 = value;

                    break;
                }
                case INT90_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int90 = value;

                    break;
                }
                case INT91_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int91 = value;

                    break;
                }
                case INT92_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int92 = value;

                    break;
                }
                case INT93_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int93 = value;

                    break;
                }
                case INT94_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int94 = value;

                    break;
                }
                case INT95_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int95 = value;

                    break;
                }
                case INT96_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int96 = value;

                    break;
                }
                case INT97_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int97 = value;

                    break;
                }
                case INT98_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int98 = value;

                    break;
                }
                case INT99_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int99 = value;

                    break;
                }
                case INT100_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int100 = value;

                    break;
                }
                case INT101_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int101 = value;

                    break;
                }
                case INT102_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int102 = value;

                    break;
                }
                case INT103_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int103 = value;

                    break;
                }
                case INT104_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int104 = value;

                    break;
                }
                case INT105_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int105 = value;

                    break;
                }
                case INT106_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int106 = value;

                    break;
                }
                case INT107_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int107 = value;

                    break;
                }
                case INT108_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int108 = value;

                    break;
                }
                case INT109_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int109 = value;

                    break;
                }
                case INT110_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int110 = value;

                    break;
                }
                case INT111_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int111 = value;

                    break;
                }
                case INT112_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int112 = value;

                    break;
                }
                case INT113_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int113 = value;

                    break;
                }
                case INT114_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int114 = value;

                    break;
                }
                case INT115_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int115 = value;

                    break;
                }
                case INT116_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int116 = value;

                    break;
                }
                case INT117_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int117 = value;

                    break;
                }
                case INT118_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int118 = value;

                    break;
                }
                case INT119_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int119 = value;

                    break;
                }
                case INT120_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int120 = value;

                    break;
                }
                case INT121_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int121 = value;

                    break;
                }
                case INT122_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int122 = value;

                    break;
                }
                case INT123_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int123 = value;

                    break;
                }
                case INT124_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int124 = value;

                    break;
                }
                case INT125_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int125 = value;

                    break;
                }
                case INT126_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int126 = value;

                    break;
                }
                case INT127_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int127 = value;

                    break;
                }
                case INT128_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int128 = value;

                    break;
                }
                case INT129_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int129 = value;

                    break;
                }
                case INT130_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int130 = value;

                    break;
                }
                case INT131_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int131 = value;

                    break;
                }
                case INT132_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int132 = value;

                    break;
                }
                case INT133_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int133 = value;

                    break;
                }
                case INT134_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int134 = value;

                    break;
                }
                case INT135_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int135 = value;

                    break;
                }
                case INT136_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int136 = value;

                    break;
                }
                case INT137_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int137 = value;

                    break;
                }
                case INT138_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int138 = value;

                    break;
                }
                case INT139_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int139 = value;

                    break;
                }
                case INT140_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int140 = value;

                    break;
                }
                case INT141_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int141 = value;

                    break;
                }
                case INT142_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int142 = value;

                    break;
                }
                case INT143_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int143 = value;

                    break;
                }
                case INT144_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int144 = value;

                    break;
                }
                case INT145_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int145 = value;

                    break;
                }
                case INT146_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int146 = value;

                    break;
                }
                case INT147_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int147 = value;

                    break;
                }
                case INT148_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int148 = value;

                    break;
                }
                case INT149_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int149 = value;

                    break;
                }
                case INT150_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int150 = value;

                    break;
                }
                case INT151_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int151 = value;

                    break;
                }
                case INT152_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int152 = value;

                    break;
                }
                case INT153_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int153 = value;

                    break;
                }
                case INT154_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int154 = value;

                    break;
                }
                case INT155_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int155 = value;

                    break;
                }
                case INT156_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int156 = value;

                    break;
                }
                case INT157_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int157 = value;

                    break;
                }
                case INT158_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int158 = value;

                    break;
                }
                case INT159_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int159 = value;

                    break;
                }
                case INT160_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int160 = value;

                    break;
                }
                case INT161_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int161 = value;

                    break;
                }
                case INT162_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int162 = value;

                    break;
                }
                case INT163_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int163 = value;

                    break;
                }
                case INT164_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int164 = value;

                    break;
                }
                case INT165_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int165 = value;

                    break;
                }
                case INT166_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int166 = value;

                    break;
                }
                case INT167_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int167 = value;

                    break;
                }
                case INT168_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int168 = value;

                    break;
                }
                case INT169_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int169 = value;

                    break;
                }
                case INT170_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int170 = value;

                    break;
                }
                case INT171_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int171 = value;

                    break;
                }
                case INT172_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int172 = value;

                    break;
                }
                case INT173_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int173 = value;

                    break;
                }
                case INT174_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int174 = value;

                    break;
                }
                case INT175_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int175 = value;

                    break;
                }
                case INT176_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int176 = value;

                    break;
                }
                case INT177_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int177 = value;

                    break;
                }
                case INT178_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int178 = value;

                    break;
                }
                case INT179_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int179 = value;

                    break;
                }
                case INT180_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int180 = value;

                    break;
                }
                case INT181_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int181 = value;

                    break;
                }
                case INT182_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int182 = value;

                    break;
                }
                case INT183_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int183 = value;

                    break;
                }
                case INT184_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int184 = value;

                    break;
                }
                case INT185_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int185 = value;

                    break;
                }
                case INT186_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int186 = value;

                    break;
                }
                case INT187_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int187 = value;

                    break;
                }
                case INT188_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int188 = value;

                    break;
                }
                case INT189_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int189 = value;

                    break;
                }
                case INT190_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int190 = value;

                    break;
                }
                case INT191_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int191 = value;

                    break;
                }
                case INT192_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int192 = value;

                    break;
                }
                case INT193_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int193 = value;

                    break;
                }
                case INT194_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int194 = value;

                    break;
                }
                case INT195_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int195 = value;

                    break;
                }
                case INT196_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int196 = value;

                    break;
                }
                case INT197_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int197 = value;

                    break;
                }
                case INT198_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int198 = value;

                    break;
                }
                case INT199_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int199 = value;

                    break;
                }
                case INT200_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int200 = value;

                    break;
                }
                case INT201_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int201 = value;

                    break;
                }
                case INT202_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int202 = value;

                    break;
                }
                case INT203_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int203 = value;

                    break;
                }
                case INT204_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int204 = value;

                    break;
                }
                case INT205_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int205 = value;

                    break;
                }
                case INT206_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int206 = value;

                    break;
                }
                case INT207_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int207 = value;

                    break;
                }
                case INT208_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int208 = value;

                    break;
                }
                case INT209_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int209 = value;

                    break;
                }
                case INT210_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int210 = value;

                    break;
                }
                case INT211_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int211 = value;

                    break;
                }
                case INT212_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int212 = value;

                    break;
                }
                case INT213_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int213 = value;

                    break;
                }
                case INT214_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int214 = value;

                    break;
                }
                case INT215_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int215 = value;

                    break;
                }
                case INT216_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int216 = value;

                    break;
                }
                case INT217_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int217 = value;

                    break;
                }
                case INT218_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int218 = value;

                    break;
                }
                case INT219_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int219 = value;

                    break;
                }
                case INT220_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int220 = value;

                    break;
                }
                case INT221_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int221 = value;

                    break;
                }
                case INT222_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int222 = value;

                    break;
                }
                case INT223_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int223 = value;

                    break;
                }
                case INT224_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int224 = value;

                    break;
                }
                case INT225_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int225 = value;

                    break;
                }
                case INT226_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int226 = value;

                    break;
                }
                case INT227_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int227 = value;

                    break;
                }
                case INT228_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int228 = value;

                    break;
                }
                case INT229_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int229 = value;

                    break;
                }
                case INT230_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int230 = value;

                    break;
                }
                case INT231_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int231 = value;

                    break;
                }
                case INT232_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int232 = value;

                    break;
                }
                case INT233_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int233 = value;

                    break;
                }
                case INT234_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int234 = value;

                    break;
                }
                case INT235_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int235 = value;

                    break;
                }
                case INT236_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int236 = value;

                    break;
                }
                case INT237_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int237 = value;

                    break;
                }
                case INT238_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int238 = value;

                    break;
                }
                case INT239_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int239 = value;

                    break;
                }
                case INT240_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int240 = value;

                    break;
                }
                case INT241_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int241 = value;

                    break;
                }
                case INT242_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int242 = value;

                    break;
                }
                case INT243_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int243 = value;

                    break;
                }
                case INT244_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int244 = value;

                    break;
                }
                case INT245_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int245 = value;

                    break;
                }
                case INT246_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int246 = value;

                    break;
                }
                case INT247_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int247 = value;

                    break;
                }
                case INT248_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int248 = value;

                    break;
                }
                case INT249_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int249 = value;

                    break;
                }
                case INT250_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int250 = value;

                    break;
                }
                case INT251_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int251 = value;

                    break;
                }
                case INT252_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int252 = value;

                    break;
                }
                case INT253_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int253 = value;

                    break;
                }
                case INT254_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int254 = value;

                    break;
                }
                case INT255_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int255 = value;

                    break;
                }
                case INT256_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int256 = value;

                    break;
                }
                case INT257_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int257 = value;

                    break;
                }
                case INT258_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int258 = value;

                    break;
                }
                case INT259_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int259 = value;

                    break;
                }
                case INT260_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int260 = value;

                    break;
                }
                case INT261_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int261 = value;

                    break;
                }
                case INT262_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int262 = value;

                    break;
                }
                case INT263_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int263 = value;

                    break;
                }
                case INT264_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int264 = value;

                    break;
                }
                case INT265_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int265 = value;

                    break;
                }
                case INT266_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int266 = value;

                    break;
                }
                case INT267_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int267 = value;

                    break;
                }
                case INT268_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int268 = value;

                    break;
                }
                case INT269_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int269 = value;

                    break;
                }
                case INT270_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int270 = value;

                    break;
                }
                case INT271_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int271 = value;

                    break;
                }
                case INT272_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int272 = value;

                    break;
                }
                case INT273_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int273 = value;

                    break;
                }
                case INT274_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int274 = value;

                    break;
                }
                case INT275_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int275 = value;

                    break;
                }
                case INT276_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int276 = value;

                    break;
                }
                case INT277_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int277 = value;

                    break;
                }
                case INT278_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int278 = value;

                    break;
                }
                case INT279_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int279 = value;

                    break;
                }
                case INT280_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int280 = value;

                    break;
                }
                case INT281_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int281 = value;

                    break;
                }
                case INT282_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int282 = value;

                    break;
                }
                case INT283_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int283 = value;

                    break;
                }
                case INT284_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int284 = value;

                    break;
                }
                case INT285_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int285 = value;

                    break;
                }
                case INT286_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int286 = value;

                    break;
                }
                case INT287_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int287 = value;

                    break;
                }
                case INT288_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int288 = value;

                    break;
                }
                case INT289_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int289 = value;

                    break;
                }
                case INT290_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int290 = value;

                    break;
                }
                case INT291_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int291 = value;

                    break;
                }
                case INT292_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int292 = value;

                    break;
                }
                case INT293_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int293 = value;

                    break;
                }
                case INT294_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int294 = value;

                    break;
                }
                case INT295_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int295 = value;

                    break;
                }
                case INT296_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int296 = value;

                    break;
                }
                case INT297_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int297 = value;

                    break;
                }
                case INT298_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int298 = value;

                    break;
                }
                case INT299_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int299 = value;

                    break;
                }
                default: {
                    super.readWrite(reader, index, versions);

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }
    }
}
