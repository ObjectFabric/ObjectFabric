/**
 * This file is part of ObjectFabric (http://objectfabric.org).
 *
 * ObjectFabric is licensed under the Apache License, Version 2.0, the terms
 * of which may be found at http://www.apache.org/licenses/LICENSE-2.0.html.
 * 
 * Copyright ObjectFabric Inc.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

package org.objectfabric.generated;

//==============================================================================
//                                                                              
//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                
//                                                                              
//==============================================================================

@SuppressWarnings({ "hiding", "unchecked", "static-access", "unused", "cast", "rawtypes" })
public class TypesClass extends org.objectfabric.TGenerated {

    public TypesClass(org.objectfabric.Resource resource) {
        this(resource, new Version(FIELD_COUNT), FIELD_COUNT);
    }

    protected TypesClass(org.objectfabric.Resource resource, org.objectfabric.TObject.Version shared, int length) {
        super(resource, shared, FIELD_COUNT);
    }

    public TypesClass(TypesClass toCopy) {
        this(toCopy.resource());

        field0(toCopy.field0());
        field1(toCopy.field1());
        field2(toCopy.field2());
        field3(toCopy.field3());
        field4(toCopy.field4());
        field5(toCopy.field5());
        field6(toCopy.field6());
        field7(toCopy.field7());
        field8(toCopy.field8());
        field9(toCopy.field9());
        field10(toCopy.field10());
        field11(toCopy.field11());
        field12(toCopy.field12());
        field13(toCopy.field13());
        field14(toCopy.field14());
        field15(toCopy.field15());
        field16(toCopy.field16());
        field17(toCopy.field17());
        field18(toCopy.field18());
        field19(toCopy.field19());
        field20(toCopy.field20());
        array(toCopy.array());
    }

    public static final org.objectfabric.TType TYPE = new org.objectfabric.TType(org.objectfabric.generated.TypesObjectModel.instance(), org.objectfabric.generated.TypesObjectModel.ORG_OBJECTFABRIC_GENERATED_TYPESCLASS_CLASS_ID);

    public final boolean field0() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD0_INDEX);
        boolean value = v != null ? v._field0 : false;
        endRead_(outer, inner);
        return value;
    }

    public final void field0(boolean value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field0 = value;
        v.setBit(FIELD0_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Boolean field1() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD1_INDEX);
        java.lang.Boolean value = v != null ? v._field1 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field1(java.lang.Boolean value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field1 = value;
        v.setBit(FIELD1_INDEX);
        endWrite_(outer, inner);
    }

    public final byte field2() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD2_INDEX);
        byte value = v != null ? v._field2 : ((byte) 0);
        endRead_(outer, inner);
        return value;
    }

    public final void field2(byte value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field2 = value;
        v.setBit(FIELD2_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Byte field3() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD3_INDEX);
        java.lang.Byte value = v != null ? v._field3 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field3(java.lang.Byte value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field3 = value;
        v.setBit(FIELD3_INDEX);
        endWrite_(outer, inner);
    }

    public final char field4() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD4_INDEX);
        char value = v != null ? v._field4 : '\0';
        endRead_(outer, inner);
        return value;
    }

    public final void field4(char value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field4 = value;
        v.setBit(FIELD4_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Character field5() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD5_INDEX);
        java.lang.Character value = v != null ? v._field5 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field5(java.lang.Character value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field5 = value;
        v.setBit(FIELD5_INDEX);
        endWrite_(outer, inner);
    }

    public final short field6() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD6_INDEX);
        short value = v != null ? v._field6 : ((short) 0);
        endRead_(outer, inner);
        return value;
    }

    public final void field6(short value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field6 = value;
        v.setBit(FIELD6_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Short field7() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD7_INDEX);
        java.lang.Short value = v != null ? v._field7 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field7(java.lang.Short value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field7 = value;
        v.setBit(FIELD7_INDEX);
        endWrite_(outer, inner);
    }

    public final int field8() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD8_INDEX);
        int value = v != null ? v._field8 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void field8(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field8 = value;
        v.setBit(FIELD8_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Integer field9() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD9_INDEX);
        java.lang.Integer value = v != null ? v._field9 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field9(java.lang.Integer value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field9 = value;
        v.setBit(FIELD9_INDEX);
        endWrite_(outer, inner);
    }

    public final long field10() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD10_INDEX);
        long value = v != null ? v._field10 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void field10(long value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field10 = value;
        v.setBit(FIELD10_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Long field11() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD11_INDEX);
        java.lang.Long value = v != null ? v._field11 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field11(java.lang.Long value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field11 = value;
        v.setBit(FIELD11_INDEX);
        endWrite_(outer, inner);
    }

    public final float field12() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD12_INDEX);
        float value = v != null ? v._field12 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void field12(float value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field12 = value;
        v.setBit(FIELD12_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Float field13() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD13_INDEX);
        java.lang.Float value = v != null ? v._field13 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field13(java.lang.Float value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field13 = value;
        v.setBit(FIELD13_INDEX);
        endWrite_(outer, inner);
    }

    public final double field14() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD14_INDEX);
        double value = v != null ? v._field14 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void field14(double value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field14 = value;
        v.setBit(FIELD14_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.Double field15() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD15_INDEX);
        java.lang.Double value = v != null ? v._field15 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field15(java.lang.Double value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field15 = value;
        v.setBit(FIELD15_INDEX);
        endWrite_(outer, inner);
    }

    public final java.lang.String field16() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD16_INDEX);
        java.lang.String value = v != null ? v._field16 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field16(java.lang.String value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field16 = value;
        v.setBit(FIELD16_INDEX);
        endWrite_(outer, inner);
    }

    public final java.util.Date field17() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD17_INDEX);
        java.util.Date value = v != null ? v._field17 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field17(java.util.Date value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field17 = value;
        v.setBit(FIELD17_INDEX);
        endWrite_(outer, inner);
    }

    public final java.math.BigInteger field18() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD18_INDEX);
        java.math.BigInteger value = v != null ? v._field18 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field18(java.math.BigInteger value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field18 = value;
        v.setBit(FIELD18_INDEX);
        endWrite_(outer, inner);
    }

    public final java.math.BigDecimal field19() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD19_INDEX);
        java.math.BigDecimal value = v != null ? v._field19 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field19(java.math.BigDecimal value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field19 = value;
        v.setBit(FIELD19_INDEX);
        endWrite_(outer, inner);
    }

    public final byte[] field20() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, FIELD20_INDEX);
        byte[] value = v != null ? v._field20 : null;
        endRead_(outer, inner);
        return value;
    }

    public final void field20(byte[] value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._field20 = value;
        v.setBit(FIELD20_INDEX);
        endWrite_(outer, inner);
    }

    public final org.objectfabric.TArrayTObject<org.objectfabric.generated.TypesClass> array() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, ARRAY_INDEX);
        org.objectfabric.TArrayTObject<org.objectfabric.generated.TypesClass> value = v != null ? v._array : null;
        endRead_(outer, inner);
        return value;
    }

    public final void array(org.objectfabric.TArrayTObject<org.objectfabric.generated.TypesClass> value) {
        if (value.resource() != resource())
            wrongResource_();

        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._array = value;
        v.setBit(ARRAY_INDEX);
        endWrite_(outer, inner);
    }

    public static final int FIELD0_INDEX = 0;

    public static final java.lang.String FIELD0_NAME = "field0";

    public static final org.objectfabric.TType FIELD0_TYPE = org.objectfabric.Immutable.BOOLEAN.type();

    public static final int FIELD1_INDEX = 1;

    public static final java.lang.String FIELD1_NAME = "field1";

    public static final org.objectfabric.TType FIELD1_TYPE = org.objectfabric.Immutable.BOOLEAN_BOXED.type();

    public static final int FIELD2_INDEX = 2;

    public static final java.lang.String FIELD2_NAME = "field2";

    public static final org.objectfabric.TType FIELD2_TYPE = org.objectfabric.Immutable.BYTE.type();

    public static final int FIELD3_INDEX = 3;

    public static final java.lang.String FIELD3_NAME = "field3";

    public static final org.objectfabric.TType FIELD3_TYPE = org.objectfabric.Immutable.BYTE_BOXED.type();

    public static final int FIELD4_INDEX = 4;

    public static final java.lang.String FIELD4_NAME = "field4";

    public static final org.objectfabric.TType FIELD4_TYPE = org.objectfabric.Immutable.CHARACTER.type();

    public static final int FIELD5_INDEX = 5;

    public static final java.lang.String FIELD5_NAME = "field5";

    public static final org.objectfabric.TType FIELD5_TYPE = org.objectfabric.Immutable.CHARACTER_BOXED.type();

    public static final int FIELD6_INDEX = 6;

    public static final java.lang.String FIELD6_NAME = "field6";

    public static final org.objectfabric.TType FIELD6_TYPE = org.objectfabric.Immutable.SHORT.type();

    public static final int FIELD7_INDEX = 7;

    public static final java.lang.String FIELD7_NAME = "field7";

    public static final org.objectfabric.TType FIELD7_TYPE = org.objectfabric.Immutable.SHORT_BOXED.type();

    public static final int FIELD8_INDEX = 8;

    public static final java.lang.String FIELD8_NAME = "field8";

    public static final org.objectfabric.TType FIELD8_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int FIELD9_INDEX = 9;

    public static final java.lang.String FIELD9_NAME = "field9";

    public static final org.objectfabric.TType FIELD9_TYPE = org.objectfabric.Immutable.INTEGER_BOXED.type();

    public static final int FIELD10_INDEX = 10;

    public static final java.lang.String FIELD10_NAME = "field10";

    public static final org.objectfabric.TType FIELD10_TYPE = org.objectfabric.Immutable.LONG.type();

    public static final int FIELD11_INDEX = 11;

    public static final java.lang.String FIELD11_NAME = "field11";

    public static final org.objectfabric.TType FIELD11_TYPE = org.objectfabric.Immutable.LONG_BOXED.type();

    public static final int FIELD12_INDEX = 12;

    public static final java.lang.String FIELD12_NAME = "field12";

    public static final org.objectfabric.TType FIELD12_TYPE = org.objectfabric.Immutable.FLOAT.type();

    public static final int FIELD13_INDEX = 13;

    public static final java.lang.String FIELD13_NAME = "field13";

    public static final org.objectfabric.TType FIELD13_TYPE = org.objectfabric.Immutable.FLOAT_BOXED.type();

    public static final int FIELD14_INDEX = 14;

    public static final java.lang.String FIELD14_NAME = "field14";

    public static final org.objectfabric.TType FIELD14_TYPE = org.objectfabric.Immutable.DOUBLE.type();

    public static final int FIELD15_INDEX = 15;

    public static final java.lang.String FIELD15_NAME = "field15";

    public static final org.objectfabric.TType FIELD15_TYPE = org.objectfabric.Immutable.DOUBLE_BOXED.type();

    public static final int FIELD16_INDEX = 16;

    public static final java.lang.String FIELD16_NAME = "field16";

    public static final org.objectfabric.TType FIELD16_TYPE = org.objectfabric.Immutable.STRING.type();

    public static final int FIELD17_INDEX = 17;

    public static final java.lang.String FIELD17_NAME = "field17";

    public static final org.objectfabric.TType FIELD17_TYPE = org.objectfabric.Immutable.DATE.type();

    public static final int FIELD18_INDEX = 18;

    public static final java.lang.String FIELD18_NAME = "field18";

    public static final org.objectfabric.TType FIELD18_TYPE = org.objectfabric.Immutable.BIG_INTEGER.type();

    public static final int FIELD19_INDEX = 19;

    public static final java.lang.String FIELD19_NAME = "field19";

    public static final org.objectfabric.TType FIELD19_TYPE = org.objectfabric.Immutable.DECIMAL.type();

    public static final int FIELD20_INDEX = 20;

    public static final java.lang.String FIELD20_NAME = "field20";

    public static final org.objectfabric.TType FIELD20_TYPE = org.objectfabric.Immutable.BINARY.type();

    public static final int ARRAY_INDEX = 21;

    public static final java.lang.String ARRAY_NAME = "array";

    public static final org.objectfabric.TType ARRAY_TYPE = org.objectfabric.TArrayTObject.TYPE;

    public static final int FIELD_COUNT = 22;

    public static java.lang.String fieldName(int index) {
        switch (index) {
            case FIELD0_INDEX:
                return FIELD0_NAME;
            case FIELD1_INDEX:
                return FIELD1_NAME;
            case FIELD2_INDEX:
                return FIELD2_NAME;
            case FIELD3_INDEX:
                return FIELD3_NAME;
            case FIELD4_INDEX:
                return FIELD4_NAME;
            case FIELD5_INDEX:
                return FIELD5_NAME;
            case FIELD6_INDEX:
                return FIELD6_NAME;
            case FIELD7_INDEX:
                return FIELD7_NAME;
            case FIELD8_INDEX:
                return FIELD8_NAME;
            case FIELD9_INDEX:
                return FIELD9_NAME;
            case FIELD10_INDEX:
                return FIELD10_NAME;
            case FIELD11_INDEX:
                return FIELD11_NAME;
            case FIELD12_INDEX:
                return FIELD12_NAME;
            case FIELD13_INDEX:
                return FIELD13_NAME;
            case FIELD14_INDEX:
                return FIELD14_NAME;
            case FIELD15_INDEX:
                return FIELD15_NAME;
            case FIELD16_INDEX:
                return FIELD16_NAME;
            case FIELD17_INDEX:
                return FIELD17_NAME;
            case FIELD18_INDEX:
                return FIELD18_NAME;
            case FIELD19_INDEX:
                return FIELD19_NAME;
            case FIELD20_INDEX:
                return FIELD20_NAME;
            case ARRAY_INDEX:
                return ARRAY_NAME;
            default:
                throw new IllegalArgumentException();
        }
    }

    public static org.objectfabric.TType fieldType(int index) {
        switch (index) {
            case FIELD0_INDEX:
                return FIELD0_TYPE;
            case FIELD1_INDEX:
                return FIELD1_TYPE;
            case FIELD2_INDEX:
                return FIELD2_TYPE;
            case FIELD3_INDEX:
                return FIELD3_TYPE;
            case FIELD4_INDEX:
                return FIELD4_TYPE;
            case FIELD5_INDEX:
                return FIELD5_TYPE;
            case FIELD6_INDEX:
                return FIELD6_TYPE;
            case FIELD7_INDEX:
                return FIELD7_TYPE;
            case FIELD8_INDEX:
                return FIELD8_TYPE;
            case FIELD9_INDEX:
                return FIELD9_TYPE;
            case FIELD10_INDEX:
                return FIELD10_TYPE;
            case FIELD11_INDEX:
                return FIELD11_TYPE;
            case FIELD12_INDEX:
                return FIELD12_TYPE;
            case FIELD13_INDEX:
                return FIELD13_TYPE;
            case FIELD14_INDEX:
                return FIELD14_TYPE;
            case FIELD15_INDEX:
                return FIELD15_TYPE;
            case FIELD16_INDEX:
                return FIELD16_TYPE;
            case FIELD17_INDEX:
                return FIELD17_TYPE;
            case FIELD18_INDEX:
                return FIELD18_TYPE;
            case FIELD19_INDEX:
                return FIELD19_TYPE;
            case FIELD20_INDEX:
                return FIELD20_TYPE;
            case ARRAY_INDEX:
                return ARRAY_TYPE;
            default:
                throw new IllegalArgumentException();
        }
    }

    @Override
    protected org.objectfabric.TObject.Version createVersion_() {
        Version version = new Version(0);
        version.setObject(this);
        return version;
    }

    @Override
    protected int classId_() {
        return org.objectfabric.generated.TypesObjectModel.ORG_OBJECTFABRIC_GENERATED_TYPESCLASS_CLASS_ID;
    }

    @Override
    protected org.objectfabric.ObjectModel objectModel_() {
        return org.objectfabric.generated.TypesObjectModel.instance();
    }

    protected static class Version extends org.objectfabric.TIndexed.Version32 {

        public boolean _field0;

        public java.lang.Boolean _field1;

        public byte _field2;

        public java.lang.Byte _field3;

        public char _field4;

        public java.lang.Character _field5;

        public short _field6;

        public java.lang.Short _field7;

        public int _field8;

        public java.lang.Integer _field9;

        public long _field10;

        public java.lang.Long _field11;

        public float _field12;

        public java.lang.Float _field13;

        public double _field14;

        public java.lang.Double _field15;

        public java.lang.String _field16;

        public java.util.Date _field17;

        public java.math.BigInteger _field18;

        public java.math.BigDecimal _field19;

        public byte[] _field20;

        public org.objectfabric.TArrayTObject _array;

        static {
        }

        public Version(int length) {
            super(length);
        }

        @Override
        public java.lang.String getFieldName(int index) {
            return fieldName(index);
        }

        @Override
        public org.objectfabric.TType getFieldType(int index) {
            return fieldType(index);
        }

        @Override
        public java.lang.Object getAsObject(int index) {
            switch (index) {
                case FIELD0_INDEX:
                    return _field0;
                case FIELD1_INDEX:
                    return _field1;
                case FIELD2_INDEX:
                    return _field2;
                case FIELD3_INDEX:
                    return _field3;
                case FIELD4_INDEX:
                    return _field4;
                case FIELD5_INDEX:
                    return _field5;
                case FIELD6_INDEX:
                    return _field6;
                case FIELD7_INDEX:
                    return _field7;
                case FIELD8_INDEX:
                    return _field8;
                case FIELD9_INDEX:
                    return _field9;
                case FIELD10_INDEX:
                    return _field10;
                case FIELD11_INDEX:
                    return _field11;
                case FIELD12_INDEX:
                    return _field12;
                case FIELD13_INDEX:
                    return _field13;
                case FIELD14_INDEX:
                    return _field14;
                case FIELD15_INDEX:
                    return _field15;
                case FIELD16_INDEX:
                    return _field16;
                case FIELD17_INDEX:
                    return _field17;
                case FIELD18_INDEX:
                    return _field18;
                case FIELD19_INDEX:
                    return _field19;
                case FIELD20_INDEX:
                    return _field20;
                case ARRAY_INDEX:
                    return _array;
                default:
                    return super.getAsObject(index);
            }
        }

        @Override
        public void setAsObject(int index, java.lang.Object value) {
            switch (index) {
                case FIELD0_INDEX:
                    _field0 = ((java.lang.Boolean) value).booleanValue();
                    break;
                case FIELD1_INDEX:
                    _field1 = (java.lang.Boolean) value;
                    break;
                case FIELD2_INDEX:
                    _field2 = ((java.lang.Byte) value).byteValue();
                    break;
                case FIELD3_INDEX:
                    _field3 = (java.lang.Byte) value;
                    break;
                case FIELD4_INDEX:
                    _field4 = ((java.lang.Character) value).charValue();
                    break;
                case FIELD5_INDEX:
                    _field5 = (java.lang.Character) value;
                    break;
                case FIELD6_INDEX:
                    _field6 = ((java.lang.Short) value).shortValue();
                    break;
                case FIELD7_INDEX:
                    _field7 = (java.lang.Short) value;
                    break;
                case FIELD8_INDEX:
                    _field8 = ((java.lang.Integer) value).intValue();
                    break;
                case FIELD9_INDEX:
                    _field9 = (java.lang.Integer) value;
                    break;
                case FIELD10_INDEX:
                    _field10 = ((java.lang.Long) value).longValue();
                    break;
                case FIELD11_INDEX:
                    _field11 = (java.lang.Long) value;
                    break;
                case FIELD12_INDEX:
                    _field12 = ((java.lang.Float) value).floatValue();
                    break;
                case FIELD13_INDEX:
                    _field13 = (java.lang.Float) value;
                    break;
                case FIELD14_INDEX:
                    _field14 = ((java.lang.Double) value).doubleValue();
                    break;
                case FIELD15_INDEX:
                    _field15 = (java.lang.Double) value;
                    break;
                case FIELD16_INDEX:
                    _field16 = (java.lang.String) value;
                    break;
                case FIELD17_INDEX:
                    _field17 = (java.util.Date) value;
                    break;
                case FIELD18_INDEX:
                    _field18 = (java.math.BigInteger) value;
                    break;
                case FIELD19_INDEX:
                    _field19 = (java.math.BigDecimal) value;
                    break;
                case FIELD20_INDEX:
                    _field20 = (byte[]) value;
                    break;
                case ARRAY_INDEX:
                    _array = (org.objectfabric.TArrayTObject) value;
                    break;
                default:
                    super.setAsObject(index, value);
                    break;
            }
        }

        @Override
        public void merge(org.objectfabric.TObject.Version next) {
            TypesClass.Version source = (TypesClass.Version) next;

            if (source.hasBits()) {
                if (source.getBit(FIELD0_INDEX))
                    _field0 = source._field0;

                if (source.getBit(FIELD1_INDEX))
                    _field1 = source._field1;

                if (source.getBit(FIELD2_INDEX))
                    _field2 = source._field2;

                if (source.getBit(FIELD3_INDEX))
                    _field3 = source._field3;

                if (source.getBit(FIELD4_INDEX))
                    _field4 = source._field4;

                if (source.getBit(FIELD5_INDEX))
                    _field5 = source._field5;

                if (source.getBit(FIELD6_INDEX))
                    _field6 = source._field6;

                if (source.getBit(FIELD7_INDEX))
                    _field7 = source._field7;

                if (source.getBit(FIELD8_INDEX))
                    _field8 = source._field8;

                if (source.getBit(FIELD9_INDEX))
                    _field9 = source._field9;

                if (source.getBit(FIELD10_INDEX))
                    _field10 = source._field10;

                if (source.getBit(FIELD11_INDEX))
                    _field11 = source._field11;

                if (source.getBit(FIELD12_INDEX))
                    _field12 = source._field12;

                if (source.getBit(FIELD13_INDEX))
                    _field13 = source._field13;

                if (source.getBit(FIELD14_INDEX))
                    _field14 = source._field14;

                if (source.getBit(FIELD15_INDEX))
                    _field15 = source._field15;

                if (source.getBit(FIELD16_INDEX))
                    _field16 = source._field16;

                if (source.getBit(FIELD17_INDEX))
                    _field17 = source._field17;

                if (source.getBit(FIELD18_INDEX))
                    _field18 = source._field18;

                if (source.getBit(FIELD19_INDEX))
                    _field19 = source._field19;

                if (source.getBit(FIELD20_INDEX))
                    _field20 = source._field20;

                if (source.getBit(ARRAY_INDEX))
                    _array = source._array;
            }

            super.merge(next);
        }

        @Override
        public void writeWrite(org.objectfabric.Writer writer, int index) {
            if (writer.interrupted())
                writer.resume();

            switch (index) {
                case FIELD0_INDEX: {
                    if (!writer.canWriteBoolean()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeBoolean(_field0);
                    break;
                }
                case FIELD1_INDEX: {
                    if (!writer.canWriteBooleanBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeBooleanBoxed(_field1);
                    break;
                }
                case FIELD2_INDEX: {
                    if (!writer.canWriteByte()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeByte(_field2);
                    break;
                }
                case FIELD3_INDEX: {
                    if (!writer.canWriteByteBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeByteBoxed(_field3);
                    break;
                }
                case FIELD4_INDEX: {
                    if (!writer.canWriteCharacter()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeCharacter(_field4);
                    break;
                }
                case FIELD5_INDEX: {
                    if (!writer.canWriteCharacterBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeCharacterBoxed(_field5);
                    break;
                }
                case FIELD6_INDEX: {
                    if (!writer.canWriteShort()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeShort(_field6);
                    break;
                }
                case FIELD7_INDEX: {
                    if (!writer.canWriteShortBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeShortBoxed(_field7);
                    break;
                }
                case FIELD8_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_field8);
                    break;
                }
                case FIELD9_INDEX: {
                    if (!writer.canWriteIntegerBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeIntegerBoxed(_field9);
                    break;
                }
                case FIELD10_INDEX: {
                    if (!writer.canWriteLong()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeLong(_field10);
                    break;
                }
                case FIELD11_INDEX: {
                    if (!writer.canWriteLongBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeLongBoxed(_field11);
                    break;
                }
                case FIELD12_INDEX: {
                    if (!writer.canWriteFloat()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeFloat(_field12);
                    break;
                }
                case FIELD13_INDEX: {
                    if (!writer.canWriteFloatBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeFloatBoxed(_field13);
                    break;
                }
                case FIELD14_INDEX: {
                    if (!writer.canWriteDouble()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeDouble(_field14);
                    break;
                }
                case FIELD15_INDEX: {
                    if (!writer.canWriteDoubleBoxed()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeDoubleBoxed(_field15);
                    break;
                }
                case FIELD16_INDEX: {
                    writer.writeString(_field16);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
                case FIELD17_INDEX: {
                    if (!writer.canWriteDate()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeDate(_field17);
                    break;
                }
                case FIELD18_INDEX: {
                    writer.writeBigInteger(_field18);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
                case FIELD19_INDEX: {
                    writer.writeDecimal(_field19);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
                case FIELD20_INDEX: {
                    writer.writeBinary(_field20);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
                case ARRAY_INDEX: {
                    writer.writeTObject(_array);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
                default: {
                    super.writeWrite(writer, index);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }

        @Override
        public void readWrite(org.objectfabric.Reader reader, int index, java.lang.Object[] versions) {
            if (reader.interrupted())
                reader.resume();

            switch (index) {
                case FIELD0_INDEX: {
                    if (!reader.canReadBoolean()) {
                        reader.interrupt(null);
                        return;
                    }

                    boolean value = reader.readBoolean();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field0 = value;

                    break;
                }
                case FIELD1_INDEX: {
                    if (!reader.canReadBooleanBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Boolean value = reader.readBooleanBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field1 = value;

                    break;
                }
                case FIELD2_INDEX: {
                    if (!reader.canReadByte()) {
                        reader.interrupt(null);
                        return;
                    }

                    byte value = reader.readByte();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field2 = value;

                    break;
                }
                case FIELD3_INDEX: {
                    if (!reader.canReadByteBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Byte value = reader.readByteBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field3 = value;

                    break;
                }
                case FIELD4_INDEX: {
                    if (!reader.canReadCharacter()) {
                        reader.interrupt(null);
                        return;
                    }

                    char value = reader.readCharacter();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field4 = value;

                    break;
                }
                case FIELD5_INDEX: {
                    if (!reader.canReadCharacterBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Character value = reader.readCharacterBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field5 = value;

                    break;
                }
                case FIELD6_INDEX: {
                    if (!reader.canReadShort()) {
                        reader.interrupt(null);
                        return;
                    }

                    short value = reader.readShort();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field6 = value;

                    break;
                }
                case FIELD7_INDEX: {
                    if (!reader.canReadShortBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Short value = reader.readShortBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field7 = value;

                    break;
                }
                case FIELD8_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field8 = value;

                    break;
                }
                case FIELD9_INDEX: {
                    if (!reader.canReadIntegerBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Integer value = reader.readIntegerBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field9 = value;

                    break;
                }
                case FIELD10_INDEX: {
                    if (!reader.canReadLong()) {
                        reader.interrupt(null);
                        return;
                    }

                    long value = reader.readLong();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field10 = value;

                    break;
                }
                case FIELD11_INDEX: {
                    if (!reader.canReadLongBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Long value = reader.readLongBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field11 = value;

                    break;
                }
                case FIELD12_INDEX: {
                    if (!reader.canReadFloat()) {
                        reader.interrupt(null);
                        return;
                    }

                    float value = reader.readFloat();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field12 = value;

                    break;
                }
                case FIELD13_INDEX: {
                    if (!reader.canReadFloatBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Float value = reader.readFloatBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field13 = value;

                    break;
                }
                case FIELD14_INDEX: {
                    if (!reader.canReadDouble()) {
                        reader.interrupt(null);
                        return;
                    }

                    double value = reader.readDouble();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field14 = value;

                    break;
                }
                case FIELD15_INDEX: {
                    if (!reader.canReadDoubleBoxed()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.lang.Double value = reader.readDoubleBoxed();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field15 = value;

                    break;
                }
                case FIELD16_INDEX: {
                    java.lang.String value = reader.readString();

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field16 = value;

                    break;
                }
                case FIELD17_INDEX: {
                    if (!reader.canReadDate()) {
                        reader.interrupt(null);
                        return;
                    }

                    java.util.Date value = reader.readDate();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field17 = value;

                    break;
                }
                case FIELD18_INDEX: {
                    java.math.BigInteger value = reader.readBigInteger();

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field18 = value;

                    break;
                }
                case FIELD19_INDEX: {
                    java.math.BigDecimal value = reader.readDecimal();

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field19 = value;

                    break;
                }
                case FIELD20_INDEX: {
                    byte[] value = reader.readBinary();

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._field20 = value;

                    break;
                }
                case ARRAY_INDEX: {
                    java.lang.Object value = reader.readTObject();

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    for (int i = versions.length - 1; i >= 0; i--) {
                        java.lang.Object v = value instanceof org.objectfabric.TObject[] ? ((org.objectfabric.TObject[]) value)[i] : value;
                        ((Version) versions[i])._array = (org.objectfabric.TArrayTObject) v;
                    }

                    break;
                }
                default: {
                    super.readWrite(reader, index, versions);

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }
    }
}
