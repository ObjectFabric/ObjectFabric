/**
 * This file is part of ObjectFabric (http://objectfabric.org).
 *
 * ObjectFabric is licensed under the Apache License, Version 2.0, the terms
 * of which may be found at http://www.apache.org/licenses/LICENSE-2.0.html.
 * 
 * Copyright ObjectFabric Inc.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

package org.objectfabric.generated;

//==============================================================================
//                                                                              
//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                
//                                                                              
//==============================================================================

@SuppressWarnings({ "hiding", "unchecked", "static-access", "unused", "cast", "rawtypes" })
public class Limit32_max extends org.objectfabric.TGenerated {

    public Limit32_max(org.objectfabric.Resource resource) {
        this(resource, new Version(FIELD_COUNT), FIELD_COUNT);
    }

    protected Limit32_max(org.objectfabric.Resource resource, org.objectfabric.TObject.Version shared, int length) {
        super(resource, shared, FIELD_COUNT);
    }

    public Limit32_max(Limit32_max toCopy) {
        this(toCopy.resource());

        int0(toCopy.int0());
        int1(toCopy.int1());
        int2(toCopy.int2());
        int3(toCopy.int3());
        int4(toCopy.int4());
        int5(toCopy.int5());
        int6(toCopy.int6());
        int7(toCopy.int7());
        int8(toCopy.int8());
        int9(toCopy.int9());
        int10(toCopy.int10());
        int11(toCopy.int11());
        int12(toCopy.int12());
        int13(toCopy.int13());
        int14(toCopy.int14());
        int15(toCopy.int15());
        int16(toCopy.int16());
        int17(toCopy.int17());
        int18(toCopy.int18());
        int19(toCopy.int19());
        int20(toCopy.int20());
        int21(toCopy.int21());
        int22(toCopy.int22());
        int23(toCopy.int23());
        int24(toCopy.int24());
        int25(toCopy.int25());
        int26(toCopy.int26());
        int27(toCopy.int27());
        int28(toCopy.int28());
        int29(toCopy.int29());
        int30(toCopy.int30());
        int31(toCopy.int31());
    }

    public static final org.objectfabric.TType TYPE = new org.objectfabric.TType(org.objectfabric.generated.LimitsObjectModel.instance(), org.objectfabric.generated.LimitsObjectModel.ORG_OBJECTFABRIC_GENERATED_LIMIT32_MAX_CLASS_ID);

    public final int int0() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT0_INDEX);
        int value = v != null ? v._int0 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int0(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int0 = value;
        v.setBit(INT0_INDEX);
        endWrite_(outer, inner);
    }

    public final int int1() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT1_INDEX);
        int value = v != null ? v._int1 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int1(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int1 = value;
        v.setBit(INT1_INDEX);
        endWrite_(outer, inner);
    }

    public final int int2() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT2_INDEX);
        int value = v != null ? v._int2 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int2(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int2 = value;
        v.setBit(INT2_INDEX);
        endWrite_(outer, inner);
    }

    public final int int3() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT3_INDEX);
        int value = v != null ? v._int3 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int3(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int3 = value;
        v.setBit(INT3_INDEX);
        endWrite_(outer, inner);
    }

    public final int int4() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT4_INDEX);
        int value = v != null ? v._int4 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int4(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int4 = value;
        v.setBit(INT4_INDEX);
        endWrite_(outer, inner);
    }

    public final int int5() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT5_INDEX);
        int value = v != null ? v._int5 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int5(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int5 = value;
        v.setBit(INT5_INDEX);
        endWrite_(outer, inner);
    }

    public final int int6() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT6_INDEX);
        int value = v != null ? v._int6 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int6(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int6 = value;
        v.setBit(INT6_INDEX);
        endWrite_(outer, inner);
    }

    public final int int7() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT7_INDEX);
        int value = v != null ? v._int7 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int7(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int7 = value;
        v.setBit(INT7_INDEX);
        endWrite_(outer, inner);
    }

    public final int int8() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT8_INDEX);
        int value = v != null ? v._int8 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int8(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int8 = value;
        v.setBit(INT8_INDEX);
        endWrite_(outer, inner);
    }

    public final int int9() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT9_INDEX);
        int value = v != null ? v._int9 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int9(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int9 = value;
        v.setBit(INT9_INDEX);
        endWrite_(outer, inner);
    }

    public final int int10() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT10_INDEX);
        int value = v != null ? v._int10 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int10(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int10 = value;
        v.setBit(INT10_INDEX);
        endWrite_(outer, inner);
    }

    public final int int11() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT11_INDEX);
        int value = v != null ? v._int11 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int11(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int11 = value;
        v.setBit(INT11_INDEX);
        endWrite_(outer, inner);
    }

    public final int int12() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT12_INDEX);
        int value = v != null ? v._int12 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int12(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int12 = value;
        v.setBit(INT12_INDEX);
        endWrite_(outer, inner);
    }

    public final int int13() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT13_INDEX);
        int value = v != null ? v._int13 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int13(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int13 = value;
        v.setBit(INT13_INDEX);
        endWrite_(outer, inner);
    }

    public final int int14() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT14_INDEX);
        int value = v != null ? v._int14 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int14(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int14 = value;
        v.setBit(INT14_INDEX);
        endWrite_(outer, inner);
    }

    public final int int15() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT15_INDEX);
        int value = v != null ? v._int15 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int15(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int15 = value;
        v.setBit(INT15_INDEX);
        endWrite_(outer, inner);
    }

    public final int int16() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT16_INDEX);
        int value = v != null ? v._int16 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int16(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int16 = value;
        v.setBit(INT16_INDEX);
        endWrite_(outer, inner);
    }

    public final int int17() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT17_INDEX);
        int value = v != null ? v._int17 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int17(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int17 = value;
        v.setBit(INT17_INDEX);
        endWrite_(outer, inner);
    }

    public final int int18() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT18_INDEX);
        int value = v != null ? v._int18 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int18(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int18 = value;
        v.setBit(INT18_INDEX);
        endWrite_(outer, inner);
    }

    public final int int19() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT19_INDEX);
        int value = v != null ? v._int19 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int19(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int19 = value;
        v.setBit(INT19_INDEX);
        endWrite_(outer, inner);
    }

    public final int int20() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT20_INDEX);
        int value = v != null ? v._int20 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int20(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int20 = value;
        v.setBit(INT20_INDEX);
        endWrite_(outer, inner);
    }

    public final int int21() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT21_INDEX);
        int value = v != null ? v._int21 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int21(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int21 = value;
        v.setBit(INT21_INDEX);
        endWrite_(outer, inner);
    }

    public final int int22() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT22_INDEX);
        int value = v != null ? v._int22 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int22(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int22 = value;
        v.setBit(INT22_INDEX);
        endWrite_(outer, inner);
    }

    public final int int23() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT23_INDEX);
        int value = v != null ? v._int23 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int23(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int23 = value;
        v.setBit(INT23_INDEX);
        endWrite_(outer, inner);
    }

    public final int int24() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT24_INDEX);
        int value = v != null ? v._int24 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int24(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int24 = value;
        v.setBit(INT24_INDEX);
        endWrite_(outer, inner);
    }

    public final int int25() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT25_INDEX);
        int value = v != null ? v._int25 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int25(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int25 = value;
        v.setBit(INT25_INDEX);
        endWrite_(outer, inner);
    }

    public final int int26() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT26_INDEX);
        int value = v != null ? v._int26 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int26(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int26 = value;
        v.setBit(INT26_INDEX);
        endWrite_(outer, inner);
    }

    public final int int27() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT27_INDEX);
        int value = v != null ? v._int27 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int27(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int27 = value;
        v.setBit(INT27_INDEX);
        endWrite_(outer, inner);
    }

    public final int int28() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT28_INDEX);
        int value = v != null ? v._int28 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int28(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int28 = value;
        v.setBit(INT28_INDEX);
        endWrite_(outer, inner);
    }

    public final int int29() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT29_INDEX);
        int value = v != null ? v._int29 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int29(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int29 = value;
        v.setBit(INT29_INDEX);
        endWrite_(outer, inner);
    }

    public final int int30() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT30_INDEX);
        int value = v != null ? v._int30 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int30(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int30 = value;
        v.setBit(INT30_INDEX);
        endWrite_(outer, inner);
    }

    public final int int31() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, INT31_INDEX);
        int value = v != null ? v._int31 : 0;
        endRead_(outer, inner);
        return value;
    }

    public final void int31(int value) {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._int31 = value;
        v.setBit(INT31_INDEX);
        endWrite_(outer, inner);
    }

    public static final int INT0_INDEX = 0;

    public static final java.lang.String INT0_NAME = "int0";

    public static final org.objectfabric.TType INT0_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT1_INDEX = 1;

    public static final java.lang.String INT1_NAME = "int1";

    public static final org.objectfabric.TType INT1_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT2_INDEX = 2;

    public static final java.lang.String INT2_NAME = "int2";

    public static final org.objectfabric.TType INT2_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT3_INDEX = 3;

    public static final java.lang.String INT3_NAME = "int3";

    public static final org.objectfabric.TType INT3_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT4_INDEX = 4;

    public static final java.lang.String INT4_NAME = "int4";

    public static final org.objectfabric.TType INT4_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT5_INDEX = 5;

    public static final java.lang.String INT5_NAME = "int5";

    public static final org.objectfabric.TType INT5_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT6_INDEX = 6;

    public static final java.lang.String INT6_NAME = "int6";

    public static final org.objectfabric.TType INT6_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT7_INDEX = 7;

    public static final java.lang.String INT7_NAME = "int7";

    public static final org.objectfabric.TType INT7_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT8_INDEX = 8;

    public static final java.lang.String INT8_NAME = "int8";

    public static final org.objectfabric.TType INT8_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT9_INDEX = 9;

    public static final java.lang.String INT9_NAME = "int9";

    public static final org.objectfabric.TType INT9_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT10_INDEX = 10;

    public static final java.lang.String INT10_NAME = "int10";

    public static final org.objectfabric.TType INT10_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT11_INDEX = 11;

    public static final java.lang.String INT11_NAME = "int11";

    public static final org.objectfabric.TType INT11_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT12_INDEX = 12;

    public static final java.lang.String INT12_NAME = "int12";

    public static final org.objectfabric.TType INT12_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT13_INDEX = 13;

    public static final java.lang.String INT13_NAME = "int13";

    public static final org.objectfabric.TType INT13_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT14_INDEX = 14;

    public static final java.lang.String INT14_NAME = "int14";

    public static final org.objectfabric.TType INT14_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT15_INDEX = 15;

    public static final java.lang.String INT15_NAME = "int15";

    public static final org.objectfabric.TType INT15_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT16_INDEX = 16;

    public static final java.lang.String INT16_NAME = "int16";

    public static final org.objectfabric.TType INT16_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT17_INDEX = 17;

    public static final java.lang.String INT17_NAME = "int17";

    public static final org.objectfabric.TType INT17_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT18_INDEX = 18;

    public static final java.lang.String INT18_NAME = "int18";

    public static final org.objectfabric.TType INT18_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT19_INDEX = 19;

    public static final java.lang.String INT19_NAME = "int19";

    public static final org.objectfabric.TType INT19_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT20_INDEX = 20;

    public static final java.lang.String INT20_NAME = "int20";

    public static final org.objectfabric.TType INT20_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT21_INDEX = 21;

    public static final java.lang.String INT21_NAME = "int21";

    public static final org.objectfabric.TType INT21_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT22_INDEX = 22;

    public static final java.lang.String INT22_NAME = "int22";

    public static final org.objectfabric.TType INT22_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT23_INDEX = 23;

    public static final java.lang.String INT23_NAME = "int23";

    public static final org.objectfabric.TType INT23_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT24_INDEX = 24;

    public static final java.lang.String INT24_NAME = "int24";

    public static final org.objectfabric.TType INT24_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT25_INDEX = 25;

    public static final java.lang.String INT25_NAME = "int25";

    public static final org.objectfabric.TType INT25_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT26_INDEX = 26;

    public static final java.lang.String INT26_NAME = "int26";

    public static final org.objectfabric.TType INT26_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT27_INDEX = 27;

    public static final java.lang.String INT27_NAME = "int27";

    public static final org.objectfabric.TType INT27_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT28_INDEX = 28;

    public static final java.lang.String INT28_NAME = "int28";

    public static final org.objectfabric.TType INT28_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT29_INDEX = 29;

    public static final java.lang.String INT29_NAME = "int29";

    public static final org.objectfabric.TType INT29_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT30_INDEX = 30;

    public static final java.lang.String INT30_NAME = "int30";

    public static final org.objectfabric.TType INT30_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int INT31_INDEX = 31;

    public static final java.lang.String INT31_NAME = "int31";

    public static final org.objectfabric.TType INT31_TYPE = org.objectfabric.Immutable.INTEGER.type();

    public static final int FIELD_COUNT = 32;

    public static java.lang.String fieldName(int index) {
        switch (index) {
            case INT0_INDEX:
                return INT0_NAME;
            case INT1_INDEX:
                return INT1_NAME;
            case INT2_INDEX:
                return INT2_NAME;
            case INT3_INDEX:
                return INT3_NAME;
            case INT4_INDEX:
                return INT4_NAME;
            case INT5_INDEX:
                return INT5_NAME;
            case INT6_INDEX:
                return INT6_NAME;
            case INT7_INDEX:
                return INT7_NAME;
            case INT8_INDEX:
                return INT8_NAME;
            case INT9_INDEX:
                return INT9_NAME;
            case INT10_INDEX:
                return INT10_NAME;
            case INT11_INDEX:
                return INT11_NAME;
            case INT12_INDEX:
                return INT12_NAME;
            case INT13_INDEX:
                return INT13_NAME;
            case INT14_INDEX:
                return INT14_NAME;
            case INT15_INDEX:
                return INT15_NAME;
            case INT16_INDEX:
                return INT16_NAME;
            case INT17_INDEX:
                return INT17_NAME;
            case INT18_INDEX:
                return INT18_NAME;
            case INT19_INDEX:
                return INT19_NAME;
            case INT20_INDEX:
                return INT20_NAME;
            case INT21_INDEX:
                return INT21_NAME;
            case INT22_INDEX:
                return INT22_NAME;
            case INT23_INDEX:
                return INT23_NAME;
            case INT24_INDEX:
                return INT24_NAME;
            case INT25_INDEX:
                return INT25_NAME;
            case INT26_INDEX:
                return INT26_NAME;
            case INT27_INDEX:
                return INT27_NAME;
            case INT28_INDEX:
                return INT28_NAME;
            case INT29_INDEX:
                return INT29_NAME;
            case INT30_INDEX:
                return INT30_NAME;
            case INT31_INDEX:
                return INT31_NAME;
            default:
                throw new IllegalArgumentException();
        }
    }

    public static org.objectfabric.TType fieldType(int index) {
        switch (index) {
            case INT0_INDEX:
                return INT0_TYPE;
            case INT1_INDEX:
                return INT1_TYPE;
            case INT2_INDEX:
                return INT2_TYPE;
            case INT3_INDEX:
                return INT3_TYPE;
            case INT4_INDEX:
                return INT4_TYPE;
            case INT5_INDEX:
                return INT5_TYPE;
            case INT6_INDEX:
                return INT6_TYPE;
            case INT7_INDEX:
                return INT7_TYPE;
            case INT8_INDEX:
                return INT8_TYPE;
            case INT9_INDEX:
                return INT9_TYPE;
            case INT10_INDEX:
                return INT10_TYPE;
            case INT11_INDEX:
                return INT11_TYPE;
            case INT12_INDEX:
                return INT12_TYPE;
            case INT13_INDEX:
                return INT13_TYPE;
            case INT14_INDEX:
                return INT14_TYPE;
            case INT15_INDEX:
                return INT15_TYPE;
            case INT16_INDEX:
                return INT16_TYPE;
            case INT17_INDEX:
                return INT17_TYPE;
            case INT18_INDEX:
                return INT18_TYPE;
            case INT19_INDEX:
                return INT19_TYPE;
            case INT20_INDEX:
                return INT20_TYPE;
            case INT21_INDEX:
                return INT21_TYPE;
            case INT22_INDEX:
                return INT22_TYPE;
            case INT23_INDEX:
                return INT23_TYPE;
            case INT24_INDEX:
                return INT24_TYPE;
            case INT25_INDEX:
                return INT25_TYPE;
            case INT26_INDEX:
                return INT26_TYPE;
            case INT27_INDEX:
                return INT27_TYPE;
            case INT28_INDEX:
                return INT28_TYPE;
            case INT29_INDEX:
                return INT29_TYPE;
            case INT30_INDEX:
                return INT30_TYPE;
            case INT31_INDEX:
                return INT31_TYPE;
            default:
                throw new IllegalArgumentException();
        }
    }

    @Override
    protected org.objectfabric.TObject.Version createVersion_() {
        Version version = new Version(0);
        version.setObject(this);
        return version;
    }

    @Override
    protected int classId_() {
        return org.objectfabric.generated.LimitsObjectModel.ORG_OBJECTFABRIC_GENERATED_LIMIT32_MAX_CLASS_ID;
    }

    @Override
    protected org.objectfabric.ObjectModel objectModel_() {
        return org.objectfabric.generated.LimitsObjectModel.instance();
    }

    protected static class Version extends org.objectfabric.TIndexed.Version32 {

        public int _int0;

        public int _int1;

        public int _int2;

        public int _int3;

        public int _int4;

        public int _int5;

        public int _int6;

        public int _int7;

        public int _int8;

        public int _int9;

        public int _int10;

        public int _int11;

        public int _int12;

        public int _int13;

        public int _int14;

        public int _int15;

        public int _int16;

        public int _int17;

        public int _int18;

        public int _int19;

        public int _int20;

        public int _int21;

        public int _int22;

        public int _int23;

        public int _int24;

        public int _int25;

        public int _int26;

        public int _int27;

        public int _int28;

        public int _int29;

        public int _int30;

        public int _int31;

        static {
        }

        public Version(int length) {
            super(length);
        }

        @Override
        public java.lang.String getFieldName(int index) {
            return fieldName(index);
        }

        @Override
        public org.objectfabric.TType getFieldType(int index) {
            return fieldType(index);
        }

        @Override
        public java.lang.Object getAsObject(int index) {
            switch (index) {
                case INT0_INDEX:
                    return _int0;
                case INT1_INDEX:
                    return _int1;
                case INT2_INDEX:
                    return _int2;
                case INT3_INDEX:
                    return _int3;
                case INT4_INDEX:
                    return _int4;
                case INT5_INDEX:
                    return _int5;
                case INT6_INDEX:
                    return _int6;
                case INT7_INDEX:
                    return _int7;
                case INT8_INDEX:
                    return _int8;
                case INT9_INDEX:
                    return _int9;
                case INT10_INDEX:
                    return _int10;
                case INT11_INDEX:
                    return _int11;
                case INT12_INDEX:
                    return _int12;
                case INT13_INDEX:
                    return _int13;
                case INT14_INDEX:
                    return _int14;
                case INT15_INDEX:
                    return _int15;
                case INT16_INDEX:
                    return _int16;
                case INT17_INDEX:
                    return _int17;
                case INT18_INDEX:
                    return _int18;
                case INT19_INDEX:
                    return _int19;
                case INT20_INDEX:
                    return _int20;
                case INT21_INDEX:
                    return _int21;
                case INT22_INDEX:
                    return _int22;
                case INT23_INDEX:
                    return _int23;
                case INT24_INDEX:
                    return _int24;
                case INT25_INDEX:
                    return _int25;
                case INT26_INDEX:
                    return _int26;
                case INT27_INDEX:
                    return _int27;
                case INT28_INDEX:
                    return _int28;
                case INT29_INDEX:
                    return _int29;
                case INT30_INDEX:
                    return _int30;
                case INT31_INDEX:
                    return _int31;
                default:
                    return super.getAsObject(index);
            }
        }

        @Override
        public void setAsObject(int index, java.lang.Object value) {
            switch (index) {
                case INT0_INDEX:
                    _int0 = ((java.lang.Integer) value).intValue();
                    break;
                case INT1_INDEX:
                    _int1 = ((java.lang.Integer) value).intValue();
                    break;
                case INT2_INDEX:
                    _int2 = ((java.lang.Integer) value).intValue();
                    break;
                case INT3_INDEX:
                    _int3 = ((java.lang.Integer) value).intValue();
                    break;
                case INT4_INDEX:
                    _int4 = ((java.lang.Integer) value).intValue();
                    break;
                case INT5_INDEX:
                    _int5 = ((java.lang.Integer) value).intValue();
                    break;
                case INT6_INDEX:
                    _int6 = ((java.lang.Integer) value).intValue();
                    break;
                case INT7_INDEX:
                    _int7 = ((java.lang.Integer) value).intValue();
                    break;
                case INT8_INDEX:
                    _int8 = ((java.lang.Integer) value).intValue();
                    break;
                case INT9_INDEX:
                    _int9 = ((java.lang.Integer) value).intValue();
                    break;
                case INT10_INDEX:
                    _int10 = ((java.lang.Integer) value).intValue();
                    break;
                case INT11_INDEX:
                    _int11 = ((java.lang.Integer) value).intValue();
                    break;
                case INT12_INDEX:
                    _int12 = ((java.lang.Integer) value).intValue();
                    break;
                case INT13_INDEX:
                    _int13 = ((java.lang.Integer) value).intValue();
                    break;
                case INT14_INDEX:
                    _int14 = ((java.lang.Integer) value).intValue();
                    break;
                case INT15_INDEX:
                    _int15 = ((java.lang.Integer) value).intValue();
                    break;
                case INT16_INDEX:
                    _int16 = ((java.lang.Integer) value).intValue();
                    break;
                case INT17_INDEX:
                    _int17 = ((java.lang.Integer) value).intValue();
                    break;
                case INT18_INDEX:
                    _int18 = ((java.lang.Integer) value).intValue();
                    break;
                case INT19_INDEX:
                    _int19 = ((java.lang.Integer) value).intValue();
                    break;
                case INT20_INDEX:
                    _int20 = ((java.lang.Integer) value).intValue();
                    break;
                case INT21_INDEX:
                    _int21 = ((java.lang.Integer) value).intValue();
                    break;
                case INT22_INDEX:
                    _int22 = ((java.lang.Integer) value).intValue();
                    break;
                case INT23_INDEX:
                    _int23 = ((java.lang.Integer) value).intValue();
                    break;
                case INT24_INDEX:
                    _int24 = ((java.lang.Integer) value).intValue();
                    break;
                case INT25_INDEX:
                    _int25 = ((java.lang.Integer) value).intValue();
                    break;
                case INT26_INDEX:
                    _int26 = ((java.lang.Integer) value).intValue();
                    break;
                case INT27_INDEX:
                    _int27 = ((java.lang.Integer) value).intValue();
                    break;
                case INT28_INDEX:
                    _int28 = ((java.lang.Integer) value).intValue();
                    break;
                case INT29_INDEX:
                    _int29 = ((java.lang.Integer) value).intValue();
                    break;
                case INT30_INDEX:
                    _int30 = ((java.lang.Integer) value).intValue();
                    break;
                case INT31_INDEX:
                    _int31 = ((java.lang.Integer) value).intValue();
                    break;
                default:
                    super.setAsObject(index, value);
                    break;
            }
        }

        @Override
        public void merge(org.objectfabric.TObject.Version next) {
            Limit32_max.Version source = (Limit32_max.Version) next;

            if (source.hasBits()) {
                if (source.getBit(INT0_INDEX))
                    _int0 = source._int0;

                if (source.getBit(INT1_INDEX))
                    _int1 = source._int1;

                if (source.getBit(INT2_INDEX))
                    _int2 = source._int2;

                if (source.getBit(INT3_INDEX))
                    _int3 = source._int3;

                if (source.getBit(INT4_INDEX))
                    _int4 = source._int4;

                if (source.getBit(INT5_INDEX))
                    _int5 = source._int5;

                if (source.getBit(INT6_INDEX))
                    _int6 = source._int6;

                if (source.getBit(INT7_INDEX))
                    _int7 = source._int7;

                if (source.getBit(INT8_INDEX))
                    _int8 = source._int8;

                if (source.getBit(INT9_INDEX))
                    _int9 = source._int9;

                if (source.getBit(INT10_INDEX))
                    _int10 = source._int10;

                if (source.getBit(INT11_INDEX))
                    _int11 = source._int11;

                if (source.getBit(INT12_INDEX))
                    _int12 = source._int12;

                if (source.getBit(INT13_INDEX))
                    _int13 = source._int13;

                if (source.getBit(INT14_INDEX))
                    _int14 = source._int14;

                if (source.getBit(INT15_INDEX))
                    _int15 = source._int15;

                if (source.getBit(INT16_INDEX))
                    _int16 = source._int16;

                if (source.getBit(INT17_INDEX))
                    _int17 = source._int17;

                if (source.getBit(INT18_INDEX))
                    _int18 = source._int18;

                if (source.getBit(INT19_INDEX))
                    _int19 = source._int19;

                if (source.getBit(INT20_INDEX))
                    _int20 = source._int20;

                if (source.getBit(INT21_INDEX))
                    _int21 = source._int21;

                if (source.getBit(INT22_INDEX))
                    _int22 = source._int22;

                if (source.getBit(INT23_INDEX))
                    _int23 = source._int23;

                if (source.getBit(INT24_INDEX))
                    _int24 = source._int24;

                if (source.getBit(INT25_INDEX))
                    _int25 = source._int25;

                if (source.getBit(INT26_INDEX))
                    _int26 = source._int26;

                if (source.getBit(INT27_INDEX))
                    _int27 = source._int27;

                if (source.getBit(INT28_INDEX))
                    _int28 = source._int28;

                if (source.getBit(INT29_INDEX))
                    _int29 = source._int29;

                if (source.getBit(INT30_INDEX))
                    _int30 = source._int30;

                if (source.getBit(INT31_INDEX))
                    _int31 = source._int31;
            }

            super.merge(next);
        }

        @Override
        public void writeWrite(org.objectfabric.Writer writer, int index) {
            if (writer.interrupted())
                writer.resume();

            switch (index) {
                case INT0_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int0);
                    break;
                }
                case INT1_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int1);
                    break;
                }
                case INT2_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int2);
                    break;
                }
                case INT3_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int3);
                    break;
                }
                case INT4_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int4);
                    break;
                }
                case INT5_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int5);
                    break;
                }
                case INT6_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int6);
                    break;
                }
                case INT7_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int7);
                    break;
                }
                case INT8_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int8);
                    break;
                }
                case INT9_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int9);
                    break;
                }
                case INT10_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int10);
                    break;
                }
                case INT11_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int11);
                    break;
                }
                case INT12_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int12);
                    break;
                }
                case INT13_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int13);
                    break;
                }
                case INT14_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int14);
                    break;
                }
                case INT15_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int15);
                    break;
                }
                case INT16_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int16);
                    break;
                }
                case INT17_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int17);
                    break;
                }
                case INT18_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int18);
                    break;
                }
                case INT19_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int19);
                    break;
                }
                case INT20_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int20);
                    break;
                }
                case INT21_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int21);
                    break;
                }
                case INT22_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int22);
                    break;
                }
                case INT23_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int23);
                    break;
                }
                case INT24_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int24);
                    break;
                }
                case INT25_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int25);
                    break;
                }
                case INT26_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int26);
                    break;
                }
                case INT27_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int27);
                    break;
                }
                case INT28_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int28);
                    break;
                }
                case INT29_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int29);
                    break;
                }
                case INT30_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int30);
                    break;
                }
                case INT31_INDEX: {
                    if (!writer.canWriteInteger()) {
                        writer.interrupt(null);
                        return;
                    }

                    writer.writeInteger(_int31);
                    break;
                }
                default: {
                    super.writeWrite(writer, index);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }

        @Override
        public void readWrite(org.objectfabric.Reader reader, int index, java.lang.Object[] versions) {
            if (reader.interrupted())
                reader.resume();

            switch (index) {
                case INT0_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int0 = value;

                    break;
                }
                case INT1_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int1 = value;

                    break;
                }
                case INT2_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int2 = value;

                    break;
                }
                case INT3_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int3 = value;

                    break;
                }
                case INT4_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int4 = value;

                    break;
                }
                case INT5_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int5 = value;

                    break;
                }
                case INT6_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int6 = value;

                    break;
                }
                case INT7_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int7 = value;

                    break;
                }
                case INT8_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int8 = value;

                    break;
                }
                case INT9_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int9 = value;

                    break;
                }
                case INT10_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int10 = value;

                    break;
                }
                case INT11_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int11 = value;

                    break;
                }
                case INT12_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int12 = value;

                    break;
                }
                case INT13_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int13 = value;

                    break;
                }
                case INT14_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int14 = value;

                    break;
                }
                case INT15_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int15 = value;

                    break;
                }
                case INT16_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int16 = value;

                    break;
                }
                case INT17_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int17 = value;

                    break;
                }
                case INT18_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int18 = value;

                    break;
                }
                case INT19_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int19 = value;

                    break;
                }
                case INT20_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int20 = value;

                    break;
                }
                case INT21_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int21 = value;

                    break;
                }
                case INT22_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int22 = value;

                    break;
                }
                case INT23_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int23 = value;

                    break;
                }
                case INT24_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int24 = value;

                    break;
                }
                case INT25_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int25 = value;

                    break;
                }
                case INT26_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int26 = value;

                    break;
                }
                case INT27_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int27 = value;

                    break;
                }
                case INT28_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int28 = value;

                    break;
                }
                case INT29_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int29 = value;

                    break;
                }
                case INT30_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int30 = value;

                    break;
                }
                case INT31_INDEX: {
                    if (!reader.canReadInteger()) {
                        reader.interrupt(null);
                        return;
                    }

                    int value = reader.readInteger();

                    for (int i = versions.length - 1; i >= 0; i--)
                        ((Version) versions[i])._int31 = value;

                    break;
                }
                default: {
                    super.readWrite(reader, index, versions);

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }
    }
}
