/**
 * Copyright (c) ObjectFabric Inc. All rights reserved.
 *
 * This file is part of ObjectFabric (objectfabric.com).
 *
 * ObjectFabric is licensed under the Apache License, Version 2.0, the terms
 * of which may be found at http://www.apache.org/licenses/LICENSE-2.0.html.
 *
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

package com.objectfabric.generator;

import java.lang.reflect.Method;

import com.objectfabric.misc.Utils;

public abstract class FileGenerator {

    public final String Path;

    public final String Name;

    public final String Package;

    private final Generator _generator;

    private String _tab = "";

    protected FileGenerator(Generator generator, String packag, String name) {
        _generator = generator;

        Package = packag;
        Name = name;

        String path = generator.getFolder();

        if (generator.isJava())
            path += "/" + packag.replace('.', '/');

        Path = path + "/" + name + generator.getTarget().extension();
    }

    public final Generator g() {
        return _generator;
    }

    protected void copyright() {
        if (g().getCopyright() != null)
            wl(g().getCopyright());
    }

    protected void warning() {
        wl("//==============================================================================");
        wl("//                                                                              ");
        wl("//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                ");
        wl("//                                                                              ");
        wl("//==============================================================================");
        wl();
    }

    protected void header() {
    }

    protected void body() {
    }

    protected void footer() {
    }

    protected void generate() {
        header();
        body();
        footer();
    }

    protected void wl() {
        _generator.append(Utils.NEW_LINE);
    }

    protected void wl(String line) {
        line = onLine(line);
        _generator.append(_tab + line + Utils.NEW_LINE);
    }

    protected String onLine(String line) {
        return line;
    }

    protected void write(StringBuilder sb) {
        _generator.append(sb);
    }

    protected void tab() {
        _tab += "    ";
    }

    protected void untab() {
        _tab = _tab.substring(4);
    }

    protected String getReturned(Method method) {
        if (method.getReturnType().isArray())
            return method.getReturnType().getComponentType().getName() + "[]";

        return method.getReturnType().getName();
    }

    protected String addParameterTypeString(Class type, String current) {
        if (current.length() > 0)
            current += ", ";

        if (type.isArray())
            current += type.getComponentType().getName() + "[]";
        else
            current += type.getName();

        return current;
    }
}
