
package finance.client.generated;

//==============================================================================
//                                                                              
//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                
//                                                                              
//==============================================================================

@SuppressWarnings({ "hiding", "unchecked", "static-access" })
public class ObjectModel extends of4gwt.ObjectModel {

    private static final byte[] UID = { 62, 112, -81, 61, -58, -61, -32, 61, 111, 47, -4, 106, -7, 2, -51, -109 };

    private static volatile ObjectModel _instance;

    private static final Object _lock = new Object();

    protected ObjectModel(of4gwt.TObject.Version shared) {
        super(shared);
    }

    protected ObjectModel() {
        this(new Version(null));
    }

    public static ObjectModel getInstance() {
        if (_instance == null) {
            synchronized (_lock) {
                if (_instance == null)
                    _instance = new ObjectModel();
            }
        }

        return _instance;
    }

    public static byte[] getUID() {
        byte[] copy = new byte[UID.length];
        of4gwt.misc.PlatformAdapter.arraycopy(UID, 0, copy, 0, copy.length);
        return copy;
    }

    /**
     * Registers this object model so that its classes can be serialized by the
     * system.
     */
    public static void register() {
        register(getInstance());
    }

    /**
     * Registers an object model which can override <code>createInstance</code>
     * to let the system use your own derived classes. This is necessary e.g. to
     * implement remote methods on transactional objects.
     */
    public static void registerOverridenModel(ObjectModel model) {
        synchronized (_lock) {
            if (_instance != null)
                throw new RuntimeException("Object model has already been registered. This method can only be called at program startup.");

            _instance = model;
        }

        register(model);
    }

    @Override
    protected java.lang.String getObjectFabricVersion() {
        return "0.8";
    }

    public static final int CLASS_COUNT = 4;

    public static final int FINANCE_CLIENT_GENERATED_INSTRUMENT_CLASS_ID = 0;

    public static final int FINANCE_CLIENT_GENERATED_MARKET_CLASS_ID = 1;

    public static final int FINANCE_CLIENT_GENERATED_ORDER_CLASS_ID = 2;

    public static final int FINANCE_CLIENT_GENERATED_USER_CLASS_ID = 3;

    public static final int METHOD_COUNT = 1;

    public static final int FINANCE_CLIENT_GENERATED_OBJECTMODEL_METHOD_0_ID = 4;

    @Override
    protected java.lang.Class getClass(int classId, of4gwt.TType[] genericParameters) {
        switch (classId) {
            case FINANCE_CLIENT_GENERATED_INSTRUMENT_CLASS_ID:
                return finance.client.generated.Instrument.class;
            case FINANCE_CLIENT_GENERATED_MARKET_CLASS_ID:
                return finance.client.generated.Market.class;
            case FINANCE_CLIENT_GENERATED_ORDER_CLASS_ID:
                return finance.client.generated.Order.class;
            case FINANCE_CLIENT_GENERATED_USER_CLASS_ID:
                return finance.client.generated.User.class;
            case FINANCE_CLIENT_GENERATED_OBJECTMODEL_METHOD_0_ID:
                return Method0.class;
        }

        return super.getClass(classId, genericParameters);
    }

    @Override
    protected of4gwt.TObject.UserTObject createInstance(of4gwt.Transaction trunk, int classId, of4gwt.TType[] genericParameters) {
        switch (classId) {
            case FINANCE_CLIENT_GENERATED_INSTRUMENT_CLASS_ID:
                return new finance.client.generated.Instrument(trunk);
            case FINANCE_CLIENT_GENERATED_MARKET_CLASS_ID:
                return new finance.client.generated.Market(trunk, null);
            case FINANCE_CLIENT_GENERATED_ORDER_CLASS_ID:
                return new finance.client.generated.Order(trunk);
            case FINANCE_CLIENT_GENERATED_USER_CLASS_ID:
                return new finance.client.generated.User(trunk, null);
            case FINANCE_CLIENT_GENERATED_OBJECTMODEL_METHOD_0_ID:
                return new Method0(trunk);
        }

        return super.createInstance(trunk, classId, genericParameters);
    }

    protected static final class Version extends of4gwt.ObjectModel.Version {

        public Version(of4gwt.ObjectModel.Version shared) {
            super(shared);
        }

        @Override
        public byte[] getUID() {
            return ObjectModel.UID;
        }
    }

    public static class Method0 extends of4gwt.TGeneratedFields32 implements of4gwt.TObject.UserTObject.Method {

        public static final Method0 INSTANCE = new Method0(of4gwt.Site.getLocal().getTrunk());

        public Method0(of4gwt.Transaction trunk) {
            super(new Version(null, FIELD_COUNT), trunk);
        }

        public String getName() {
            return "getInstruments";
        }

        public static final of4gwt.TType TYPE = new of4gwt.TType(finance.client.generated.ObjectModel.getInstance(), finance.client.generated.ObjectModel.FINANCE_CLIENT_GENERATED_OBJECTMODEL_METHOD_0_ID);

        public static final int QUERY_INDEX = 0;

        public static final java.lang.String QUERY_NAME = "query";

        public static final of4gwt.TType QUERY_TYPE = of4gwt.ImmutableClass.STRING.getType();

        public static final int RETURN_OBJECTFABRIC_INDEX = 1;

        public static final java.lang.String RETURN_OBJECTFABRIC_NAME = "return_objectfabric";

        public static final of4gwt.TType RETURN_OBJECTFABRIC_TYPE = of4gwt.TList.TYPE;

        public static final int ERROR_OBJECTFABRIC_INDEX = 2;

        public static final java.lang.String ERROR_OBJECTFABRIC_NAME = "error_objectfabric";

        public static final of4gwt.TType ERROR_OBJECTFABRIC_TYPE = of4gwt.ImmutableClass.STRING.getType();

        public static final int FIELD_COUNT = 3;

        @Override
        public int getFieldCount() {
            return FIELD_COUNT;
        }

        @Override
        public java.lang.String getFieldName(int index) {
            return getFieldNameStatic(index);
        }

        @SuppressWarnings("static-access")
        public static java.lang.String getFieldNameStatic(int index) {
            switch (index) {
                case QUERY_INDEX:
                    return QUERY_NAME;
                case RETURN_OBJECTFABRIC_INDEX:
                    return RETURN_OBJECTFABRIC_NAME;
                case ERROR_OBJECTFABRIC_INDEX:
                    return ERROR_OBJECTFABRIC_NAME;
                default:
                    throw new IllegalArgumentException();
            }
        }

        @Override
        public  of4gwt.TType getFieldType(int index) {
            return getFieldTypeStatic(index);
        }

        @SuppressWarnings("static-access")
        public static of4gwt.TType getFieldTypeStatic(int index) {
            switch (index) {
                case QUERY_INDEX:
                    return QUERY_TYPE;
                case RETURN_OBJECTFABRIC_INDEX:
                    return RETURN_OBJECTFABRIC_TYPE;
                case ERROR_OBJECTFABRIC_INDEX:
                    return ERROR_OBJECTFABRIC_TYPE;
                default:
                    throw new IllegalArgumentException();
            }
        }

        public static class Version extends of4gwt.TGeneratedFields32.Version {

            public java.lang.String _query;

            public of4gwt.TObject _return_objectfabric;

            public java.lang.String _error_objectfabric;

            public Version(of4gwt.TGeneratedFields32.Version shared, int length) {
                super(shared, length);
            }

            @Override
            public of4gwt.TObject.Version merge(of4gwt.TObject.Version target, of4gwt.TObject.Version next, int flags) {
                Method0.Version source = (Method0.Version) next;
                Method0.Version merged = (Method0.Version) super.merge(target, next, flags);

                if (source.hasBits()) {
                    if (source.getBit(QUERY_INDEX))
                        merged._query = source._query;

                    if (source.getBit(RETURN_OBJECTFABRIC_INDEX))
                        merged._return_objectfabric = mergeTObject(merged._return_objectfabric, source._return_objectfabric);

                    if (source.getBit(ERROR_OBJECTFABRIC_INDEX))
                        merged._error_objectfabric = source._error_objectfabric;
                }

                return merged;
            }

            @Override
            public void writeWrite(of4gwt.Writer writer, int index) {
                if (writer.interrupted())
                    writer.resume();

                switch (index) {
                    case QUERY_INDEX: {
                        writer.writeString(_query);

                        if (writer.interrupted()) {
                            writer.interrupt(null);
                            return;
                        }
                        break;
                    }
                    case RETURN_OBJECTFABRIC_INDEX: {
                        writer.writeTObject(_return_objectfabric);

                        if (writer.interrupted()) {
                            writer.interrupt(null);
                            return;
                        }
                        break;
                    }
                    case ERROR_OBJECTFABRIC_INDEX: {
                        writer.writeString(_error_objectfabric);

                        if (writer.interrupted()) {
                            writer.interrupt(null);
                            return;
                        }
                        break;
                    }
                    default: {
                        super.writeWrite(writer, index);

                        if (writer.interrupted()) {
                            writer.interrupt(null);
                            return;
                        }
                        break;
                    }
                }
            }

            @Override
            public void readWrite(of4gwt.Reader reader, int index) {
                if (reader.interrupted())
                    reader.resume();

                switch (index) {
                    case QUERY_INDEX: {
                        _query = reader.readString();

                        if (reader.interrupted()) {
                            reader.interrupt(null);
                            return;
                        }
                        break;
                    }
                    case RETURN_OBJECTFABRIC_INDEX: {
                        _return_objectfabric = reader.readTObject();

                        if (reader.interrupted()) {
                            reader.interrupt(null);
                            return;
                        }
                        break;
                    }
                    case ERROR_OBJECTFABRIC_INDEX: {
                        _error_objectfabric = reader.readString();

                        if (reader.interrupted()) {
                            reader.interrupt(null);
                            return;
                        }
                        break;
                    }
                    default: {
                        super.readWrite(reader, index);

                        if (reader.interrupted()) {
                            reader.interrupt(null);
                            return;
                        }
                        break;
                    }
                }
            }

            @Override
            public of4gwt.TObject.Version createRead() {
                return null;
            }

            @Override
            public of4gwt.TObject.Version createVersion() {
                return new Method0.Version(this, FIELD_COUNT);
            }

            @Override
            public int getClassId() {
                return finance.client.generated.ObjectModel.FINANCE_CLIENT_GENERATED_OBJECTMODEL_METHOD_0_ID;
            }

            @SuppressWarnings("static-access")
            @Override
            public of4gwt.ObjectModel getObjectModel() {
                return finance.client.generated.ObjectModel.getInstance();
            }
        }
    }
}
