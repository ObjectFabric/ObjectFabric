
package part05.generated;

//==============================================================================
//                                                                              
//  THIS FILE HAS BEEN GENERATED BY OBJECTFABRIC                                
//                                                                              
//==============================================================================

@SuppressWarnings({ "hiding", "unchecked", "static-access", "unused", "cast", "rawtypes" })
public class ElectricCar extends part05.generated.Car {

    public ElectricCar(org.objectfabric.Resource resource, java.lang.String brand) {
        this(resource, brand, new org.objectfabric.TMap<part05.generated.User, part05.generated.Settings>(resource), new org.objectfabric.TMap<part05.generated.User, org.objectfabric.TSet<java.lang.String>>(resource));
    }

    public ElectricCar(org.objectfabric.Resource resource, java.lang.String brand, org.objectfabric.TMap<part05.generated.User, part05.generated.Settings> settings, org.objectfabric.TMap<part05.generated.User, org.objectfabric.TSet<java.lang.String>> log) {
        this(resource, new Version(FIELD_COUNT), FIELD_COUNT, brand, settings, log);
    }

    protected ElectricCar(org.objectfabric.Resource resource, org.objectfabric.TObject.Version shared, int length, java.lang.String brand, org.objectfabric.TMap<part05.generated.User, part05.generated.Settings> settings, org.objectfabric.TMap<part05.generated.User, org.objectfabric.TSet<java.lang.String>> log) {
        super(resource, shared, FIELD_COUNT, brand, settings, log);
    }

    public ElectricCar(ElectricCar toCopy) {
        this(toCopy.resource(), toCopy.brand(), toCopy.settings(), toCopy.log());

        text(toCopy.text());
        field(toCopy.field());
        boxed(toCopy.boxed());
        color(toCopy.color());
        driver(toCopy.driver());
        doors(toCopy.doors());
        child(toCopy.child());
        tag(toCopy.tag());
        battery(toCopy.battery());
    }

    public static final org.objectfabric.TType TYPE = new org.objectfabric.TType(part05.generated.MyObjectModel.instance(), part05.generated.MyObjectModel.PART05_GENERATED_ELECTRICCAR_CLASS_ID);

    public final part05.generated.Battery battery() {
        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startRead_(outer);
        Version v = (Version) getVersion32_(inner, BATTERY_INDEX);
        part05.generated.Battery value = v != null ? v._battery : null;
        endRead_(outer, inner);
        return value;
    }

    public final void battery(part05.generated.Battery value) {
        if (value.resource() != resource())
            wrongResource_();

        org.objectfabric.TObject.Transaction outer = current_();
        org.objectfabric.TObject.Transaction inner = startWrite_(outer);
        Version v = (Version) getOrCreateVersion_(inner);
        v._battery = value;
        v.setBit(BATTERY_INDEX);
        endWrite_(outer, inner);
    }

    public static final int BATTERY_INDEX = 11;

    public static final java.lang.String BATTERY_NAME = "battery";

    public static final org.objectfabric.TType BATTERY_TYPE = part05.generated.Battery.TYPE;

    public static final int FIELD_COUNT = 12;

    public static java.lang.String fieldName(int index) {
        switch (index) {
            case BATTERY_INDEX:
                return BATTERY_NAME;
            default:
                return part05.generated.Car.fieldName(index);
        }
    }

    public static org.objectfabric.TType fieldType(int index) {
        switch (index) {
            case BATTERY_INDEX:
                return BATTERY_TYPE;
            default:
                return part05.generated.Car.fieldType(index);
        }
    }

    @Override
    protected org.objectfabric.TObject.Version createVersion_() {
        Version version = new Version(0);
        version.setObject(this);
        return version;
    }

    @Override
    protected int classId_() {
        return part05.generated.MyObjectModel.PART05_GENERATED_ELECTRICCAR_CLASS_ID;
    }

    @Override
    protected org.objectfabric.ObjectModel objectModel_() {
        return part05.generated.MyObjectModel.instance();
    }

    protected static class Version extends part05.generated.Car.Version {

        public part05.generated.Battery _battery;

        private static final int _readOnlys;

        static {
            int readOnlys = 0;
            readOnlys = setBit(readOnlys, BRAND_INDEX);
            readOnlys = setBit(readOnlys, SETTINGS_INDEX);
            readOnlys = setBit(readOnlys, LOG_INDEX);
            _readOnlys = readOnlys;
        }

        public Version(int length) {
            super(length);
        }

        @Override
        public java.lang.String getFieldName(int index) {
            return fieldName(index);
        }

        @Override
        public org.objectfabric.TType getFieldType(int index) {
            return fieldType(index);
        }

        @Override
        public java.lang.Object getAsObject(int index) {
            switch (index) {
                case BATTERY_INDEX:
                    return _battery;
                default:
                    return super.getAsObject(index);
            }
        }

        @Override
        public void setAsObject(int index, java.lang.Object value) {
            switch (index) {
                case BATTERY_INDEX:
                    _battery = (part05.generated.Battery) value;
                    break;
                default:
                    super.setAsObject(index, value);
                    break;
            }
        }

        @Override
        public void merge(org.objectfabric.TObject.Version next) {
            ElectricCar.Version source = (ElectricCar.Version) next;

            if (source.hasBits()) {
                if (source.getBit(BATTERY_INDEX))
                    _battery = source._battery;
            }

            super.merge(next);
        }

        @Override
        public int getReadOnlys() {
            return _readOnlys;
        }

        @Override
        public void writeWrite(org.objectfabric.Writer writer, int index) {
            if (writer.interrupted())
                writer.resume();

            switch (index) {
                case BATTERY_INDEX: {
                    writer.writeTObject(_battery);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
                default: {
                    super.writeWrite(writer, index);

                    if (writer.interrupted()) {
                        writer.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }

        @Override
        public void readWrite(org.objectfabric.Reader reader, int index, java.lang.Object[] versions) {
            if (reader.interrupted())
                reader.resume();

            switch (index) {
                case BATTERY_INDEX: {
                    java.lang.Object value = reader.readTObject();

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    for (int i = versions.length - 1; i >= 0; i--) {
                        java.lang.Object v = value instanceof org.objectfabric.TObject[] ? ((org.objectfabric.TObject[]) value)[i] : value;
                        ((Version) versions[i])._battery = (part05.generated.Battery) v;
                    }

                    break;
                }
                default: {
                    super.readWrite(reader, index, versions);

                    if (reader.interrupted()) {
                        reader.interrupt(null);
                        return;
                    }

                    break;
                }
            }
        }
    }
}
